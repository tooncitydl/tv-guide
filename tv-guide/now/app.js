!function(e) {
    function t(t) {
        for (var a, r, c = t[0], s = t[1], l = t[2], u = 0, g = []; u < c.length; u++)
            r = c[u],
            o[r] && g.push(o[r][0]),
            o[r] = 0;
        for (a in s)
            Object.prototype.hasOwnProperty.call(s, a) && (e[a] = s[a]);
        for (d && d(t); g.length; )
            g.shift()();
        return i.push.apply(i, l || []),
        n()
    }
    function n() {
        for (var e, t = 0; t < i.length; t++) {
            for (var n = i[t], a = !0, r = 1; r < n.length; r++) {
                var s = n[r];
                0 !== o[s] && (a = !1)
            }
            a && (i.splice(t--, 1),
            e = c(c.s = n[0]))
        }
        return e
    }
    var a = {}
      , r = {
        2: 0
    }
      , o = {
        2: 0
    };
    var i = [];
    function c(t) {
        if (a[t])
            return a[t].exports;
        var n = a[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(n.exports, n, n.exports, c),
        n.l = !0,
        n.exports
    }
    c.e = function(e) {
        var t = [];
        r[e] ? t.push(r[e]) : 0 !== r[e] && {
            0: 1
        }[e] && t.push(r[e] = new Promise(function(t, n) {
            for (var a = ({
                0: "common"
            }[e] || e) + ".css", r = c.p + a, o = document.getElementsByTagName("link"), i = 0; i < o.length; i++) {
                var s = (u = o[i]).getAttribute("data-href") || u.getAttribute("href");
                if ("stylesheet" === u.rel && (s === a || s === r))
                    return t()
            }
            var l = document.getElementsByTagName("style");
            for (i = 0; i < l.length; i++) {
                var u;
                if ((s = (u = l[i]).getAttribute("data-href")) === a || s === r)
                    return t()
            }
            var d = document.createElement("link");
            d.rel = "stylesheet",
            d.type = "text/css",
            d.onload = t,
            d.onerror = function(t) {
                var a = t && t.target && t.target.src || r
                  , o = new Error("Loading CSS chunk " + e + " failed.\n(" + a + ")");
                o.request = a,
                n(o)
            }
            ,
            d.href = r,
            document.getElementsByTagName("head")[0].appendChild(d)
        }
        ).then(function() {
            r[e] = 0
        }));
        var n = o[e];
        if (0 !== n)
            if (n)
                t.push(n[2]);
            else {
                var a = new Promise(function(t, a) {
                    n = o[e] = [t, a]
                }
                );
                t.push(n[2] = a);
                var i = document.getElementsByTagName("head")[0]
                  , s = document.createElement("script");
                s.charset = "utf-8",
                s.timeout = 120,
                c.nc && s.setAttribute("nonce", c.nc),
                s.src = function(e) {
                    return c.p + "" + ({
                        0: "common"
                    }[e] || e) + ".js"
                }(e);
                var l = setTimeout(function() {
                    u({
                        type: "timeout",
                        target: s
                    })
                }, 12e4);
                function u(t) {
                    s.onerror = s.onload = null,
                    clearTimeout(l);
                    var n = o[e];
                    if (0 !== n) {
                        if (n) {
                            var a = t && ("load" === t.type ? "missing" : t.type)
                              , r = t && t.target && t.target.src
                              , i = new Error("Loading chunk " + e + " failed.\n(" + a + ": " + r + ")");
                            i.type = a,
                            i.request = r,
                            n[1](i)
                        }
                        o[e] = void 0
                    }
                }
                s.onerror = s.onload = u,
                i.appendChild(s)
            }
        return Promise.all(t)
    }
    ,
    c.m = e,
    c.c = a,
    c.d = function(e, t, n) {
        c.o(e, t) || Object.defineProperty(e, t, {
            configurable: !1,
            enumerable: !0,
            get: n
        })
    }
    ,
    c.r = function(e) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    c.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return c.d(t, "a", t),
        t
    }
    ,
    c.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    c.p = "",
    c.oe = function(e) {
        throw console.error(e),
        e
    }
    ;
    var s = window.webpackJsonp = window.webpackJsonp || []
      , l = s.push.bind(s);
    s.push = t,
    s = s.slice();
    for (var u = 0; u < s.length; u++)
        t(s[u]);
    var d = l;
    i.push([362, 1]),
    n()
}([, , , function(e, t, n) {
    e.exports = {
        placard: "placard__F797v",
        scheduleTime: "scheduleTime__1O4aG",
        scheduleName: "scheduleName__2-5xU",
        image: "image__izKkd",
        imagePortrait: "imagePortrait__2gMg7",
        triangle: "triangle__2PSY1",
        trianglePrice: "trianglePrice__3nYXP",
        progressBar: "progressBar__18QT2",
        logo: "logo__3dJIF",
        logoWithLink: "logoWithLink__3Rpkk",
        title: "title__2czUv",
        titleLogo: "titleLogo__1UNTt",
        portraitInformation: "portraitInformation__khnpN",
        portraitInfoBig: "portraitInfoBig__ARMjj",
        portraitInfoSmall: "portraitInfoSmall__1mYKu",
        button: "button__FyAAK",
        buttons: "buttons__2lAJT",
        buttonsWrapper: "buttonsWrapper__3SjCI",
        lowerPanel: "lowerPanel__afLiH",
        loading: "loading__1OXxe",
        recordIcon: "recordIcon__3b6UR",
        datePanel: "datePanel__37C12"
    }
}
, function(e, t, n) {
    "use strict";
    n.r(t),
    n.d(t, "toNumber", function() {
        return N
    }),
    n.d(t, "toMaxFixed", function() {
        return w
    }),
    n.d(t, "toCommercializationType", function() {
        return L
    }),
    n.d(t, "toTimestamp", function() {
        return $
    }),
    n.d(t, "toServerTime", function() {
        return R
    }),
    n.d(t, "toProductType", function() {
        return D
    }),
    n.d(t, "toProductTypeFromGoType", function() {
        return _
    }),
    n.d(t, "stringToStringsArray", function() {
        return O
    }),
    n.d(t, "stringToNumbersArray", function() {
        return U
    }),
    n.d(t, "pidsArrayToIdsArray", function() {
        return k
    }),
    n.d(t, "isPlainObject", function() {
        return x
    }),
    n.d(t, "isEmptyObject", function() {
        return j
    }),
    n.d(t, "getObjectParam", function() {
        return B
    }),
    n.d(t, "setObjectParam", function() {
        return F
    }),
    n.d(t, "capitalize", function() {
        return V
    }),
    n.d(t, "getDeepProperty", function() {
        return H
    }),
    n.d(t, "getProperty", function() {
        return G
    }),
    n.d(t, "getProperties", function() {
        return W
    }),
    n.d(t, "swap", function() {
        return q
    }),
    n.d(t, "removeDuplicates", function() {
        return Y
    }),
    n.d(t, "isPresent", function() {
        return z
    }),
    n.d(t, "isNotPresent", function() {
        return Q
    }),
    n.d(t, "hasElement", function() {
        return K
    }),
    n.d(t, "getVodPlayableMedias", function() {
        return X
    }),
    n.d(t, "getAnalyticsError", function() {
        return J
    }),
    n.d(t, "windowAssign", function() {
        return Z
    }),
    n.d(t, "isDefined", function() {
        return ee
    }),
    n.d(t, "noop", function() {
        return te
    }),
    n.d(t, "getItemTypeFromGoType", function() {
        return ne
    });
    var a = n(22)
      , r = n(1)
      , o = n(23)
      , i = n(128)
      , c = n(17)
      , s = n.n(c)
      , l = n(15)
      , u = n.n(l)
      , d = n(25)
      , g = n.n(d)
      , p = n(177)
      , m = n.n(p)
      , f = n(11)
      , h = n.n(f)
      , v = n(357)
      , y = n.n(v)
      , S = window.Math
      , b = 1e3
      , E = o.ProductType
      , T = o.MovieType
      , C = o.CommercializationType
      , P = o.MediaType
      , I = o.Quality
      , A = o.PlayType
      , M = a.a.goType;
    function N(e, t) {
        return parseFloat(e) || parseFloat(t) || 0
    }
    function w(e, t) {
        return parseFloat(N(e).toFixed(t))
    }
    function L(e) {
        return e === C.CATCHUP ? e = C.SVOD : isNaN(e) && (e = -1),
        e
    }
    function $(e) {
        return N(e) * b
    }
    function R(e) {
        return S.floor(N(e) / b)
    }
    function D(e) {
        var t;
        switch (e) {
        case T.Movie:
        case T.Episode:
            t = E.Movie;
            break;
        case T.Series:
            t = E.Serie;
            break;
        case T.Season:
            t = E.Season;
            break;
        default:
            t = E.Unknown
        }
        return t
    }
    function _(e) {
        var t;
        switch (e) {
        case M.Movie:
        case M.Episode:
            t = E.Movie;
            break;
        case M.Serie:
            t = E.Serie;
            break;
        case M.Season:
            t = E.Season;
            break;
        case M.Subscription:
            t = E.Subscription;
            break;
        default:
            t = E.Unknown
        }
        return t
    }
    function O(e) {
        return u()(e) ? e : e ? e.match(/([0-9]+)/g) : []
    }
    function U(e) {
        return O(e).map(function(e) {
            return parseInt(e, 10)
        })
    }
    function k(e, t) {
        return t = t || [],
        e.filter(function(e) {
            return t.indexOf(r.caUtils.getType(e)) > -1
        }).map(function(e) {
            return parseInt(r.caUtils.getId(e), 10)
        })
    }
    function x(e) {
        return !!e && e.constructor === Object
    }
    function j(e) {
        return !e || e.constructor !== Object || 0 === Object.getOwnPropertyNames(e).length
    }
    function B(e, t) {
        var n = e;
        if (t)
            for (var a = t.split("."), r = 0, o = a.length; r < o && null != n; r++)
                n = n[a[r]];
        return n
    }
    function F(e, t, n) {
        var a = e;
        if (t && g()(e)) {
            var r, o, i = t.split(".");
            for (r = 0,
            o = i.length; r < o - 1; r++)
                a[i[r]] = x(a[i[r]]) ? a[i[r]] : {},
                a = a[i[r]];
            a[i[r]] = n
        }
    }
    function V() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        return e.charAt(0).toUpperCase() + e.slice(1)
    }
    function H(e, t, n) {
        var a = t.split(".")
          , r = e;
        if (!e)
            return n;
        for (var o = 0, i = !1; !1 === i && o < a.length; o++)
            r = r[a[o]],
            i = m()(r);
        return ee(r) ? r : n
    }
    function G(e, t, n) {
        if (e) {
            var a = e[t];
            return m()(a) ? n : a
        }
        return n
    }
    function W(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
            n[a - 1] = arguments[a];
        return n.concat().map(function(t) {
            return H(e, t)
        })
    }
    function q(e) {
        var t = {};
        return s()(e, function(e, n) {
            t[e] = n
        }),
        t
    }
    function Y(e, t, n) {
        return "" !== e && n.indexOf(e) === t
    }
    function z(e, t) {
        return function(n) {
            return e.indexOf(t ? G(n, t) : n) >= 0
        }
    }
    function Q(e, t) {
        return function(n) {
            return e.indexOf(t ? G(n, t) : n) < 0
        }
    }
    function K(e, t) {
        return e.reduce(function(e, n) {
            return e || t(n)
        }, !1)
    }
    function X(e) {
        return e.medias.filter(function(t) {
            return t.type === P.Movie && t.quality >= e.qualityRented && t.quality >= e.availableForThisDeviceQualities && e.availableForThisDeviceQualities > I.Unknown
        }).filter(function(t) {
            var n = t.playType;
            return e.isTransparentCATCHUP && Object(i.a)().isDashSupported ? n === A.DASHAVC : n === A.SS
        }).sort(function(e, t) {
            return t.quality - e.quality
        })
    }
    function J(e, t) {
        return "".concat(e, "'_'").concat(t)
    }
    function Z(e) {
        window.location.assign(e)
    }
    function ee(e) {
        return !h()(e)
    }
    function te() {}
    function ne(e) {
        return a.a.itemType[y()(a.a.goType)[e]]
    }
}
, , function(e, t, n) {
    "use strict";
    n.d(t, "b", function() {
        return C
    }),
    n.d(t, "a", function() {
        return P
    });
    var a, r = n(5), o = n.n(r), i = n(80), c = n.n(i), s = n(0), l = n.n(s), u = n(351), d = n.n(u), g = n(350), p = n.n(g), m = n(349), f = n.n(m), h = n(348), v = n.n(h), y = n(68), S = n.n(y), b = n(18), E = n.n(b);
    function T(e) {
        return (a || (a = o.a.element(window.document).injector()),
        a).get(e)
    }
    function C() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
        return t.map(T)
    }
    function P(e) {
        var t = function(e) {
            var t = []
              , n = e.toString().replace(/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm, "")
              , a = n.match(/^([^(]+?)=>/) || n.match(/^[^(]*\(\s*([^)]*)\)/m)
              , r = a ? a[1].split(/,/)[0] : "";
            if (r) {
                var o = new RegExp("".concat(r, "\\.([a-zA-Z_$]{1}(?:[^\\s,;\\)]+)?)"),"mg")
                  , i = /\./
                  , c = e.match(o);
                t = c ? c.map(function(e) {
                    return e.split(i)[1]
                }) : []
            }
            return t
        }(e.toString());
        return {
            bindings: p()(t, f()(t.length, function() {
                return "<"
            })),
            controller: function(e) {
                var t = function(t) {
                    var n = this
                      , a = {};
                    this.$doCheck = function() {
                        v()(a, n.props) || (a = E()(n.props),
                        c.a.render(l.a.createElement(e, a), t[0]))
                    }
                    ,
                    this.$onChanges = function(a) {
                        n.props = d()(a, function(e) {
                            return e.currentValue
                        }),
                        S()(a) && c.a.render(l.a.createElement(e, null), t[0])
                    }
                    ,
                    this.$onDestroy = function() {
                        return c.a.unmountComponentAtNode(t[0])
                    }
                };
                return t.$inject = ["$element"],
                t
            }(e)
        }
    }
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", function() {
        return l
    }),
    n.d(t, "e", function() {
        return u
    }),
    n.d(t, "c", function() {
        return d
    }),
    n.d(t, "d", function() {
        return g
    }),
    n.d(t, "f", function() {
        return p
    }),
    n.d(t, "b", function() {
        return m
    }),
    n.d(t, "g", function() {
        return f
    });
    var a = n(2)
      , r = n.n(a)
      , o = n(166)
      , i = n.n(o)
      , c = n(0)
      , s = n(6);
    function l(e) {
        return Object(c.useReducer)(function(e, t) {
            return i()({}, e, t)
        }, e)
    }
    function u() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
        return Object(c.useMemo)(function() {
            return s.b.apply(void 0, t)
        })
    }
    function d() {
        var e = u("goSvcUserStatus")
          , t = r()(e, 1)[0]
          , n = Object(c.useState)(t.isLoggedIn)
          , a = r()(n, 2)
          , o = a[0]
          , i = a[1];
        return Object(c.useEffect)(function() {
            return t.$watch("isLoggedIn", function(e) {
                return i(e)
            })
        }, []),
        o
    }
    function g(e, t) {
        var n = u("goSvcLogger");
        return r()(n, 1)[0].getLogger(e, t)
    }
    function p() {
        var e = u("goSvcUserStatus")
          , t = r()(e, 1)[0]
          , n = Object(c.useState)("")
          , a = r()(n, 2)
          , o = a[0]
          , i = a[1];
        return Object(c.useEffect)(function() {
            return t.$watch("profile", function(e) {
                return e && i(e.id)
            })
        }, []),
        o
    }
    function m() {
        var e = u("$rootScope")
          , t = r()(e, 1)[0]
          , n = Object(c.useState)(window.location.pathname)
          , a = r()(n, 2)
          , o = a[0]
          , i = a[1];
        return Object(c.useEffect)(function() {
            return t.$on("$locationChangeSuccess", function() {
                i(window.location.pathname)
            })
        }, []),
        o
    }
    function f() {
        var e = u("$rootScope", "goCnstEnumerated")
          , t = r()(e, 2)
          , n = t[0]
          , a = t[1]
          , o = Object(c.useState)(!1)
          , i = r()(o, 2)
          , s = i[0]
          , l = i[1]
          , d = a.goEvents.PURCHASE_SUCCESS;
        return Object(c.useEffect)(function() {
            return n.$on(d, function() {
                return l(!0)
            })
        }, []),
        s
    }
}
, , , , , , function(e, t, n) {
    e.exports = {
        header: "header__1KSp9",
        row: "row__3XzKb",
        available: "available__2mqpl",
        body: "body__YaKAu",
        channel: "channel__2MFMA",
        recording: "recording__nq6_v",
        buttons: "buttons__1Mp_s",
        center: "center__3yIID",
        type: "type__2xhie",
        link: "link__2HWqc",
        duration: "duration__3PZa0",
        dropdownToggle: "dropdownToggle__o_GNv",
        loading: "loading__Wzzpr"
    }
}
, , , , , , , , function(e, t, n) {
    "use strict";
    n.d(t, "b", function() {
        return h
    }),
    n.d(t, "c", function() {
        return y
    }),
    n.d(t, "a", function() {
        return v
    });
    var a = n(57)
      , r = n.n(a)
      , o = 2
      , i = "2B"
      , c = 1
      , s = ","
      , l = "|"
      , u = "-"
      , d = "zxx"
      , g = "org"
      , p = "qaa";
    function m() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        return r.a.where(i, e) || r.a.where(o, e) || r.a.where(c, e) || r.a.where(c, e.split(u)[0])
    }
    function f(e) {
        return e === g ? p : e
    }
    function h(e) {
        var t = f(e)
          , n = m(t);
        return n ? n[o] : t
    }
    function v(e) {
        var t = m(e);
        return t ? t.name : e
    }
    function y(e) {
        return e.split(s).map(function(e) {
            return f(e.split(l).find(function(e, t, n) {
                return (e = e.trim()) === d || (r.a.has(o, e) ? h(e) : t === n.length - 1 && e)
            }).trim())
        })
    }
}
, function(e, t, n) {
    "use strict";
    (function(e) {
        n.d(t, "a", function() {
            return a
        });
        n(1);
        var a = {
            goType: {
                Unknown: 0,
                Movie: 1,
                Serie: 2,
                Season: 3,
                Episode: 4,
                Subscription: 5,
                LiveProgram: 6,
                LiveChannel: 7,
                VodChannel: 8
            },
            itemType: {
                None: 0,
                Movie: 1,
                Episode: 2,
                Season: 4,
                Serie: 8,
                Subscription: 16,
                VodChannel: 32,
                LiveChannel: 64,
                LiveProgram: 128,
                Recording: 256
            },
            goSource: {
                productModel: 1,
                catalogModel: 2,
                liveModel: 3,
                pid: 4
            },
            goPlayingType: {
                trailer: "trailer",
                vod: "vod",
                live: "live",
                fabrixLive: "fabrixLive",
                recording: "recording"
            },
            goStatusCode: {
                locationChanged: {
                    code: 1,
                    title: "Promise rejected due to location changed."
                },
                epg: {
                    noPrograms: {
                        code: 1,
                        title: "No programs available"
                    }
                },
                settings: {
                    cardNotFound: {
                        code: e.StatusCode.CreditCardWasNotFound
                    }
                }
            },
            goEvents: {
                FATAL_ERROR: "FATAL_ERROR",
                PLAY_LIVE: "GO_PLAY_LIVE",
                PLAY_FABRIX_LIVE: "GO_PLAY_FABRIX_LIVE",
                CONTENT_UPDATED: "CONTENT_UPDATED",
                CONTENT_TAGGED_WATCHED: "CONTENT_TAGGED_WATCHED",
                RESUME_UPDATED: "RESUME_DATA_UPDATED",
                CONTENT_TAGGED_COMPLETED: "CONTENT_TAGGED_COMPLETED",
                PURCHASE_SUCCESS: "PURCHASE_SUCCESS",
                RECORDINGS_UPDATED: "RECORDINGS_UPDATED",
                EPISODE_SELECTED: "EPISODE_SELECTED",
                SEASON_SELECTED: "SEASON_SELECTED",
                NAVIGABLE_HEADER: "NAVIGABLE_HEADER"
            },
            webStorage: {
                userKey: "go-user-data-",
                testStatusKey: "go-testing-key"
            },
            pvrRecordingHierarchy: {
                parent: 0,
                child: 1
            },
            linkTarget: {
                self: "",
                blank: "_blank"
            },
            slug: {
                blank: "",
                space: "-",
                amper: "-",
                charMap: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "-", "", "", "", "", "", "-", "", "-", "-", "", "", "-", "-", "-", "-", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "-", "-", "", "-", "", "", "", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "-", "-", "-", "", "-", "", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "-", "", "-", "", "", "C", "A", "", "f", "", "", "T", "t", "", "", "S", "", "CE", "A", "Z", "A", "A", "", "", "", "", "", "-", "-", "", "TM", "s", "", "ae", "A", "z", "Y", "", "", "c", "L", "o", "Y", "", "S", "", "c", "a", "", "", "", "r", "-", "o", "", "2", "3", "", "u", "p", "", "", "1", "o", "", "", "", "", "", "A", "A", "A", "A", "A", "A", "AE", "C", "E", "E", "E", "E", "I", "I", "I", "I", "D", "N", "O", "O", "O", "O", "O", "x", "O", "U", "U", "U", "U", "Y", "D", "B", "a", "a", "a", "a", "a", "a", "ae", "c", "e", "e", "e", "e", "i", "i", "i", "i", "o", "n", "o", "o", "o", "o", "o", "", "o", "u", "u", "u", "u", "y", "", "y", "A", "a", "A", "a", "A", "a", "C", "c", "C", "c", "C", "c", "C", "c", "D", "d", "D", "d", "E", "e", "E", "e", "E", "e", "E", "e", "E", "e", "G", "g", "G", "g", "G", "g", "G", "g", "H", "h", "H", "h", "I", "i", "I", "i", "I", "i", "I", "i", "I", "i", "IJ", "ij", "J", "j", "K", "k", "k", "L", "l", "L", "l", "L", "l", "L", "l", "L", "l", "N", "n", "N", "n", "N", "n", "n", "N", "n", "O", "o", "O", "o", "O", "o", "OE", "oe", "R", "r", "R", "r", "R", "r", "S", "s", "S", "s", "S", "s", "S", "s", "T", "t", "T", "t", "T", "t", "U", "u", "U", "u", "U", "u", "U", "u", "U", "u", "U", "u", "W", "w", "Y", "y", "Y", "Z", "z", "Z", "z", "Z", "z", "s", "Az", "s", "AY", "s", "A", "c", "AS", "c", "A", "i", "A", "i", "AY", "g", "Az", "g", "A", "u", "A", "u", "A", "o", "A", "o"]
            },
            search: {
                queryParam: "q",
                typeParam: "t"
            },
            pin: {
                pattern: "(^[0-9]{4}$)",
                length: 4
            },
            logger: {
                active: {
                    Production: !1,
                    default: !0
                },
                level: "ALL"
            },
            epg: {
                channels: {
                    min: 8
                },
                programs: {
                    min: 2
                },
                retries: {
                    max: 5
                },
                schedule: {
                    interval: 2
                },
                chunk: {
                    general: 10
                }
            },
            live: {
                channels: {
                    min: 20
                },
                programs: {
                    min: 2
                }
            },
            timeoutMaxValue: 1728e5,
            catalog: {
                orderBy: [{
                    id: CONTENTAPI.caTypes.SORT_TYPES.DEFAULT,
                    translationKey: "library.orders.featured"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.TITLE,
                    translationKey: "library.orders.alphabetic"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.RELEASE_DATE,
                    translationKey: "library.orders.releaseYear"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.PUBLICATION_DATE,
                    translationKey: "library.orders.publicationDate"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.AVAILABILITY_DATE,
                    translationKey: "library.orders.new"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.POPULARITY,
                    translationKey: "library.orders.popularity"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.EDITORIAL_RATING,
                    translationKey: "library.orders.editorialRating"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.MOST_RATED,
                    translationKey: "library.orders.mostRated"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.DURATION,
                    translationKey: "library.orders.duration"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.LICENSE_AVAILABILITY_END,
                    translationKey: "library.orders.licenseAvailabilityEnd"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.PERSONAL,
                    translationKey: "library.orders.personal"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.TITLE_DESC,
                    translationKey: "library.orders.titleDesc"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.EPISODE_ORDER,
                    translationKey: "library.orders.episodeOrder"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.SEASON_ORDER,
                    translationKey: "library.orders.seasonOrder"
                }, {
                    id: CONTENTAPI.caTypes.SORT_TYPES.RELEVANCE,
                    translationKey: "library.orders.relevance"
                }],
                types: {
                    vod: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.VOD,
                        title: "vod",
                        translationKey: "library.types.vod"
                    }],
                    live: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.LIVE,
                        title: "live",
                        translationKey: "library.types.live"
                    }],
                    l7d: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.L7D,
                        title: "l7d",
                        translationKey: "library.types.l7d"
                    }],
                    vodAndLive: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.VOD_LIVE,
                        title: "vodAndLive",
                        translationKey: "library.types.all"
                    }],
                    vodAndL7d: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.VOD_L7D,
                        title: "vodAndL7d",
                        translationKey: "library.types.all"
                    }],
                    liveAndL7d: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.L7D_LIVE,
                        title: "liveAndL7d",
                        translationKey: "library.types.all"
                    }],
                    all: [{
                        id: CONTENTAPI.caTypes.CHANNEL_CONTENT_TYPE.VOD_L7D_LIVE,
                        title: "all",
                        translationKey: "library.types.all"
                    }]
                }
            },
            boxLayout: {
                baseWidth: 308,
                baseHeight: 172,
                margin: 20,
                vod: {
                    aspectRatio: 1.48
                }
            },
            pinTypes: {
                parental: 1,
                purchase: 2
            },
            callbackSIAPaths: {
                registration: {
                    ok: "registration/user-welcome",
                    nok: "registration/choose-subscription?status=nok"
                },
                settings: {
                    ok: "settings/user-info",
                    nok: "settings/user-info?status=nok"
                }
            },
            siaErrors: {
                expiredCard: ["0101"],
                data: ["0201", "0202", "0203", "0204"],
                captcha: ["0205"],
                expiredForm: ["0210"],
                processingData: ["0220", "0221", "0222", "0223", "0224", "0225", "0226", "0230"],
                bank: ["0270", "0271", "0272", "0273", "0275", "0276", "0279", "0280", "0283", "0405", "0406", "0407", "0408", "0904", "0909", "0912", "0913", "0914", "0916"],
                duplicatedCard: ["0274"],
                restrictedCard: ["0277"],
                cvv: ["0278"],
                notEnoughMoney: ["0281"],
                name: ["0282"],
                anotherOperation: ["0913"]
            },
            servicesTypes: {
                nPVRServiceTypeName: "nPVR",
                rPVRServiceTypeName: "rPVR",
                cPVRServiceTypeName: "cPVR",
                blockTvodServiceTypeName: "BlockTVOD",
                l7dServiceTypeName: "AdvancedTV",
                liveServiceTypeName: "LiveTV",
                amazonServiceTypeName: "AmazonHardBundle"
            },
            languages: {
                audio: "audio",
                subtitle: "subtitle",
                autoCode: "",
                offCode: "zxx",
                originalCode: "qaa",
                UserPreferenceNotRegistered: e.StatusCode.UserPreferenceNotRegistered
            },
            bingeWatching: {
                autoplay: "autoplay"
            },
            cookies: {
                path: "/",
                secure: !1,
                expiration: 2592e3,
                userCookieExpiration: 2147483647,
                userCookiesKey: "_user-keys",
                pvrWarning: {
                    key: "pvrWarningFirstTime",
                    expiration: 31536e3
                },
                blockedRecording: {
                    key: "blockedRecordingFirstTime",
                    expiration: 31536e3
                }
            },
            features: {
                playbackUnsupportedBrowsers: {
                    "chrome:*-44:*:*": {
                        title: "features.title.upgradeChrome",
                        message: "features.messages.upgradeChrome",
                        ableToReproduce: !1,
                        hideSuggestions: !0
                    },
                    "edge:*-11:*:*": {
                        title: "features.title.upgradeEdge",
                        message: "features.messages.upgradeEdge",
                        ableToReproduce: !1,
                        hideSuggestions: !0
                    },
                    "firefox:*-46:*:*": {
                        title: "features.title.upgradeFirefox",
                        message: "features.messages.upgradeFirefox",
                        ableToReproduce: !1,
                        hideSuggestions: !0
                    },
                    "firefox:47-*:windows:xp": {
                        title: "features.title.firefoxXP",
                        message: "features.messages.firefoxXP",
                        ableToReproduce: !1
                    },
                    "safari:*-*:*:*": {
                        title: "features.title.unsupportedBrowser",
                        message: "features.messages.unsupportedBrowser",
                        ableToReproduce: !1
                    },
                    "ie:*-*:*:*": {
                        title: "features.title.unsupportedBrowser",
                        message: "features.messages.unsupportedBrowser",
                        ableToReproduce: !1
                    },
                    "opera:*-*:*:*": {
                        title: "features.title.unsupportedBrowser",
                        message: "features.messages.unsupportedBrowser",
                        ableToReproduce: !1
                    }
                },
                transparentCatchupUnsupportedBrowsers: {
                    "chrome:0-41:*:*": {
                        message: "features.messages.transparentCatchupNotSupported",
                        ableToReproduce: !1
                    },
                    "firefox:0-46:*:*": {
                        message: "features.messages.transparentCatchupNotSupported",
                        ableToReproduce: !1
                    },
                    "firefox:47-*:windows:xp": {
                        message: "features.messages.transparentCatchupNotSupported",
                        ableToReproduce: !1
                    },
                    "ie:*:*:*": {
                        message: "features.messages.transparentCatchupNotSupported",
                        ableToReproduce: !1
                    },
                    "safari:*:*:*": {
                        message: "features.messages.transparentCatchupNotSupported",
                        ableToReproduce: !1
                    },
                    "edge:*:*:*": {
                        message: "features.messages.transparentCatchupNotSupported",
                        ableToReproduce: !1
                    }
                },
                navigationSupportedBrowsers: ["chrome:45-*:*:*", "firefox:47-*:*:*", "edge:12-*:windows:*"],
                cookie: {
                    key: "player-warning",
                    expiration: 2592e3
                }
            },
            sharingLogo: "share.png",
            suggestedBrowsers: ["chrome:*", "firefox:*", "ie:windows", "safari:mac"],
            suggestedBrowsersTransparentCatchup: ["chrome:*", "firefox:*"],
            suggestedBrowsersInfo: {
                chrome: {
                    name: "Chrome",
                    version: "42+",
                    url: "http://www.google.com/intl/{{#_iso_}}/chrome/browser/desktop"
                },
                firefox: {
                    name: "Mozilla Firefox",
                    version: "47+",
                    url: "https://www.mozilla.org/{{#iso}}/firefox/new"
                },
                ie: {
                    name: "Internet Explorer",
                    version: "10+",
                    url: "http://windows.microsoft.com/{{#iso}}/internet-explorer/download-ie"
                },
                safari: {
                    name: "Safari",
                    version: "6+",
                    url: "http://support.apple.com/{{#_iso_}}/downloads/#safari"
                }
            },
            browserCookie: {
                key: "browser-warning",
                expiration: 3600
            },
            adults: {
                cookie: {
                    key: "_pa",
                    expiration: 900
                }
            },
            imageSets: {
                placardLandscape: {
                    "576w": {
                        width: 288,
                        height: 162
                    },
                    "2166w": {
                        width: 455,
                        height: 256
                    }
                },
                placardLandscapeBig: {
                    "576w": {
                        width: 576,
                        height: 324
                    },
                    "2166w": {
                        width: 910,
                        height: 512
                    }
                },
                placardPortrait: {
                    "576w": {
                        width: 107,
                        height: 162
                    },
                    "2166w": {
                        width: 169,
                        height: 256
                    }
                },
                placardPortraitBig: {
                    "576w": {
                        width: 214,
                        height: 324
                    },
                    "2166w": {
                        width: 338,
                        height: 512
                    }
                }
            },
            imageSizes: {
                banner: {
                    banner: {
                        width: 455,
                        height: 256
                    },
                    bannerBig: {
                        width: 683,
                        height: 384
                    },
                    bannerDetail: {
                        width: 1400,
                        height: 787
                    },
                    bannerCatchup: {
                        height: 80,
                        options: {
                            resize: "RATIO",
                            format: "PNG"
                        }
                    }
                },
                landscapeCover: {
                    landscapeCover: {
                        width: 455,
                        height: 256
                    },
                    landscapeCoverBig: {
                        width: 683,
                        height: 384
                    },
                    landscapeCoverDetail: {
                        width: 1400,
                        height: 787
                    }
                },
                videoFrame: {
                    videoFrame: {
                        width: 455,
                        height: 256
                    },
                    videoFrameBig: {
                        width: 683,
                        height: 384
                    },
                    videoFrameDetail: {
                        width: 1400,
                        height: 787
                    },
                    videoFrameDetailUpcoming: {
                        width: 1400,
                        height: 787,
                        options: {
                            saturation: 0,
                            contrast: 1.55,
                            addColor: "%23002C36",
                            brightness: .61
                        }
                    },
                    videoFrameUpcoming: {
                        width: 455,
                        height: 256,
                        options: {
                            saturation: 0,
                            contrast: 1.55,
                            addColor: "%23002C36",
                            brightness: .61
                        }
                    }
                },
                cover: {
                    cover: {
                        width: 169,
                        height: 256
                    },
                    coverBig: {
                        width: 300,
                        height: 453
                    },
                    coverDetail: {
                        width: 400,
                        height: 605
                    },
                    coverSubscription: {
                        width: 1024,
                        height: 429
                    },
                    coverProducer: {
                        height: 32,
                        options: {
                            resize: "RATIO",
                            format: "PNG"
                        }
                    }
                },
                originalCover: {
                    originalCover: {
                        width: 169,
                        height: 256
                    },
                    originalCoverBig: {
                        width: 300,
                        height: 453
                    }
                },
                portraitArt: {
                    portraitArt: {
                        width: 169,
                        height: 256
                    },
                    portraitArtBig: {
                        width: 300,
                        height: 453
                    },
                    portraitArtDetail: {
                        width: 400,
                        height: 605
                    }
                },
                logo: {
                    logo: {
                        height: 60,
                        options: {
                            format: "PNG",
                            resize: "RATIO"
                        }
                    },
                    logoBig: {
                        height: 140,
                        options: {
                            format: "PNG",
                            resize: "RATIO"
                        }
                    },
                    logoSubscription: {
                        width: 308,
                        options: {
                            resize: "RATIO"
                        }
                    }
                },
                icon: {
                    icon: {
                        height: 50,
                        options: {
                            format: "PNG",
                            resize: "RATIO"
                        }
                    },
                    iconBig: {
                        height: 60,
                        options: {
                            format: "PNG",
                            resize: "RATIO"
                        }
                    },
                    iconCatchup: {
                        height: 80,
                        options: {
                            format: "PNG",
                            resize: "RATIO"
                        }
                    }
                }
            },
            catalogItemType: {
                MOV: 1,
                GEN: 16,
                PER: 32,
                LPR: 64,
                LCH: 256,
                SER: 512,
                SEA: 1024,
                EPI: 2048,
                SUB: 132,
                CHA: 4096
            },
            youboraIntegrationLevel: {
                Disabled: 0,
                Vod: 1,
                Live: 2,
                Both: 3
            },
            allowedBots: ["bot", "Google Search Console", "Google PP", "PhantomJS", "Google Page Speed Insights"],
            cookiesWarning: {
                key: "cookies-warning",
                value: "cookies-warning-accepted",
                expiration: 31536e3
            },
            routes: {
                catchup: "channels",
                catalog: "catalog",
                contents: "contents",
                details: "details",
                movie: "details/movie",
                serie: "details/serie",
                live: "details/live",
                epg: "tv-guide",
                epgNow: "tv-guide/now",
                subscription: "details/subscription",
                settings: {
                    main: "settings",
                    parentalControl: "parental-control",
                    purchasePin: "purchase-pin",
                    userInfo: "user-info",
                    manageDevices: "manage-devices",
                    notifications: "notifications",
                    mySubscriptions: "my-subscriptions",
                    l7d: "l7d",
                    audiosAndSubtitles: "audio-and-subtitles"
                }
            },
            transparentProviders: {
                NONE: 0,
                HBO: 1,
                FOX: 2,
                FOX_QP: 3
            },
            trustedDeviceKey: "_tdi",
            netflix: {
                cookie: "_nfx",
                channel: "Web",
                expirationTime: 86400,
                partnerURL: "partner/home?ptoken="
            },
            amazon: {
                producer: "Amazon",
                redirect: "Redirect",
                activate: "ActivateAccount",
                service: "AmazonHardBundle"
            },
            contentWiseTypes: {
                LIVE_NOW: {
                    useCase: "UXR_LIVE_NOW",
                    layout: "recomm"
                },
                TA_HIGHLIGHT: {
                    useCase: "UXR_THEMATIC_AREA_HIGHLIGHT",
                    layout: "recomm",
                    customUXR: !0
                },
                LIVE_HIGHLIGHT: {
                    useCase: "UXR_LIVE_HIGHLIGHT",
                    layout: "recomm",
                    customUXR: !0
                },
                TA_PAGE: {
                    useCase: "UXR_THEMATIC_AREA_PAGE",
                    layout: "rec_search",
                    customUXR: !0
                },
                SIMILAR: {
                    useCase: "UXR_SIMILAR",
                    layout: "recomm"
                },
                VOD_SIMILAR: {
                    useCase: "UXR_VOD_SIMILAR",
                    layout: "recomm"
                },
                SEARCH: {
                    useCase: "UXR_SEARCH",
                    layout: "rec_search"
                },
                SEARCH_GHOST: {
                    useCase: "UXR_SEARCH_GHOST",
                    useCaseAvailability: "UC_SEARCH_GHOST",
                    layout: "rec_search"
                },
                EXTENSION: {
                    useCase: "HOME_EXTENSION",
                    layout: "rec_page",
                    customUXR: !0
                },
                SUBSCRIPTION_RELATED: {
                    useCase: "UXR_SUBSCRIPTION_PAGE",
                    layout: "recomm",
                    customUXR: !0
                }
            },
            restartTV: {
                BACK_TO_LIVE_BOUND: 10
            },
            socialShare: {
                window: {
                    width: 500,
                    height: 400
                },
                url: {
                    facebook: "https://www.facebook.com/sharer/sharer.php",
                    twitter: "https://twitter.com/intent/tweet"
                }
            },
            spotlight: {
                defaultUrl: "//spotlight.cdn.telefonica.com",
                path: "/customer/v1/source",
                effects: {
                    epgUpcoming: {
                        saturation: 0,
                        contrast: 1.55,
                        addColor: "%23002C36",
                        brightness: .61
                    }
                }
            },
            externalAuth: {
                common: {
                    tokenExpiration: 6e5,
                    localStorageKey: "eat",
                    token: "token"
                },
                tasa: {
                    name: "tasa",
                    params: {
                        path: "/auth/tasa",
                        status: "status",
                        token: "token",
                        relayState: "relayState",
                        expiration: "expiration"
                    }
                },
                oidc: {
                    name: "oidc",
                    nonce: "nonce",
                    params: {
                        path: "/auth/oidc",
                        logout: "/auth/logout-oidc",
                        status: "status",
                        token: "token",
                        payloadDevice: "payloadDevice",
                        expiration: "expiration"
                    }
                },
                sso: {
                    name: "sso",
                    params: {
                        path: "/auth/sso",
                        status: "status",
                        token: "token",
                        payloadDevice: "payloadDevice",
                        expiration: "expiration"
                    }
                }
            },
            panic: {
                searchId: "id",
                fallbackPath: "/",
                path: "/highlight",
                urlWhitelist: ["/rememberPassword", "/newPassword", "/auth"]
            },
            networkCatchupCacheInvalidation: {
                defaultRange: 30,
                dateFormat: "yyyyMMddHHmm"
            },
            player: {
                dash: {
                    track: "AdaptationSet",
                    type: "contentType",
                    lang: "lang",
                    audio: "audio",
                    subtitle: "text",
                    subtitleVspp: "subtitle"
                },
                smoothStreaming: {
                    track: "StreamIndex",
                    type: "Type",
                    lang: "Language",
                    audio: "audio",
                    subtitle: "text",
                    subtitleVspp: "text"
                }
            }
        }
    }
    ).call(this, n(23))
}
, , , , function(e, t, n) {
    e.exports = {
        cell: "cell__3XXAA",
        duration: "duration__BTSEW",
        header: "header__2jMzR",
        row: "row__2Nq7_",
        image: "image__RESnl",
        title: "title__3HpMu",
        genre: "genre__1Xgmd",
        status: "status__2edkR",
        added: "added__3F0jA",
        cover: "cover__nzb81",
        "go-image-element": "go-image-element__1YW-Y",
        center: "center__1Cbxf",
        removeIcon: "removeIcon__3uFZF",
        remove: "remove__2IVrp",
        removeAnimation: "removeAnimation__1mf6i",
        removed: "removed__3yC8J",
        "external-catchup": "external-catchup__2392P"
    }
}
, , , function(e, t, n) {
    e.exports = {
        firstLevel: "firstLevel__zjh64",
        menu: "menu__25e7i",
        registerHeader: "registerHeader__2JKdU",
        "go-second-header--search": "go-second-header--search__32Gyq",
        "go-second-header--categories": "go-second-header--categories__3qCVG",
        logo: "logo__2Nl01",
        logoImage: "logoImage___hsX8",
        menuItem: "menuItem__kKeRh",
        menuItemMain: "menuItemMain__3wS2l",
        menuIconMain: "menuIconMain__OPR_m",
        menuIconContents: "menuIconContents__1tEFr",
        menuIconSettings: "menuIconSettings__3a9Uf",
        menuItemText: "menuItemText__2sxAR"
    }
}
, , , , , , function(e, t, n) {
    e.exports = {
        searchBox: "searchBox__3gLlE",
        wrapper: "wrapper__DkX-Q",
        boxOpen: "boxOpen__3nXob",
        placeholder: "placeholder__3ra7y",
        form: "form__2Zp3v",
        boxClose: "boxClose__3nlcv",
        box: "box__259PP",
        msClear: "msClear__17Cy9",
        searchBox__open: "searchBox__open___F3EZ",
        "searchBox--box": "searchBox--box__2HnNc",
        suggestionsContainer: "suggestionsContainer__3A9CS",
        suggestions: "suggestions__HpbcC",
        title: "title__1Sw2A",
        matched: "matched__2mJs-",
        remove: "remove__2_VlW"
    }
}
, function(e, t, n) {
    e.exports = {
        table: "table__6npHJ",
        cell: "cell__3RMwK",
        header: "header__ECVK9",
        row: "row__3No1Y",
        duration: "duration__2IfJ8",
        body: "body__1B3ed",
        closeIcon: "closeIcon__1myDG",
        close: "close__13kAL",
        removeIcon: "removeIcon__36CNe",
        info: "info__6D5fM",
        removed: "removed__2mwwx",
        infoWrapper: "infoWrapper__2dOn3",
        text: "text__uv3jI",
        confirm: "confirm__rmeC5"
    }
}
, , , , , function(e, t, n) {
    e.exports = {
        toggle: "toggle__3wIOX",
        item: "item__2YMSF",
        arrow: "arrow__3bvCe",
        top: "top__2jFlz",
        bottom: "bottom__31eNG",
        menu: "menu__GG_ps",
        loading: "loading__3sana",
        visible: "visible__1h-et"
    }
}
, function(e, t, n) {
    e.exports = {
        menubarBreakpoint: "75",
        secondLevel: "secondLevel__1Orek",
        expanded: "expanded__1DxRw",
        collapsed: "collapsed__2qoj6",
        registerHeader: "registerHeader__2Ms2s",
        "go-second-header--search": "go-second-header--search__WsNJ5",
        "go-second-header--menu": "go-second-header--menu__2A6Qo",
        "go-second-header--categories": "go-second-header--categories__2c694",
        categories: "categories__38HCt",
        categoriesElement: "categoriesElement__1y_P5",
        adult: "adult__U2sdp"
    }
}
, , , function(e, t, n) {
    e.exports = {
        main: "main__1YGmU",
        error: "error__3Drn5",
        errorText: "errorText__CL3IZ",
        errorTitle: "errorTitle__29sG0",
        errorSubtitle: "errorSubtitle__1PQRg",
        editorialBig: "editorialBig__5j6IW",
        editorialSmall: "editorialSmall__2vuYL",
        placardSmall: "placardSmall__3p3GO"
    }
}
, , , function(e, t, n) {
    e.exports = {
        firstHeader: "firstHeader__aMm5l",
        nav: "nav__2j-tY",
        link: "link__Td1fN",
        barSeparator: "barSeparator__36xjx"
    }
}
, function(e, t, n) {
    e.exports = {
        footer: "footer__3XQcU",
        links: "links__PMm4W",
        link: "link__268lg",
        barSeparator: "barSeparator__38hpm",
        branding: "branding__Zuc7q"
    }
}
, function(e, t, n) {
    e.exports = {
        containerSize: "containerSize__9plVw",
        portrait: "portrait__3mjwQ",
        container: "container__3OjQ4",
        left: "left__1cvit",
        right: "right__1rd0W",
        center: "center__2urp5",
        logo: "logo__3WP1o",
        logoShadow: "logoShadow__s1fU1",
        error: "error__23Y5I"
    }
}
, , , , , , function(e, t, n) {
    e.exports = {
        phoneLandscapeSize: "576",
        tabletSize: "768",
        desktopSize: "960",
        televisionSize: "1366",
        televisionHdSize: "1766",
        television4kSize: "2166"
    }
}
, , function(e, t, n) {
    e.exports = {
        image: "image__25GMs",
        error: "error__3x_64",
        errorPortrait: "errorPortrait__jFfD4",
        errorText: "errorText__2KP-U",
        spotlight: "spotlight__2FuVD",
        spotlightPortrait: "spotlightPortrait__F4WRz"
    }
}
, , , , , , , , , function(e, t) {
    e.exports = '<div class=go-details-billboard data-ng-class="::{\'go-details__portrait\': $ctrl.portraitImage}"> <data-go-mdl-details-cmp-logo data-ng-if=::$ctrl.hasLogo class=go-details--logo data-product=::$ctrl.product> </data-go-mdl-details-cmp-logo> <div class=go-details--img-wrapper> <div class=go-details--img data-ng-style="::{\'background-image\': \'url({{$ctrl.bkgLandscapeImage}})\'}"></div> </div> <div class=go-details--content-portrait data-ng-if=::$ctrl.portraitImage> <div class=go-details--img-portrait data-go-drct-image={{::$ctrl.portraitImage}}></div> </div> <div class=go-details--info> <div class=go-details--header> <data-go-mdl-details-cmp-emitted class=go-details--emitted data-ng-if=::$ctrl.hasL7dEmitted data-product=::$ctrl.product> </data-go-mdl-details-cmp-emitted> <data-go-mdl-details-cmp-title class=go-details--title data-title=::$ctrl.title> </data-go-mdl-details-cmp-title> </div> <div class=go-details--buttons data-ng-class="{\'go-details--buttons__portrait\': $ctrl.portraitImage}"> <data-go-mdl-catchup-cmp-main data-ng-if=::$ctrl.hasCatchupBtn data-product=$ctrl.product></data-go-mdl-catchup-cmp-main> <data-go-mdl-details-cmp-subscribe data-ng-if=::$ctrl.hasSubscribeBtn data-product=$ctrl.product></data-go-mdl-details-cmp-subscribe> <data-go-mdl-details-cmp-subscribe-dropdown data-ng-if=::$ctrl.hasSubscribeBtn data-product=$ctrl.product></data-go-mdl-details-cmp-subscribe-dropdown> <data-go-mdl-details-cmp-purchase data-ng-if=::$ctrl.hasPurchaseBtn data-product=$ctrl.product></data-go-mdl-details-cmp-purchase> <data-go-mdl-details-cmp-purchase-dropdown data-ng-if=::$ctrl.hasPurchaseBtn data-product=$ctrl.product></data-go-mdl-details-cmp-purchase-dropdown> <data-go-mdl-details-cmp-amazon-button data-ng-if=::$ctrl.hasAmazonBtn data-product=$ctrl.product></data-go-mdl-details-cmp-amazon-button> <data-go-mdl-details-cmp-play-vod data-ng-if=::$ctrl.hasPlayBtn data-product=$ctrl.playbackProduct data-show-text=$ctrl.showText></data-go-mdl-details-cmp-play-vod> <data-go-mdl-details-cmp-play-live data-ng-if=::$ctrl.hasPlayLiveBtn data-product=$ctrl.playbackProduct></data-go-mdl-details-cmp-play-live> <data-go-mdl-details-cmp-play-now data-ng-if=::$ctrl.hasPlayNowBtn data-product=$ctrl.product></data-go-mdl-details-cmp-play-now> <data-go-mdl-details-cmp-record data-ng-if=::$ctrl.hasRecordBtn data-product=$ctrl.product></data-go-mdl-details-cmp-record> <data-go-mdl-details-cmp-restart-vod data-ng-if=::$ctrl.hasRestartBtn data-product=$ctrl.playbackProduct></data-go-mdl-details-cmp-restart-vod> <data-go-mdl-details-cmp-restart-live data-ng-if=::$ctrl.hasRestartLiveBtn data-product=$ctrl.product></data-go-mdl-details-cmp-restart-live> <data-go-mdl-details-cmp-toggle-button-watchlist data-ng-if=::$ctrl.hasWatchlistBtn data-product=$ctrl.product></data-go-mdl-details-cmp-toggle-button-watchlist> <data-go-mdl-details-cmp-toggle-button-follow data-ng-if=::$ctrl.hasFollowBtn data-product=$ctrl.product></data-go-mdl-details-cmp-toggle-button-follow> <data-go-mdl-details-cmp-play-trailer data-ng-if=::$ctrl.hasPlayTrailerBtn data-product=$ctrl.trailerProduct></data-go-mdl-details-cmp-play-trailer> <data-go-mdl-details-cmp-share data-ng-if=::$ctrl.hasShareBtn data-name=::$ctrl.title data-social-network="\'twitter\'"></data-go-mdl-details-cmp-share> <data-go-mdl-details-cmp-share data-ng-if=::$ctrl.hasShareBtn data-name=::$ctrl.title data-social-network="\'facebook\'"></data-go-mdl-details-cmp-share> </div> <div class="go-details--specs go-details--specs__main"> <data-go-mdl-details-cmp-age-rating class=go-details--spec data-age-rating=::$ctrl.ageRating> </data-go-mdl-details-cmp-age-rating> <span class=go-details--spec data-ng-if=::$ctrl.emissionDate data-ng-bind="::$ctrl.emissionDate | goFltrEmitted"> </span> <data-go-mdl-details-cmp-emission-channel data-ng-if=::$ctrl.hasEmissionChannel class=go-details--spec data-product=$ctrl.product> </data-go-mdl-details-cmp-emission-channel> <span class=go-details--spec data-ng-if=::$ctrl.hasReleaseYear data-ng-bind=::$ctrl.releaseYear> </span> <data-go-mdl-details-cmp-duration class=go-details--spec data-ng-if=::$ctrl.hasDuration data-duration=::$ctrl.product.duration include-meta=true> </data-go-mdl-details-cmp-duration> <data-go-mdl-details-cmp-genres class=go-details--spec data-product-id=::$ctrl.product.id data-genres=::$ctrl.genres data-ng-if=::$ctrl.hasGenres> </data-go-mdl-details-cmp-genres> <span class=go-details--spec data-ng-if=::$ctrl.hasSeasons data-translate=product.seasonNumber data-translate-values="::{count: {{$ctrl.seasonsNumber}} }" translate-interpolation=messageformat> </span> <data-go-mdl-details-cmp-qualities class=go-details--spec data-medias=::$ctrl.qualities data-ng-if=::$ctrl.hasQualities> </data-go-mdl-details-cmp-qualities> </div> <div class="go-details--specs go-details--specs__main"> <data-go-mdl-details-cmp-audios class=go-details--spec data-ng-if=::$ctrl.hasAudios data-audios=::$ctrl.product.audioCodes> </data-go-mdl-details-cmp-audios> <data-go-mdl-details-cmp-subtitles class=go-details--spec data-ng-if=::$ctrl.hasSubtitles data-subtitles=::$ctrl.product.subtitleCodes> </data-go-mdl-details-cmp-subtitles> </div> <div class="go-details--specs go-details--specs__secondary" data-ng-if=::$ctrl.hasDirectors> <data-go-mdl-details-cmp-cast class=go-details--spec data-cast=::$ctrl.product.directors data-product-id=::$ctrl.product.id data-title="\'product.director\'"> </data-go-mdl-details-cmp-cast> </div> <div class="go-details--specs go-details--specs__secondary" data-ng-if=::$ctrl.hasActors> <data-go-mdl-details-cmp-cast class=go-details--spec data-cast=::$ctrl.product.actors data-product-id=::$ctrl.product.id data-title="\'product.cast\'"> </data-go-mdl-details-cmp-cast> </div> <data-go-mdl-details-cmp-description class=go-details--description data-description=::$ctrl.description> </data-go-mdl-details-cmp-description> <div class=go-details--bottom> <data-go-mdl-details-cmp-progress-bar class=go-details--progress data-ng-if=::$ctrl.hasProgressBar data-product=::$ctrl.product></data-go-mdl-details-cmp-progress-bar> <data-go-mdl-details-cmp-progress-bar-movie class=go-details--progress data-ng-if=::$ctrl.hasProgressBarMovie data-product=::$ctrl.product></data-go-mdl-details-cmp-progress-bar-movie> <div class=go-details--commercial-indicators> <data-go-mdl-details-cmp-triangle class=go-details--triangle data-ng-if=::$ctrl.hasTriangle data-product=::$ctrl.product> </data-go-mdl-details-cmp-triangle> <data-go-mdl-details-cmp-bars data-ng-if=::$ctrl.hasBars class=go-details--bars data-product=$ctrl.playbackProduct> </data-go-mdl-details-cmp-bars> </div> </div> </div> </div> '
}
, , , function(e, t, n) {
    e.exports = {
        loading: "loading__1wGLI",
        rotate: "rotate__1RJMO",
        fade: "fade__3PNRT",
        hidden: "hidden__PJYkm",
        shown: "shown__1YrAA"
    }
}
, , , , , , , , function(e, t) {
    e.exports = '<div class=go-mdl-pop-ups-drct-purchase-pin> <div class=modal-header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <h3 class=modal-title data-translate={{::title}}></h3> </div> <div class=modal-body> <p>{{movie.name}}</p> <form name=form class=go-form novalidate data-ng-submit=::submit(model.pin)> <div class="go-form--group go-form--group__small" data-ng-class="{\n            \'has-error\': form.pin.$invalid && !form.pin.$pristine,\n            \'has-success\': form.pin.$valid\n          }"> <input type=password required name=pin class=go-form--control maxlength={{::maxLength}} data-translate data-translate-attr-placeholder=popup.pin.example data-ng-required=true data-ng-model=model.pin data-ng-maxlength={{::maxLength}} data-ng-pattern=::pinRegex /> </div> <div class="go-form--group go-form--group__small"> <button type=submit class="go-btn go-btn__yellow go-btn__icon go-btn__block" data-ng-disabled=form.pin.$invalid> <span class="go-glyphicon go-glyphicon-ticket"></span> <span data-translate={{::buttonText}}></span> </button> </div> <p class=modal-text-error data-translate=popup.pin.wrong data-ng-if=error></p> </form> </div> <div class=modal-footer> <p class=modal-explanation> <span data-translate=common.pin.forgotten></span> <span data-translate=common.pin.call data-translate-value-telephone="{{\'branding.telephone\' | translate}}"> </span> </p> </div> </div> '
}
, function(e, t) {
    e.exports = {
        goCnstConfig: {
            go: {
                goMdlCatchup: {
                    providers: {
                        toolbox: {
                            nameInPlatform: "Toolbox",
                            oauthUrl: {
                                login: "https://sp.tbxnet.com/v2/auth/__SHORTNAME__/login.html"
                            }
                        }
                    }
                },
                goMdlEpg: {
                    tvGuide: "tv-guide",
                    now: "now",
                    epg: "epg",
                    filter: "filter",
                    smartFilter: {
                        genres: [{
                            id: 1,
                            title: "films",
                            translationKey: "epg.genresList.films"
                        }, {
                            id: 2,
                            title: "series",
                            translationKey: "epg.genresList.series"
                        }, {
                            id: 3,
                            title: "kids",
                            translationKey: "epg.genresList.kids"
                        }, {
                            id: 4,
                            title: "others",
                            translationKey: "epg.genresList.others"
                        }, {
                            id: 5,
                            title: "sports",
                            translationKey: "epg.genresList.sports"
                        }, {
                            id: 6,
                            title: "tvshows",
                            translationKey: "epg.genresList.tvshows"
                        }],
                        programType: {
                            children: "1|2",
                            others: "4|7|8"
                        }
                    },
                    timeline: {
                        visiblePrograms: 2,
                        limit: -8313,
                        scrollMovement: 500,
                        timer: 1e3,
                        nowLengthLimits: 200
                    },
                    routes: {
                        now: "tv-guide/now",
                        epg: "tv-guide/epg",
                        filter: "tv-guide/filter"
                    },
                    epgCacheTime: 43200,
                    filters: {
                        daysDivider: " ",
                        total: 7
                    },
                    hours: ["00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00"],
                    pixelFactor: 10.59,
                    maxProgramWidth: 110,
                    minProgramWidth: 34,
                    rowsRenderedFirst: 10,
                    dayParam: "day"
                },
                goMdlPlayer: {
                    transparentCatchup: {
                        HBOOperatorId: "telefonica",
                        HBOCountryId: "PE"
                    },
                    scheduleUpdateInterval: 1e4
                },
                goMdlRegistration: {
                    conditionsUrl: "http://www.movistar.cl/PortalMovistarWeb/centro-de-ayuda/condiciones-comerciales-y-contractuales-de-servicios-hogar"
                },
                goMdlSearch: {
                    addDevice: {
                        allowed: !1,
                        code: {
                            pattern: "(^[A-z0-9]{10}$)",
                            maxLength: 10
                        },
                        name: {
                            maxLength: 30
                        }
                    }
                },
                goMdlSettings: {
                    addDevice: {
                        allowed: !0,
                        code: {
                            pattern: "(^[A-z0-9]{10}$)",
                            maxLength: 10
                        },
                        name: {
                            maxLength: 30
                        }
                    }
                },
                skin: "vivo-play",
                catchup: !0,
                hourlyBasis: 6,
                strategy: {
                    0: {
                        hourlyIntervals: [6, 18],
                        channelsChunk: 50
                    },
                    1: {
                        hourlyIntervals: [6, 6, 12],
                        channelsChunk: 30
                    }
                },
                date: {
                    format: {
                        date: "dd/MM/yyyy",
                        dateTime: "dd/MM/yyyy HH:mm",
                        weekDay: "EEEE",
                        time: "HH:mm"
                    }
                },
                googleVerificationId: "b685ae3a8717cd95",
                googleTagManager: {
                    id: "GTM-WDVZZ5V"
                },
                bingUserId: "843AE1C7F724BD0E13D7FA3BD16E83A7",
                domain: "//www.vivoplay.com.br",
                i18n: {
                    language: "pt-BR",
                    iso: "pt-BR",
                    iso2: "pt_BR"
                },
                landing: {
                    route: "/",
                    cookie: {
                        key: "_ld",
                        expiration: 86400
                    }
                },
                uniapi: {
                    config: {
                        instanceIds: {
                            Preproduction: "31",
                            Staging: "25",
                            Certification: "25",
                            MinilabDev: "25",
                            MinilabProd: "25",
                            Dev: "2",
                            Azure: "25",
                            Production: "25"
                        },
                        endpoints: {
                            PC: {
                                Production: "https://ucstb.vivoplay.com.br/"
                            }
                        },
                        searchQuery: "g0WyJndnBfcGNfd2ViX2tleV8wNzEwIiwiZDAyaDlRYlVpajV5U1dXZVpsdUVVTjl0cTFha1ZnbXV2aGJCcWViRjIwK0pWOEJpTnBRZmZZWFJ5ek52QlM4SyIsIjlmMTNkMTU2MjdmYTMxZThkNDhmNmQyMTk4NmUwZDJkIiwiNjJmNWM2Y2Y2OGVjMzEyYWRjN2EwMTk3NjE3MmI5NDEiXQ==",
                        deviceType: {
                            PC: 401,
                            PCPlayback: "401_1"
                        },
                        init: !0,
                        discretTimeInterval: 900
                    },
                    player: {
                        params: {
                            DisableLiveParentalControl: !0,
                            DisableVodParentalControl: !0,
                            PlayerLiveBackOff: "0:0:0:10",
                            PlayerLivePlaybackOffset: "0:0:0:10",
                            RefreshSchedulesPeriod: "0:8:0:0",
                            PlayerResumeLowerBound: 90,
                            PlayerResumeUpperBound: 90,
                            ScreenMode: {
                                player: {
                                    live: 3,
                                    vod: 3
                                }
                            }
                        },
                        uniapi: {
                            MaxFailedHeartbeats: 1
                        },
                        widevineServer: {
                            Production: "https://wvcypherdrm.gvp.telefonica.com/DashIssuer.aspx"
                        },
                        widevineProxy: {
                            Production: "https://wvcypherdrm.gvp.telefonica.com/WidevineProxy.aspx"
                        },
                        playreadyServer: {
                            Production: "//msplayreadydrm.gvp.telefonica.com/rightsmanager.asmx"
                        },
                        validErrorCodes: [404, 410, 412, 500, 503],
                        networkErrorRecover: {
                            code: 0,
                            messages: ["NETWORK FAILURE", "REQUEST TIMMEDOUT"],
                            descriptions: ["MPD", "FRAGMENT", "MANIFEST"]
                        },
                        ignoredErrorCodes: [471],
                        recoverableErrorWaitingTime: 2e4,
                        offStr: "off"
                    },
                    login: {
                        cookie: {
                            key: "gvp-token",
                            expiration: 2592e3
                        },
                        trustedDevice: {
                            key: "trusted-device"
                        }
                    },
                    statusCode: {
                        RecordingAlreadySubscribed: 221,
                        RecordingProgramAlreadyFinished: 224,
                        RecordingNotAllowedToCancel: 226
                    }
                },
                contentapi: {
                    endpoints: {
                        PC: {
                            Production: "//contentapi-br.cdn.telefonica.com/"
                        }
                    }
                },
                contentapiConfig: {
                    retries: 2,
                    timeout: 15e3
                },
                contentwise: {
                    rapEndpoints: {
                        Production: "//nrs-b.cdn.telefonica.com/"
                    }
                },
                android: {
                    appId: "com.tid.enjoy"
                },
                ios: {
                    appId: "589412933",
                    deeplinking: "6MT7MPBSWX.com.pdi.enjoy"
                },
                paymentMethodsAvailable: ["Billing"],
                live: !0,
                enableNewShakaPlayer: !0,
                teltooApiKey: "JlWf2vYt9ELa",
                setup: {
                    forceTasaSSOEnabled: !1,
                    version: {
                        prod: !1
                    },
                    decimalCurrency: 2,
                    player: {
                        PlayerBufferingTime: "0:0:0:60",
                        minBufferTime: 4,
                        maxPreloadedFragments: 2,
                        timeouts: {
                            live: {
                                manifestRequest: 15e3,
                                rangeRequest: 15e3,
                                licenseRequest: 15e3
                            },
                            vod: {
                                manifestRequest: 15e3,
                                rangeRequest: 15e3,
                                licenseRequest: 15e3
                            },
                            trailer: {
                                manifestRequest: 15e3,
                                rangeRequest: 15e3,
                                licenseRequest: 15e3
                            },
                            default: {
                                manifestRequest: 15e3,
                                rangeRequest: 15e3,
                                licenseRequest: 15e3
                            }
                        },
                        html5SecureOrigin: [],
                        cdnDomains: ["tid.es", "t-cdn.com", "cdnprepro.telefonica.com", "cdn.telefonica.com"],
                        defaultBandwidthEstimate: 1e4
                    },
                    googleAnalytics: {
                        defaultEnvironment: {
                            useThisInsteadInstanceValue: !0,
                            id: "UA-51276496-4"
                        },
                        Production: {
                            useThisInsteadInstanceValue: !1,
                            id: ""
                        }
                    },
                    enableRecomms: !0,
                    vsppFix: {
                        enabled: !0,
                        interval: 1e3,
                        seek: .2
                    },
                    vsspTimestampOnFragments: !1,
                    l7dFix: {
                        isEnabled: !0,
                        lastSecondsToClose: 5
                    }
                },
                externalResourcesDomains: ["nice264.com", "youbora.com", "youborafds01.com", "youboranqs01.com", "quickplay.com", "foxplay.com", "foxsyndicationlatam.com", "footprint.net", "hbo-la.com", "hbopaseo.com", "akamaized.net", "mca.tid.es", "teltoo.com"]
            }
        }
    }
}
, , function(e, t, n) {
    e.exports = {
        placardChannel: "placardChannel__FZOWT",
        bgkDark: "bgkDark__13a1K",
        wrap: "wrap__C3KHl",
        image: "image__2TwCT"
    }
}
, function(e, t, n) {}
, , , , , , , , , , , , , , , , , , , function(e, t) {
    e.exports = '<div class="go-epg-filter container"> <header class=go-epg-filter--header> <div class="go-epg-filter--header-filters fluid-middle"> <div class=go-epg-filter--header-back> <a data-ng-href={{::back}}> <span class="go-epg--arrow-image go-epg--arrow-image__back"></span> <p class=go-epg-filter--header-back-text data-translate=common.back></p> </a> </div> <div data-go-mdl-epg-drct-days-menu data-callback=::changeDay data-selected-index=selectedIndex></div> <go-mdl-smart-filter-drct-main class=go-smart-filter data-additional-overlay-class=smart-filtering__override data-on-filter=applyFilter> <go-mdl-smart-filter-drct-column class=go-smart-filter-column__x2 data-column-key=genre data-translation-title=common.genre.name data-get-items-svc-fn=goMdlEpgSvcFilter.getGenres> </go-mdl-smart-filter-drct-column> </go-mdl-smart-filter-drct-main> </div> </header> <section class=go-epg-filter--breadcrumbs data-ng-if="count || message"> <p class=fluid-middle> <span data-translate=epg.filteredBy></span> <span data-translate={{genre.translationKey}}></span> <span class=go-parenthesis data-ng-bind=count></span> </p> </section> <go-mdl-smart-grid-cmp-main data-ng-if=showGrid data-on-get-content=getFilteredContents> </go-mdl-smart-grid-cmp-main> <p class="go-epg-filter--message fluid-middle" data-ng-if=message data-translate={{message}}></p> </div> '
}
, function(e, t) {
    e.exports = '<div class="go-mdl-epg go-main-epg container"> <go-cmp-spinner class=go-mdl-epg--loading data-ng-hide="!isEmpty || showError"></go-cmp-spinner> <div class=error-wrapper data-ng-if=showError> <div class=description> <span class=show-error-icon></span> <p> <span class=big data-translate=epg.error.title> </span> <br/> <span class=small data-translate=epg.error.retry> </span> </p> </div> </div> <div data-ng-if="!showError && !isEmpty" data-go-mdl-epg-drct-epg></div> </div> '
}
, function(e, t) {
    e.exports = "<div> <div class=modal-header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes=\"go-svg-icon go-svg-icon--close\" data-name=remove-icon></go-cmp-icon> </button> <span class=app-icon></span> </div> <div class=modal-body> <div class=info> <p data-translate=\"{{::(osLink ? 'smartBanners.playerInfo' :\n          'smartBanners.error.noLink')}}\"></p> </div> </div> <div class=modal-footer> <a class=\"btn download-button\" data-ng-if=::osLink data-ng-href={{::osLink}} data-ng-attr-title=\"{{::('smartBanners.viewInfo' | translate: {'name': marketName})}}\" data-translate=smartBanners.view> </a> </div> </div> "
}
, function(e, t) {
    e.exports = "<div> <div class=modal-header></div> <div class=modal-body> <go-cmp-spinner class=loading></go-cmp-spinner> <p data-translate={{::message}}></p> </div> <div class=modal-footer></div> </div> "
}
, function(e, t) {
    e.exports = '<div> <div class=modal-header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> </div> <div class=modal-body> <p class=title data-translate=epg.pvr.firstTimeWarningMessage></p> <div class=question> <input type=checkbox data-ng-model=notRememberWarning /> <span data-translate=epg.pvr.firstTimeWarningCheckBox></span> </div> </div> <div class=modal-footer> <button type=button class="go-btn go-btn__blue" data-ng-click=close(notRememberWarning) data-translate=common.close></button> </div> </div> '
}
, function(e, t) {
    e.exports = "<go-mdl-player-cmp-container></go-mdl-player-cmp-container> "
}
, function(e, t) {
    e.exports = '<div> <div class=modal-header> <button class=close-button data-ng-click=$close()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <span class=icon></span> <h3 class=modal-title data-translate={{::title}}></h3> </div> <div class=modal-body> <p data-ng-repeat="message in messages" data-translate={{message}}></p> </div> <div class=modal-footer> <p data-ng-if=::!hideBrowserSuggestions data-translate=player.playbackWarning.downloadMessage></p> <go-cmp-browser-list data-ng-if=::!hideBrowserSuggestions data-browser-list=::browserList data-icon-class=playback-icon class=browser-list> </go-cmp-browser-list> <div class=checkbox data-ng-show=isToggleVisible> <label> <input type=checkbox data-ng-click=toggleRemember() /> <span data-translate=player.playbackWarning.remember></span> </label> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-mdl-pop-ups-drct-payment-method> <div class=modal-header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <h3 class=modal-title data-translate=popup.purchase.selectPaymentMethod></h3> </div> <div class=modal-body> <button type=button class="go-btn go-btn__block go-btn__yellow paymentMethod" data-ng-repeat="paymentMethod in ::paymentMethods" data-ng-click=selectPaymentMethod(paymentMethod) data-ng-bind=::paymentMethod.name></button> </div> <div class=modal-footer></div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-mdl-pop-ups-drct-parental-pin> <div class=modal-header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <h3 class=modal-title data-translate={{::title}}></h3> </div> <div class=modal-body> <p data-translate={{::info}}></p> <form name=form class=go-form novalidate data-ng-submit=submit(model.pin)> <div class="go-form--group go-form--group__small" data-ng-class="{\n            \'has-error\': form.pin.$invalid && !form.pin.$pristine,\n            \'has-success\': form.pin.$valid\n          }"> <input type=password required autofocus name=pin class=go-form--control maxlength={{::maxLength}} data-translate data-translate-attr-placeholder=popup.pin.example data-ng-required=true data-ng-model=model.pin data-ng-maxlength={{::maxLength}} data-ng-pattern=::pinRegex /> </div> <div class="go-form--group go-form--group__small"> <button type=submit class="go-btn go-btn__blue go-btn__block" data-ng-disabled=form.pin.$invalid data-translate=common.accept></button> </div> <p class=modal-text-error data-translate=popup.pin.wrong data-ng-if=error></p> </form> </div> <div class=modal-footer> <p class=modal-explanation> <span data-translate=common.pin.forgotten></span> <span data-translate=common.pin.call data-translate-value-telephone="{{\'branding.telephone\' | translate}}"> </span> </p> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-popup-login> <div class=go-popup-login--header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <p class=go-popup-login--title data-translate=auth.welcome></p> </div> <div class=go-popup-login--body> <div data-go-mdl-authentication-drct-login-form data-visible=visible></div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-live-detail> <div class=modal-header> <button class=close-button data-ng-click=::closePopup()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> </div> <data-go-mdl-details-cmp-live></data-go-mdl-details-cmp-live> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-l7d-activation> <div class=modal-header> <button class="close-button go-l7d-activation--close" data-ng-click=::$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <h1 class=modal-title data-translate=l7d.popup.title></h1> </div> <div class=go-l7d-activation--body> <div class=go-l7d-activation--image></div> <div class=go-l7d-activation--info> <p class=go-l7d-activation--description data-translate=l7d.legalConditions></p> <div> <button class="go-btn go-btn__blue btn-default go-l7d-activation--button" data-ng-click=::activate() data-translate=l7d.popup.button></button> </div> <p class="go-l7d-activation--more-info modal-explanation" data-translate=l7d.popup.moreInfo></p> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div> <div class=modal-header> <button class=close-button data-ng-hide="::(closable === false)" data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <h3 class=modal-title data-ng-if=::title data-translate={{::title}}></h3> </div> <div class=modal-body data-ng-class=::bodyClass> <p data-ng-if=message data-translate={{::message}}></p> </div> <div class=modal-footer> <button type=submit class="go-btn btn-cancel" data-ng-if=::(!!cancel) data-ng-click=$close(false) data-translate={{::cancel}}></button> <button type=submit class="go-btn go-btn__blue" data-ng-if=::(!!accept) data-ng-click=$close(true) data-translate={{::accept}}></button> </div> </div> '
}
, function(e, t) {
    e.exports = '<div> <div class=modal-header> <button class=close-button data-ng-click=$dismiss()> <go-cmp-icon data-classes="go-svg-icon go-svg-icon--close" data-name=remove-icon></go-cmp-icon> </button> <h1 class=modal-title data-translate=settings.parental.deactivate.pin></h1> </div> <div class=modal-body> <form name=form class=go-form novalidate data-ng-submit=disablePin()> <p data-translate=settings.parental.deactivate.pleaseInsertPin></p> <div class="go-form--group go-form--group__small" data-ng-class="{\n            \'has-error\': form.pin.$invalid && !form.pin.$pristine,\n            \'has-success\': form.pin.$valid\n          }"> <label class="go-form--block-label go-text-left" for=pin data-translate=settings.parental.pin> </label> <input type=password required autofocus name=pin class=go-form--control maxlength={{::maxLength}} data-translate data-translate-attr-placeholder=popup.pin.example data-ng-required=true data-ng-model=model.pin data-ng-maxlength={{::maxLength}} data-ng-pattern=::pinRegex /> </div> <div class="go-form--group go-form--group__small"> <button type=submit class="go-btn go-btn__block btn" data-ng-disabled=form.pin.$invalid data-translate=settings.parental.deactivate.deactivate></button> </div> <p class=modal-text-error data-translate=popup.pin.wrong data-ng-if=error></p> </form> </div> <div class=modal-footer> <p class=modal-explanation> <span data-translate=common.pin.forgotten></span> <span data-translate=common.pin.call data-translate-value-telephone="{{\'branding.telephone\' | translate}}"> </span> </p> </div> </div> '
}
, function(e, t) {
    e.exports = "<div> <div class=modal-header></div> <div class=modal-body> <h1 class=title data-translate=browser.browserWarning.title></h1> <h2 class=message data-translate=browser.browserWarning.message></h2> <go-cmp-browser-list data-browser-list=::browserList data-icon-class=playback-icon> </go-cmp-browser-list> <p class=continue-message> <span class=link data-ng-click=$close() data-translate=browser.browserWarning.continueLink></span> <span data-translate=browser.browserWarning.continueAnywayExtra></span> </p> </div> <div class=modal-footer></div> </div> "
}
, , function(e, t, n) {
    "use strict";
    (function(e) {
        n.d(t, "a", function() {
            return a
        });
        var a = {
            caSort: [CONTENTAPI.caTypes.ORDER_BY.CONTENT_ORDER + ":" + CONTENTAPI.caTypes.ORDER_BY.ASC, CONTENTAPI.caTypes.ORDER_BY.TITLE + ":" + CONTENTAPI.caTypes.ORDER_BY.ASC, CONTENTAPI.caTypes.ORDER_BY.RELEASE_DATE + ":" + CONTENTAPI.caTypes.ORDER_BY.DES, CONTENTAPI.caTypes.ORDER_BY.STATUSDATE + ":" + CONTENTAPI.caTypes.ORDER_BY.DES + "," + CONTENTAPI.caTypes.ORDER_BY.AVAILABLE_FROM_UTC + ":" + CONTENTAPI.caTypes.ORDER_BY.DES, CONTENTAPI.caTypes.ORDER_BY.AVAILABLE_FROM_UTC + ":" + CONTENTAPI.caTypes.ORDER_BY.DES, CONTENTAPI.caTypes.ORDER_BY.VIEWS + ":" + CONTENTAPI.caTypes.ORDER_BY.DES, CONTENTAPI.caTypes.ORDER_BY.PROMOTIONALRATING + ":" + CONTENTAPI.caTypes.ORDER_BY.DES, CONTENTAPI.caTypes.ORDER_BY.AVERAGE_RATING + ":" + CONTENTAPI.caTypes.ORDER_BY.DES + "," + CONTENTAPI.caTypes.ORDER_BY.VIEWS + ":" + CONTENTAPI.caTypes.ORDER_BY.DES, CONTENTAPI.caTypes.ORDER_BY.DURATION + ":" + CONTENTAPI.caTypes.ORDER_BY.ASC, CONTENTAPI.caTypes.ORDER_BY.AVAILABLE_UNTIL_UTC + ":" + CONTENTAPI.caTypes.ORDER_BY.DES],
            liveAreaLimit: 40,
            editorial: {
                contents: 7
            },
            promos: {
                contents: 5
            },
            subscriptionTypes: [e.CatalogItemType.Subscription, e.CatalogItemType.VodSubscription, e.CatalogItemType.LiveSubscription]
        }
    }
    ).call(this, n(23))
}
, function(e, t) {
    e.exports = '<div class=go-generic-error data-ng-class=$ctrl.className data-ng-if=$ctrl.isFatalError> <go-cmp-icon class=go-generic-error--image data-name=error></go-cmp-icon> <div class=go-generic-error-message> <h1 class=go-generic-error--title data-ng-bind-html=$ctrl.title></h1> <p class=go-generic-error--description data-ng-bind-html=$ctrl.description></p> <button class="btn btn-primary" data-ng-click=$ctrl.action() data-ng-bind-html=$ctrl.actionButtonText></button> </div> </div> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-class="{ \'go-btn__loading\': $ctrl.isLoading }" translate={{$ctrl.text}} data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.onClick()></button> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.onClick() data-translate=placards.playFromBeginning></button> '
}
, function(e, t) {
    e.exports = '<div class=go-details-progress data-ng-if=$ctrl.isVisible> <span class=go-details-progress--date data-ng-bind=$ctrl.startTimeFormatted></span> <div class=go-details-progress--bar-wrapper> <div class=go-details-progress--bar> <div class=go-details-progress--progress data-ng-style="{ width: $ctrl.progress }"></div> </div> </div> <span class=go-details-progress--date data-ng-bind=::($ctrl.endTimeFormatted)></span> </div> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__blue go-btn__icon go-details--btn go-details-play" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.onClick()> <span class="go-glyphicon go-glyphicon-play"></span> <span data-ng-if=$ctrl.showText data-ng-bind=$ctrl.btnText></span> </button> '
}
, function(e, t) {
    e.exports = '<div class=go-tabs> <div class=go-tabs--menu> <span class=go-tabs--menu-item data-ng-class="{\'go-tabs--menu-item__selected\': $ctrl.tabSelected === $index}" data-ng-hide="$index === 0 && $ctrl.isRelatedVisible === false" data-ng-repeat="tab in $ctrl.tabs" data-translate={{::tab.name}} data-ng-click=::$ctrl.onTabClicked($index)></span> </div> <go-mdl-carousel-cmp-recommendations data-ng-if="$ctrl.isRelatedVisible && $ctrl.tabSelected === 0" data-product-id=::$ctrl.id data-genres=::$ctrl.genres data-cw-uxr=::$ctrl.cwUxr data-event-name=detail::recommendationSwipe data-on-items="::$ctrl.registerTab({ name: \'details.related\', index: 0 })" data-on-empty-loaded="::$ctrl.deselectTab({ name: \'details.related\', index: 0 })"> </go-mdl-carousel-cmp-recommendations> <go-mdl-carousel-cmp-upselling data-subscriptions=::$ctrl.subscriptions data-ng-if="$ctrl.isUpsellingVisible && $ctrl.tabSelected === 1" data-event-name=detail::upsellingSwipe> </go-mdl-carousel-cmp-upselling> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-home> <go-mdl-home-cmp-editors-pick></go-mdl-home-cmp-editors-pick> <go-mdl-carousel-cmp-live-area data-ng-if=$ctrl.isLiveAvailable data-cw-uxr=::$root.cwTypes.LIVE_NOW> </go-mdl-carousel-cmp-live-area> <div class=go-home--carousels data-infinite-scroll=$ctrl.loadMoreChannels() data-infinite-scroll-distance=0.2 data-infinite-scroll-disabled=$ctrl.isAllChannelsLoaded data-infinite-scroll-use-document-bottom=true> <div data-ng-repeat="channel in $ctrl.channels track by channel.id"> <go-mdl-carousel-cmp-catchup data-ng-if=::$ctrl.isCatchupCarousel(channel) data-channel=channel data-event-name=home::catchupChannelSwipe> </go-mdl-carousel-cmp-catchup> <go-mdl-carousel-cmp-thematic-area data-ng-if=::$ctrl.isThematicAreaCarousel(channel) data-channel=channel data-cw-uxr="::(channel.isExtension ? $root.cwTypes.EXTENSION : $root.cwTypes.TA_HIGHLIGHT)" data-event-name=home::thematicAreaSwipe> </go-mdl-carousel-cmp-thematic-area> <go-mdl-carousel-cmp-personal-extension data-ng-if=::channel.isPersonalExtension data-channel=channel data-event-name=home::thematicAreaSwipe> </go-mdl-carousel-cmp-personal-extension> </div> </div> <go-mdl-carousel-cmp-promos data-ng-if=$ctrl.isAllChannelsLoaded></go-mdl-carousel-cmp-promos> <data-go-cmp-recover-pass></data-go-cmp-recover-pass> </div> '
}
, , , function(e, t, n) {
    "use strict";
    (function(e) {
        function a() {
            return new e
        }
        n.d(t, "a", function() {
            return a
        })
    }
    ).call(this, n(759))
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", function() {
        return r
    });
    var a = n(127);
    function r() {
        var e = Object(a.a)().getResult()
          , t = e.browser.name || "unknown"
          , n = parseInt(e.browser.major) || 0
          , r = e.os.name || "unknown"
          , o = e.os.version || "unknown"
          , i = /Android/.test(r)
          , c = /iOS/.test(r)
          , s = /Windows\sPhone/.test(r)
          , l = /BlackBerry/.test(r)
          , u = i || c || s || l
          , d = {
            os: {
                name: r,
                version: o,
                type: {
                    desktop: !u,
                    mobile: u
                },
                pc: {
                    chromeOs: /Chrome\sOS/.test(r),
                    linux: /Linux/.test(r),
                    mac: /Mac\sOS/.test(r),
                    windows: /^Windows$/.test(r)
                },
                mobile: {
                    android: i,
                    ios: c,
                    windowsPhone: s,
                    blackberry: l
                }
            },
            browser: {
                name: t.toLowerCase(),
                version: n || 0,
                pc: {
                    chrome: /Chrome/.test(t) && !u,
                    explorer: (/Explorer/.test(t) || /ie/.test(t) || /IE/.test(t)) && !u,
                    firefox: /Firefox/.test(t) && !u,
                    opera: /Opera/.test(t) && !u,
                    safari: /Safari/.test(t) && !u,
                    edge: (/Edge/.test(t) || /edge/.test(t)) && !u
                },
                mobile: {
                    safari6: /Safari/.test(t) && u && n >= 6
                }
            }
        };
        return d.isDashSupported = d.browser.pc.chrome || d.browser.pc.firefox,
        d
    }
}
, function(e, t, n) {
    e.exports = {
        triangle: "triangle__3cFF9",
        price: "price__1D2OZ",
        yellow: "yellow__1WdYQ",
        orange: "orange__1juNb"
    }
}
, function(e, t, n) {
    e.exports = {
        main: "main__XlWtq",
        bkgDark: "bkgDark__2yOZl",
        placard: "placard__24fBQ"
    }
}
, function(e, t, n) {
    e.exports = {
        logoSize: "110",
        logoMargin: "5"
    }
}
, function(e, t, n) {
    e.exports = {
        icon: "icon__3Hv74",
        season: "season__KWTdK",
        conflicted: "conflicted__1FrrE"
    }
}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, n) {
    e.exports = {
        message: "message__1nWbo",
        error: "error__2dijf",
        warning: "warning__19AUx"
    }
}
, function(e, t, n) {
    e.exports = {
        progressBar: "progressBar__2TJO_",
        timeLeft: "timeLeft__2MbCO"
    }
}
, , function(e, t, n) {
    e.exports = {
        background: "background__237io",
        progress: "progress__2Vq4w"
    }
}
, function(e, t, n) {
    e.exports = {
        button: "button__1yduC",
        "go-glyphicon-play": "go-glyphicon-play__2_eU-"
    }
}
, function(e, t, n) {
    e.exports = {
        triangle: "triangle__1rphc",
        yellow: "yellow__6omI0",
        orange: "orange__2RKOL"
    }
}
, function(e, t, n) {
    e.exports = {
        registrationForm: "registrationForm__3RFbX",
        pointer: "pointer__3ZCZZ"
    }
}
, , , , function(e, t, n) {
    "use strict";
    function a(e) {
        var t = function(e) {
            "ngInject";
            return n.e(0).then(n.bind(null, 890)).then(function(t) {
                var n = t.goMdlWelcome;
                e.load({
                    name: n
                })
            })
        };
        t.$inject = ["$ocLazyLoad"],
        e.resolveWhen("/welcome", {
            template: "<go-mdl-welcome-cmp-welcome></go-mdl-welcome-cmp-welcome>",
            resolve: {
                lazyLoad: t
            },
            page: {
                title: "seoMetadata.title.welcome",
                description: "seoMetadata.description.welcome",
                canonical: "/welcome"
            }
        })
    }
    n.d(t, "a", function() {
        return a
    }),
    a.$inject = ["$routeProvider"]
}
, function(e, t, n) {
    "use strict";
    function a(e) {
        var t = function(e) {
            "ngInject";
            return n.e(0).then(n.bind(null, 889)).then(function(t) {
                var n = t.goMdlSitemap;
                e.load({
                    name: n
                })
            })
        };
        t.$inject = ["$ocLazyLoad"],
        e.resolveWhen("/sitemap", {
            template: "<go-mdl-sitemap-cmp-main></go-mdl-sitemap-cmp-main>",
            resolve: {
                lazyLoad: t
            },
            page: {
                title: "seoMetadata.title.sitemap",
                description: "seoMetadata.description.sitemap",
                canonical: "/sitemap"
            }
        })
    }
    n.d(t, "a", function() {
        return a
    }),
    a.$inject = ["$routeProvider"]
}
, function(e, t, n) {
    "use strict";
    function a(e) {
        var t = "<go-mdl-settings-cmp-settings-main></go-mdl-settings-cmp-settings-main>"
          , a = function(e) {
            "ngInject";
            return n.e(0).then(n.bind(null, 892)).then(function(t) {
                var n = t.goMdlSettings;
                e.load({
                    name: n
                })
            })
        };
        a.$inject = ["$ocLazyLoad"],
        e.resolveWhen("/settings/parental-control", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::parentalPin"
            }
        }).resolveWhen("/settings/purchase-pin", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::purchasePin"
            }
        }).resolveWhen("/settings/user-info", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::userInfo"
            }
        }).resolveWhen("/settings/manage-devices", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::devices"
            }
        }).resolveWhen("/settings/notifications", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::notifications"
            }
        }).resolveWhen("/settings/audio-and-subtitles", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::audiosAndSubtitles"
            }
        }).resolveWhen("/settings/my-subscriptions", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::mySubscriptions"
            }
        }).resolveWhen("/settings/l7d", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings",
                eventName: "settings::l7d"
            }
        }).resolveWhen("/settings", {
            template: t,
            resolve: {
                lazyLoad: a
            },
            page: {
                title: "seoMetadata.title.settings",
                description: "seoMetadata.description.settings"
            }
        })
    }
    n.d(t, "a", function() {
        return a
    }),
    a.$inject = ["$routeProvider"]
}
, function(e, t) {
    e.exports = '<div class="go-mdl-landing go-mdl-landing-drct-landing"> <div data-go-mdl-landing-drct-iframe data-src="{{landingPage.url | goMdlLandingFltrTrust}}" data-height={{landingPage.height}}></div> </div> '
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", function() {
        return o
    });
    var a = n(182)
      , r = n.n(a);
    function o(e) {
        var t = function(e) {
            "ngInject";
            return n.e(0).then(n.bind(null, 891)).then(function(t) {
                var n = t.goMdlLanding;
                e.load({
                    name: n
                })
            })
        };
        t.$inject = ["$ocLazyLoad"],
        e.resolveWhen("/landing", {
            template: r.a,
            resolve: {
                lazyLoad: t
            },
            controller: "goMdlLandingCtrlLanding",
            page: {
                eventName: "landing::landing"
            }
        })
    }
    o.$inject = ["$routeProvider"]
}
, , function(e, t, n) {}
, function(e, t, n) {}
, function(e, t, n) {}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t) {
    e.exports = '<article class=go-epg-schedule-item data-ng-click=detailsCallback()> <div class=go-epg-schedule-item--wrapper data-ng-show="program && state === 0"> <h2 class="go-epg-schedule-item--title ellipsis" data-translate="{{program.programName || \'epg.upcomingProgramError\'}}"></h2> <div class=go-epg-schedule-item--detail> <data-go-cmp-record-icon class=go-epg-schedule-item--detail-recording-icon data-schedule-id=::program.id data-epg-program-id=::program.epgProgramId data-live-channel-id=::program.liveChannelId data-start-time=::program.startTime></data-go-cmp-record-icon> <span class=go-epg-schedule-item--detail-start data-ng-bind=::startTime> </span> <span class="go-epg-schedule-item--detail-end ellipsis" data-ng-bind=::endTime> </span> </div> <div data-ng-show=::program.isAirProgram class=go-epg-schedule-item--bottom-bar> <div class=go-epg-schedule-item--bottom-bar-progress data-ng-style="::{\'width\': progress}"></div> </div> </div> <div data-ng-show="program && state === 1" class=go-epg-schedule-item--info-image></div> </article> '
}
, function(e, t) {
    e.exports = '<div class="go-epg--common go-epg-upcoming"> <header class=go-epg-upcoming--header> <div class=go-epg-upcoming--header-filters> <div class=go-epg-upcoming--back-to-now> <a href=tv-guide/now> <span class="go-epg--arrow-image go-epg--arrow-image__back"></span> <p class=go-epg-upcoming--back-to-now-link data-translate=epg.onNowLabel></p> </a> </div> <div data-go-mdl-epg-drct-days-menu data-callback=::changeCurrentDayFilter data-selected-index=selectedIndex></div> <go-mdl-smart-filter-drct-main class=go-smart-filter data-additional-overlay-class=smart-filtering__override data-on-filter=applyFilter> <go-mdl-smart-filter-drct-column class=go-smart-filter-column__x2 data-column-key=genre data-translation-title=common.genre.name data-get-items-svc-fn=goMdlEpgSvcFilter.getGenres> </go-mdl-smart-filter-drct-column> </go-mdl-smart-filter-drct-main> </div> <div class=go-epg-upcoming--header-timeline> <div class=go-epg-upcoming--header-now data-ng-show="isTimelineDisplaced || selectedIndex !== 0" data-ng-click=moveEpgToCurrent()> <p class="go-epg-upcoming--header-now-text go-epg-upcoming--header-now-text__left-arrow" data-translate=epg.epg.nowLink></p> </div> <div class=go-epg-upcoming--header-static> <ul class=go-epg-upcoming--header-static-timeline> <li class=go-epg-upcoming--timeline-item data-ng-repeat="item in timelineHours track by $index"> <span data-ng-bind=item class=go-epg-upcoming--timeline-item-text></span> </li> </ul> </div> </div> </header> <go-cmp-spinner data-ng-show=isLoadingSchedules class=go-loading-area> </go-cmp-spinner> <div class="go-epg-upcoming--scroll-bar go-epg-upcoming--scroll-bar__left" data-ng-click="launchScroll(\'left\')" data-ng-hide="(selectedIndex === 0 && limitsScroll.left) || isLoadingSchedules"> <span class="go-epg--arrow-image go-epg--arrow-image__rotate go-epg-upcoming--scroll-arrow"> </span> </div> <div class="go-epg-upcoming--scroll-bar go-epg-upcoming--scroll-bar__right" data-ng-click="launchScroll(\'right\')" data-ng-hide="((selectedIndex === numOfDays - 1) && limitsScroll.right) || isLoadingSchedules"> <span class="go-epg--arrow-image go-epg-upcoming--scroll-arrow"> </span> </div> <div class=go-epg-upcoming--wrapper data-ng-show=!isLoadingSchedules data-in-view-container data-perfect-scrollbar data-min-scrollbar-length=20> <div class="go-epg-upcoming--inner-wrapper go-epg-upcoming--inner-wrapper__hidden go-epg-upcoming--playback-wrapper"> <div class=go-epg-upcoming--channels-wrapper> <div class=go-epg-upcoming--channels data-ng-repeat="item in dataPlayback track by item.channel.id"> <go-mdl-epg-cmp-channel data-channel=::item.channel class=go-epg-upcoming--channel> </go-mdl-epg-cmp-channel> </div> </div> <div class=go-epg-upcoming--programs-wrapper> <section class=go-epg-upcoming--channels data-ng-repeat="item in dataPlayback track by item.channel.id"> <div class=go-epg-upcoming--loading data-ng-show=showLoading data-ng-hide="item.programs.length > 0 &&\n                !dataPlaybackNoInfo[$index]"> <span class=go-epg-upcoming--loading-text data-translate=epg.loading></span> </div> <div class=go-epg-upcoming--loading data-ng-show=dataPlaybackNoInfo[$index]> <span class=go-epg-upcoming--loading-text data-translate=epg.upcomingProgramError></span> </div> <div class=go-epg-upcoming--programs-row data-limits=limitsScroll data-in-view="lineInView($index, $inview, $inviewInfo)"> <div data-ng-repeat="program in item.programs track by program.id" class=go-epg-upcoming--program-container> <div data-go-mdl-epg-drct-schedule-item data-program=::program data-details-callback="::openDetails(item.channel, program)"></div> </div> </div> </section> </div> </div> <div data-ng-if="dataNonPlayback.length > 0" class="go-epg--divider go-epg-upcoming--divider"> <go-cmp-icon data-classes=go-epg--divider-icon data-name=tv-icon></go-cmp-icon> <span class=go-epg--divider-text data-translate=epg.divider></span> </div> <div class="go-epg-upcoming--inner-wrapper go-epg-upcoming--inner-wrapper__hidden go-epg-upcoming--non-playback-wrapper" data-ng-show="dataNonPlayback.length > 0"> <div class=go-epg-upcoming--channels-wrapper> <div class=go-epg-upcoming--channels data-ng-repeat="item in dataNonPlayback track by item.channel.id"> <go-mdl-epg-cmp-channel data-channel=::item.channel class=go-epg-upcoming--channel> </go-mdl-epg-cmp-channel> </div> </div> <div class=go-epg-upcoming--programs-wrapper> <section class=go-epg-upcoming--channels data-ng-repeat="item in dataNonPlayback track by item.channel.id"> <div class=go-epg-upcoming--loading data-ng-show=showLoading data-ng-hide="item.programs.length > 0 &&\n                !dataNonPlaybackNoInfo[$index]"> <span class=go-epg-upcoming--loading-text data-translate=epg.loading></span> </div> <div class=go-epg-upcoming--loading data-ng-show=dataNonPlaybackNoInfo[$index]> <span class=go-epg-upcoming--loading-text data-translate=epg.upcomingProgramError></span> </div> <div class=go-epg-upcoming--programs-row data-limits=limitsScroll data-in-view="lineInView(dataPlayback.length + $index, $inview, $inviewInfo)"> <div data-ng-repeat="program in item.programs track by program.id" class=go-epg-upcoming--program-container> <div data-go-mdl-epg-drct-schedule-item data-program=::program data-details-callback="::openDetails(item.channel, program)"></div> </div> </div> </section> </div> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-epg-days-menu> <div data-ng-repeat="item in filters.days track by $index" class=go-epg-days-menu--button-filter data-ng-click=selectDay($index) data-ng-class="{\'go-epg-days-menu--button-filter__selected\': selectedIndex === $index}"> <span data-ng-bind=item></span> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-placards-buttons data-ng-mouseenter=$ctrl.onMouseEnter() data-ng-mouseleave=$ctrl.onMouseLeave()> <p class=go-placards-buttons--title data-ng-class="::{\'go-placards-buttons--title__left\': $ctrl.channelLink}" data-ng-if="true || $ctrl.isButtonsVisible" data-translate={{$ctrl.title}}></p> <div class=go-placards-buttons--loading data-ng-if=!$ctrl.isButtonsVisible> <i class=go-placards-buttons--loading-spinner></i> </div> <div class=go-placards-buttons--btn-wrapper data-ng-if=$ctrl.isButtonsVisible> <div class="go-placards-buttons--btn go-placards-buttons--btn__restart" data-ng-if=::$ctrl.isRestartAvailable data-ng-click=::$ctrl.onRestart($event) data-ng-mouseenter=::$ctrl.onRestartMouseEnter() data-ng-mouseleave=::$ctrl.onButtonMouseLeave()></div> <div class="go-placards-buttons--btn go-placards-buttons--btn__play" data-ng-if=::$ctrl.isPlayAvailable data-ng-click=::$ctrl.onPlay($event) data-ng-mouseenter=::$ctrl.onPlayMouseEnter() data-ng-mouseleave=::$ctrl.onButtonMouseLeave()></div> <div class="go-placards-buttons--btn go-placards-buttons--btn__info" data-ng-if=::$ctrl.isInfoAvailable data-ng-mouseenter=::$ctrl.onInfoMouseEnter() data-ng-mouseleave=::$ctrl.onButtonMouseLeave()></div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-placards-landscape-image> <div class=go-image data-go-drct-image={{::$ctrl.imageUrl}} data-go-attr-image-srcset="{{::($ctrl.imageUrl | goFltrSrcset:$ctrl.srcsetName)}}" data-go-attr-image-alt-title="{{::($ctrl.alt || \'\')}}"></div> </div> '
}
, function(e, t) {
    e.exports = "<p class=go-placards-date> <data-go-cmp-record-icon class=go-placards-date--record-icon schedule-id=::$ctrl.content.id epg-program-id=::$ctrl.content.epgProgramId live-channel-id=::$ctrl.content.liveChannelId start-time=::$ctrl.content.startTime></data-go-cmp-record-icon> <time class=go-placards-date--day data-ng-if=::$ctrl.timePeriod data-ng-bind=::$ctrl.timePeriod> </time> <time data-ng-bind=::$ctrl.dateRange></time> </p> "
}
, function(e, t) {
    e.exports = '<div class=go-placards-progress-bar> <div class=go-placards-progress-bar--step data-ng-style="::{ width: $ctrl.progress }"></div> </div> '
}
, function(e, t) {
    e.exports = '<article class=go-placards-live-extended data-ng-mouseenter=$ctrl.onMouseEnter() data-ng-class=$ctrl.type data-ng-click=$ctrl.detailsCallback() data-ng-if=::$ctrl.isProgramLoaded> <div class=go-placards-live-extended--image> <data-go-mdl-epg-cmp-landscape-image data-image-url=::$ctrl.programImage data-is-big=::$ctrl.content.isBig data-alt=$ctrl.program.programName> </data-go-mdl-epg-cmp-landscape-image> <data-go-mdl-epg-cmp-buttons-live data-ng-if=::$ctrl.isPlacardHovered data-content="::($ctrl.program || $ctrl.channel)"> </data-go-mdl-epg-cmp-buttons-live> <div class=go-placards-live-extended--non-playback-icon data-ng-if=::$ctrl.isNonPlayback></div> <data-go-mdl-epg-cmp-progress-bar class=go-placards-live-extended--progress data-ng-show=::$ctrl.isCompleteProgram data-content=::$ctrl.program> </data-go-mdl-epg-cmp-progress-bar> </div> <div class=go-placards-live-extended--details> <h2 class=go-placards-live-extended--title data-translate="{{::($ctrl.program.programName || \'epg.upcomingProgramError\')}}"></h2> <data-go-mdl-epg-cmp-date data-content=::$ctrl.program></data-go-mdl-epg-cmp-date> </div> </article> '
}
, function(e, t) {
    e.exports = '<div class="go-epg--common go-epg-now"> <header class=go-epg-now--header data-ng-if="!$ctrl.isLoading && !$ctrl.isErrorMessage"> <div class="go-epg-now--header-layout go-fluid-left-small"> <label class=go-epg-now--header-title data-translate=epg.onNowLabel></label> <a class=go-epg-now--header-link href=tv-guide/epg data-translate=epg.showAllGuide></a> <go-mdl-smart-filter-drct-main class="go-epg-now--fix-position go-smart-filter" data-additional-overlay-class=smart-filtering__override data-on-filter=$ctrl.applyFilter> <go-mdl-smart-filter-drct-column class=go-smart-filter-column__x2 data-column-key=genre data-translation-title=common.genre.name data-get-items-svc-fn=goMdlEpgSvcFilter.getGenres> </go-mdl-smart-filter-drct-column> </go-mdl-smart-filter-drct-main> </div> </header> <go-cmp-spinner class=go-epg--loading data-ng-if=$ctrl.isLoading> </go-cmp-spinner> <go-mdl-epg-cmp-error data-ng-if=$ctrl.isErrorMessage></go-mdl-epg-cmp-error> <section class=go-epg-now--programs data-ng-if="!$ctrl.isLoading && !$ctrl.isErrorMessage"> <div> <div class=go-epg-now--programs-layout data-vs-repeat="{scrollParent: \'window\'}"> <article class=go-epg-now--programs-row data-ng-repeat="channel in $ctrl.playbackChannels track by channel.id"> <div class=go-epg-now--channel-wrapper> <go-mdl-epg-cmp-channel class=go-epg-now--channel data-channel=::channel></go-mdl-epg-cmp-channel> <data-go-mdl-epg-cmp-placard class=go-epg-now--program-info data-channel=::channel data-is-complete-program=true data-details-callback=::$ctrl.openDetails(channel.schedules[0])> </data-go-mdl-epg-cmp-placard> <data-go-mdl-epg-cmp-placard class=go-epg-now--program-info data-channel=::channel data-is-complete-program=false data-details-callback=::$ctrl.openDetails(channel.schedules[1])> </data-go-mdl-epg-cmp-placard> </div> </article> </div> <p data-ng-if="$ctrl.nonPlaybackChannels.length > 0" class="go-epg-now--programs-layout go-epg--divider"> <go-cmp-icon data-classes=go-epg--divider-icon data-name=tv-icon></go-cmp-icon> <span class=go-epg--divider-text data-translate=epg.divider></span> </p> <div class=go-epg-now--programs-layout data-vs-repeat="{scrollParent: \'window\'}"> <article class=go-epg-now--programs-row data-ng-repeat="channel in $ctrl.nonPlaybackChannels track by channel.id"> <div class=go-epg-now--channel-wrapper> <go-mdl-epg-cmp-channel class=go-epg-now--channel data-channel=::channel></go-mdl-epg-cmp-channel> <data-go-mdl-epg-cmp-placard class=go-epg-now--program-info data-channel=::channel data-is-complete-program=true data-details-callback=::$ctrl.openDetails(channel.schedules[0]) data-is-non-playback=true> </data-go-mdl-epg-cmp-placard> <data-go-mdl-epg-cmp-placard class=go-epg-now--program-info data-channel=::channel data-is-complete-program=false data-details-callback=::$ctrl.openDetails(channel.schedules[1]) data-is-non-playback=true> </data-go-mdl-epg-cmp-placard> </div> </article> </div> </div> </section> </div> '
}
, function(e, t) {
    e.exports = "<div class=go-epg-error> <go-cmp-icon class=go-epg-error--icon data-name=error></go-cmp-icon> <p class=go-epg-error--text data-translate=epg.error.title data-translate-attr-retry=epg.error.retry></p> </div> "
}
, function(e, t) {
    e.exports = '<div class=go-epg-channel> <span class="go-image go-epg-channel--image" data-go-drct-image={{::$ctrl.image}} data-go-attr-image-alt-title={{::$ctrl.channel.title}} data-go-attr-image-error-msg={{::$ctrl.channel.title}} data-go-attr-image-spotlight-bg=false> </span> <a class=go-epg-channel--link data-ng-if=::$ctrl.channelLink data-ng-href={{::$ctrl.channelLink}} translate=l7d.goToChannel></a> </div> '
}
, function(e, t) {
    e.exports = '<button class="go-details--btn go-btn go-btn__xl go-btn__blue go-btn__icon go-catchup" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.play()> <go-cmp-icon class=go-catchup--icon data-classes=go-catchup--icon-svg data-name=external-catchup-icon></go-cmp-icon> <span data-translate=details.playExternal></span> </button> '
}
, function(e, t) {
    e.exports = '<div class=go-bundle-amazon-activation> <div class=go-bundle-amazon-activation--wrapper data-ng-class="{\'go-bundle-amazon-activation--img_portrait\': !$ctrl.img.banner}"> <div data-ng-if="::$ctrl.img.banner || $ctrl.img.cover" class=go-bundle-amazon-activation--img> <div class=go-bundle-amazon-activation--img-container data-go-drct-image="{{$ctrl.img.banner || $ctrl.img.cover}}"></div> </div> <p class=go-bundle-amazon-activation--text data-translate=amazon.activation.description1></p> <p class=go-bundle-amazon-activation--text data-translate=amazon.activation.description2></p> <p> <button data-ng-click=$ctrl.onClick() class="go-btn go-btn__xl go-btn__blue" data-translate=amazon.activation.start></button> </p> </div> </div> '
}
, function(e, t) {
    e.exports = "<div class=go-panic> <a href=./ class=go-panic--link data-translate=panic.link></a> <h1 class=go-panic--title data-translate=panic.title></h1> <data-go-mdl-placards-cmp-live class=go-panic--content data-ng-if=$ctrl.liveSchedule data-content=::$ctrl.liveSchedule> </data-go-mdl-placards-cmp-live> </div> "
}
, function(e, t) {
    e.exports = "<section data-ng-show=$ctrl.isVisible class=go-upselling-grid> <header class=go-upselling-grid--header> <go-cmp-icon data-name=diamond data-classes=go-upselling-grid--img></go-cmp-icon> <h1 class=go-upselling-grid--title data-translate=upselling.message.otherContents></h1> </header> <go-mdl-smart-grid-cmp-main data-ng-if=!$ctrl.message data-on-get-content=$ctrl.loadContents> </go-mdl-smart-grid-cmp-main> </section> "
}
, function(e, t) {
    e.exports = '<section data-ng-class="{\'go-upselling-message__animation-header\': $ctrl.isFirstContent}" class=go-upselling-message> <go-cmp-icon data-name=error data-classes=go-upselling-message--img></go-cmp-icon> <div class=go-upselling-message--content> <h1 class=go-upselling-message--title data-translate=upselling.message.title></h1> <p class=go-upselling-message--description data-translate={{::$ctrl.messageText}}></p> <button type=button class="go-btn go-btn__xl go-btn__orange go-upselling-message--button" data-ng-if=$ctrl.isButtonVisible data-ng-click=$ctrl.onUpsellClick() data-translate={{$ctrl.buttonText}}></button> </div> </section> '
}
, function(e, t) {
    e.exports = '<div class=go-smart-filter data-ng-class="{\'go-smart-filter__open\': isOpen}" data-ng-show=isLoaded> <div class=go-smart-filter-button data-ng-click=toggle()> <span class=go-smart-filter-button-title data-translate="{{isOpen ? \'common.close\' : \'common.filter\'}}"> </span> <span class=go-smart-filter-button-icon> <span></span> <span></span> <span></span> </span> </div> <div class="go-smart-filter-pane ng-hide" data-ng-show=isOpen> <div class=go-smart-filter-pane-filters data-ng-transclude></div> <div class=go-smart-filter-pane-buttons> <button class="go-btn go-btn__grey" data-ng-click=toggle() data-translate=common.cancel></button> <button class="go-btn go-btn__blue" data-ng-click=applyFilters() data-translate=thematicArea.applyFilters></button> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-smart-filter-column> <p class=go-smart-filter-column-title data-translate={{::translationTitle}}></p> <div class=go-smart-filter-column__scroll data-perfect-scrollbar> <ul class=go-smart-filter-column-box> <li data-ng-repeat="item in items" class=go-smart-filter-column-box-item> <input type=radio id="{{(columnKey + $index)}}" name={{columnKey}} class=go-smart-filter-column-box-item-radio data-ng-model=options.selected data-ng-value=item /> <label for="{{columnKey + $index}}" class=go-smart-filter-column-box-item-label> <span class=go-smart-filter-column-box-item-text data-translate="{{(item.translationKey || item.title)}}"> </span> </label> </li> </ul> </div> </div> '
}
, function(e, t) {
    e.exports = '<section class=go-smart-grid-main data-infinite-scroll=$ctrl.paginate() data-infinite-scroll-disabled=$ctrl.infiniteScrollDisabled data-infinite-scroll-distance=0> <data-go-mdl-placards-cmp-content class=go-smart-grid-main--item data-ng-repeat="content in $ctrl.contents track by $index" data-content=content data-go-mdl-analytics-drct-analytic=::content.analyticsData data-viewport-watch> </data-go-mdl-placards-cmp-content> </section> '
}
, function(e, t) {
    e.exports = '<div class="go-thematic-area-header go-light-header"> <div class=go-light-header--fluid data-ng-class="{\'go-light-header--fluid__commercial-offer\': $ctrl.isShowSubscribedToggleVisible}" data-ignore-margin=true> <h1 data-ng-if="$ctrl.showDoubleBreadcrumb === false" class=go-light-header--title data-ng-bind=::$ctrl.category.title></h1> <div class=go-thematic-area-header--inline data-ng-if=$ctrl.showDoubleBreadcrumb> <h2 class="go-thematic-area-header--category go-light-header--title"> <a data-go-drct-product-link data-item=::$ctrl.category class=go-thematic-area-header--link data-ng-bind=::$ctrl.category.title> </a> </h2> <h1 class="go-thematic-area-header--main-title go-light-header--title" data-ng-bind=::$ctrl.genre.title></h1> </div> <go-cmp-toggle-switch data-ng-if=$ctrl.isShowSubscribedToggleVisible data-is-on=::$ctrl.isShowSubscribedOnly data-off-text-translate=common.allOffer data-on-text-translate=common.myOffer data-on-toggle=::$ctrl.applyFilters({isToggleSwitchOn})></go-cmp-toggle-switch> <go-mdl-smart-filter-drct-main class=go-light-header--filter data-on-filter=$ctrl.applyFilters> <go-mdl-smart-filter-drct-column data-ng-if=::$ctrl.showType data-column-key=type data-translation-title=thematicArea.typeOfContent data-get-items-svc-fn=goSvcCatalog.getTypes> </go-mdl-smart-filter-drct-column> <go-mdl-smart-filter-drct-column data-ng-if="$ctrl.showGenre && $ctrl.showGenreOption" class=go-smart-filter-column__x2 data-column-key=genre data-translation-title=common.genre.name data-get-items-svc-fn=goSvcCatalog.getGenres> </go-mdl-smart-filter-drct-column> <go-mdl-smart-filter-drct-column data-column-key=sorting data-translation-title=thematicArea.sorting data-get-items-svc-fn=goSvcCatalog.getSortings> </go-mdl-smart-filter-drct-column> </go-mdl-smart-filter-drct-main> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-ta-contents data-ng-class="{\'catchup-channel\': $ctrl.isCatchup}"> <go-mdl-thematic-area-cmp-header data-apply-filters=$ctrl.applyFilters data-show-type=$ctrl.showType data-show-genre=$ctrl.showGenre> </go-mdl-thematic-area-cmp-header> <go-mdl-thematic-area-cmp-breadcrumbs class=go-ta-contents--breadcrumbs data-total=$ctrl.count> </go-mdl-thematic-area-cmp-breadcrumbs> <go-mdl-smart-grid-cmp-main data-ng-if="!$ctrl.errorMessage && !$ctrl.showSubscribedOnlyGrid" data-on-get-content=$ctrl.getFilteredContents> </go-mdl-smart-grid-cmp-main> <p class=go-ta-contents--message data-ng-if=$ctrl.errorMessage data-translate={{$ctrl.errorMessage}}></p> <go-mdl-upselling-cmp-message data-ng-if="!$ctrl.errorMessage && $ctrl.message" data-message-text=$ctrl.message data-can-show-button=$ctrl.showSubscribedOnly data-is-first-content=$ctrl.showSubscribedOnlyGrid></go-mdl-upselling-cmp-message> <go-mdl-upselling-cmp-grid data-ng-if="!$ctrl.errorMessage && $ctrl.showSubscribedOnlyGrid" data-channel=$ctrl.currentChannel data-cw-uxr=::$root.cwTypes.TA_HIGHLIGHT></go-mdl-upselling-cmp-grid> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-catchup-grid> <header class=go-light-header> <div class=go-light-header--fluid data-ignore-margin=true> <h1 class=go-light-header--title data-ng-bind=::$ctrl.catchupTitle></h1> </div> </header> <section class=go-smart-grid-main data-ng-if=!$ctrl.message> <data-go-mdl-placards-cmp-content class=go-smart-grid-main--item data-ng-repeat="channel in $ctrl.channels" data-event-name=catchupChannel.detail data-content=::channel> </data-go-mdl-placards-cmp-content> </section> <p class=go-thematic-area--error data-ng-if=$ctrl.message data-translate={{$ctrl.message}}></p> </div> '
}
, function(e, t) {
    e.exports = '<data-go-mdl-thematic-area-cmp-catchup-channel data-ng-if="$ctrl.showCarousel === true"> </data-go-mdl-thematic-area-cmp-catchup-channel> <data-go-mdl-thematic-area-cmp-contents data-ng-if="$ctrl.showCarousel === false"> </data-go-mdl-thematic-area-cmp-contents> '
}
, function(e, t) {
    e.exports = '<div class=go-catchup-channel> <header class=go-light-header> <div class=go-light-header--fluid data-ignore-margin=true> <h1 class=go-light-header--title data-ng-bind=::$ctrl.catchupTitle></h1> </div> </header> <div class=go-catchup-channel--rows> <div data-ng-if="$ctrl.channels && $ctrl.channels.length" data-ng-repeat="channel in $ctrl.channels track by channel.id"> <go-mdl-carousel-cmp-thematic-area data-channel=channel data-cw-uxr="::(channel.extensionType === undefined ? $root.cwTypes.TA_HIGHLIGHT : $root.cwTypes.EXTENSION)" data-event-name="{{channel.isCatchup ? \'catchupChannel::channelSwipe\' : \'thematicArea::categoriesSwipe\'}}"> </go-mdl-carousel-cmp-thematic-area> </div> <p class=go-thematic-area--error data-ng-if=$ctrl.message data-translate={{$ctrl.message}}></p> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-thematic-area-breadcrumbs data-ng-show="$ctrl.breadcrumbsLoaded && $ctrl.totalLoaded"> <span class="go-thematic-area-breadcrumbs--text go-comma-space-separator" data-translate={{::$ctrl.type}}></span> <h2 class="go-thematic-area-breadcrumbs--text go-comma-space-separator" data-ng-if="::($ctrl.genre && !$ctrl.genre.isCatchup)" data-ng-bind=::$ctrl.genre.title></h2> <span data-translate={{$ctrl.sortingTranslationKey}}></span> <span class=go-thematic-area-breadcrumbs--text__brackets data-ng-bind=$ctrl.total></span> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-search-results> <go-mdl-search-cmp-header data-ng-if="ctrl.count !== \'undefined\'" class=go-search-results--header data-query=$ctrl.query data-apply-filters=$ctrl.applyFilters data-search-type=::$ctrl.searchType data-total=$ctrl.count> </go-mdl-search-cmp-header> <go-mdl-search-cmp-breadcrumbs class="go-search-results--breadcrumbs go-search-results--breadcrumbs__error" data-query=$ctrl.query data-total=$ctrl.count data-alt-total=$ctrl.altCount> </go-mdl-search-cmp-breadcrumbs> <go-mdl-smart-grid-cmp-main data-ng-if="!$ctrl.errorMessage && !$ctrl.noContents" data-on-get-content=$ctrl.getSearchResults> </go-mdl-smart-grid-cmp-main> <p class=go-search-results--message data-ng-if=$ctrl.errorMessage data-translate={{$ctrl.errorMessage}}></p> <go-mdl-upselling-cmp-message data-ng-if="!$ctrl.errorMessage && $ctrl.message" data-message-text=$ctrl.message data-can-show-button=$ctrl.showSubscribedOnly data-is-first-content=$ctrl.noContents></go-mdl-upselling-cmp-message> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-search-header data-ng-class="{\'go-light-header--fluid__commercial-offer\': $ctrl.isShowSubscribedToggleVisible}"> <p class="go-search-header--title ellipsis"> <span data-translate="{{$ctrl.total !== 0 ? $ctrl.searchType.translationKey : \'search.error.titleSearch\'}}" data-translate-values="::{query: ($ctrl.sanitizedQuery | goMdlSearchFltrRemoveQuotes)}" class=go-search-header--title__fuzzy> </span> </p> <go-cmp-toggle-switch data-ng-if=$ctrl.isShowSubscribedToggleVisible data-is-on=::$ctrl.isShowSubscribedOnly data-off-text-translate=common.allOffer data-on-text-translate=common.myOffer data-on-toggle=::$ctrl.applyFilters({isToggleSwitchOn})></go-cmp-toggle-switch> <go-mdl-smart-filter-drct-main class=go-search-header--filter data-on-filter=$ctrl.applyFilters> <go-mdl-smart-filter-drct-column data-column-key=type data-translation-title=thematicArea.typeOfContent data-get-items-svc-fn=goMdlSearchSvcFilter.getTypes> </go-mdl-smart-filter-drct-column> <go-mdl-smart-filter-drct-column data-column-key=sorting data-translation-title=thematicArea.sorting data-get-items-svc-fn=goMdlSearchSvcFilter.getSortings> </go-mdl-smart-filter-drct-column> </go-mdl-smart-filter-drct-main> </div> '
}
, function(e, t) {
    e.exports = '<p class=go-search-breadcrumbs data-ng-show="$ctrl.breadcrumbsLoaded && $ctrl.totalLoaded"> <span data-translate={{$ctrl.type.translationKey}}></span> <span class=go-search-breadcrumbs--genre data-translate={{$ctrl.sortingTranslationKey}}></span> <span class=go-search-breadcrumbs--parenthesis data-translate={{$ctrl.total}}></span> </p> '
}
, , function(e, t) {
    e.exports = '<div class="go-player-container player-container player-wrapper"><div id=video></div></div> '
}
, , function(e, t) {
    e.exports = '<div> <a data-ng-class="{\'go-mytv-title__hover\': $ctrl.isOnTitle}" data-ng-if=::$ctrl.isClickable href="{{::$ctrl.product | goFltrDetailsLink}}" data-ng-mouseenter="$ctrl.isOnTitle = true" data-ng-mouseleave="$ctrl.isOnTitle = false" data-go-mdl-analytics-drct-analytic=::$ctrl.analyticsData> <p class=go-mytv-title--text__big data-ng-bind=$ctrl.title></p> <p class=go-mytv-title--text__small data-ng-bind=$ctrl.subtitle></p> </a> <p data-ng-if=::!$ctrl.isClickable class=go-mytv-title--text__big data-ng-bind=$ctrl.title></p> </div> '
}
, function(e, t) {
    e.exports = '<div data-ng-show=$ctrl.contents.length> <div class=go-mytv--header> <div class="go-mytv--cell go-mytv--cell__title"> <span data-translate=myTv.table.titles.title></span> </div> <div class="go-mytv--cell go-mytv--cell__genre"> <span class=go-mytv--center data-translate=myTv.table.titles.genre></span> </div> <div class="go-mytv--cell go-mytv--cell__status"> <span class=go-mytv--center data-translate=myTv.table.titles.state></span> </div> <div class="go-mytv--cell go-mytv--cell__duration"> <span class=go-mytv--center data-translate=myTv.table.titles.duration></span> </div> <div class="go-mytv--cell go-mytv--cell__added"> <span class=go-mytv--center data-translate="{{\'myTv.table.titles.\' + ($ctrl.section === \'WATCHLOG\' ? \'watched\' : \'added\')}}"></span> </div> <div class="go-mytv--cell go-mytv--cell__remove"></div> </div> <div class="go-mytv--row go-mytv--remove-animation" data-ng-repeat="content in $ctrl.contents"> <div class="go-mytv--cell go-mytv--cell__image"> <a class="go-image go-mytv--cover go-image" data-go-mdl-analytics-drct-analytic=::content.analyticsData data-go-drct-image={{::content.cover}} data-go-attr-image-link="{{::content | goFltrDetailsLink}}" data-go-attr-image-triangle=::content> </a> </div> <div class="go-mytv--cell go-mytv--cell__title"> <go-mdl-my-tv-cmp-title data-product=::content data-section={{$ctrl.section}}> </go-mdl-my-tv-cmp-title> <span class="go-mytv--cell go-mytv--external-catchup" data-ng-if=content.isExternalCATCHUP></span> </div> <div class="go-mytv--cell go-mytv--cell__genre"> <span class=go-mytv--center data-translate="{{content.type !== $root.types.MovieType.Episode || $ctrl.section === \'FOLLOW\' ?\n              content.genre[0].name : \'myTv.table.rows.series\'}}"></span> </div> <div class="go-mytv--cell go-mytv--cell__status"> <go-mdl-my-tv-cmp-progress-bar class=go-mytv--progress data-product=::content></go-mdl-my-tv-cmp-progress-bar> </div> <div class="go-mytv--cell go-mytv--cell__duration"> <span class=go-mytv--center data-translate="{{content.duration | goFltrDuration:true}}"></span> </div> <div class="go-mytv--cell go-mytv--cell__added"> <span class=go-mytv--center data-ng-bind="::(content.tags[0].creationDate | goFltrDateUniapi : $ctrl.dateFormat)"></span> </div> <div class="go-mytv--cell go-mytv--cell__remove"> <div data-ng-click="$ctrl.removeContent(content, $index)" class=go-mytv--remove> <go-cmp-icon data-classes=go-mytv--remove-icon data-name=remove-icon></go-cmp-icon> <span data-translate={{::$ctrl.actionText}}></span> </div> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-mytv-rented data-ng-show="$ctrl.dataTable.length || $ctrl.showAdultNotification"> <div class=go-mytv--info data-ng-show=$ctrl.showAdultNotification> <span class=go-mytv--info-text data-translate=myTv.showAdults></span> <button class=go-mytv--info-confirm data-ng-click=$ctrl.showAdults() data-translate=common.yes></button> <button class=go-mytv--info-close data-ng-click=$ctrl.hideAdultNotification()> <go-cmp-icon data-classes=go-mytv--remove-icon data-name=remove-icon></go-cmp-icon> </button> </div> <div class=go-mytv--header> <div class="go-mytv--cell go-mytv--cell__title"> <span data-translate=myTv.table.titles.title></span> </div> <div class="go-mytv--cell go-mytv--cell__genre"> <span class=go-mytv--center data-translate=myTv.table.titles.genre></span> </div> <div class="go-mytv--cell go-mytv--cell__status"> <span class=go-mytv--center data-translate=myTv.table.titles.state></span> </div> <div class="go-mytv--cell go-mytv--cell__duration"> <span class=go-mytv--center data-translate=myTv.table.titles.duration></span> </div> <div class="go-mytv--cell go-mytv--cell__added"> <span class=go-mytv--center data-translate=myTv.table.titles.rented></span> </div> </div> <div class=go-mytv--row data-ng-repeat="item in $ctrl.dataTable"> <div class="go-mytv--cell go-mytv--cell__image"> <a class="go-image go-mytv--cover" data-go-drct-image={{::item.originalCover}} data-go-attr-image-link="{{::item | goFltrDetailsLink}}" data-go-attr-image-triangle=::item data-go-mdl-analytics-drct-analytic=::item.analyticsData> </a> </div> <div class="go-mytv--cell go-mytv--cell__title"> <div class=go-mytv-rented--expiration> <div class=go-detail-expiration data-ng-if=item.hasExpirationToWatch data-ng-bind="item.expirationDate | goFltrExpiresIn"></div> </div> <go-mdl-my-tv-cmp-title data-product=::item data-section=RENTAL> </go-mdl-my-tv-cmp-title> <span class=go-mytv--external-catchup data-ng-if=item.isExternalCATCHUP></span> </div> <div class="go-mytv--cell go-mytv--cell__genre"> <span class=go-mytv--center data-ng-bind=::$ctrl.getGenreName(item)></span> </div> <div class="go-mytv--cell go-mytv--cell__status"> <go-mdl-my-tv-cmp-progress-bar class=go-mytv--progress data-ng-if=::item.resumeValue data-product=::item></go-mdl-my-tv-cmp-progress-bar> </div> <div class="go-mytv--cell go-mytv--cell__duration"> <span class=go-mytv--center data-ng-bind=::$ctrl.getDuration(item)></span> </div> <div class="go-mytv--cell go-mytv--cell__added"> <span class=go-mytv--center data-ng-bind="::(item.rentedIn | goFltrDateUniapi : $ctrl.dateFormat)"></span> </div> </div> </div> '
}
, function(e, t) {
    e.exports = "<div data-ng-show=$ctrl.isBarVisible class=go-mytv-progress-bar--bar> <span class=go-mytv-progress-bar--bg></span> <span class=go-mytv-progress-bar--progress></span> </div> <p class=go-mytv-progress-bar--text data-translate={{$ctrl.text}}></p> "
}
, function(e, t) {
    e.exports = '<div class=go-mytv-main-screen> <header class=go-mytv-main-screen--header> <h2 class=go-mytv-main-screen--header-title data-translate=myTv.myContents></h2> <nav class="go-mytv-main-screen--header-menu go-sub-menu" data-ng-class="{\'go-sub-menu__opened\': $ctrl.isOpened}"> <div data-ng-repeat="item in $ctrl.sections" class=go-sub-menu--wrapper> <a data-ng-if="item.link !== $ctrl.currentPath" data-ng-href=my-tv/{{item.link}} data-translate={{item.name}} data-translate-attr-title={{item.name}} data-ng-click=$ctrl.closeMenu() class="go-mytv-main-screen--header-menu-item go-sub-menu--item go-mytv-main-screen--header-menu-link"> </a> <h1 class="go-mytv-main-screen--header-menu-item go-sub-menu--item go-sub-menu--item__active go-mytv-main-screen--header-menu-item__active" data-ng-if="item.link === $ctrl.currentPath" data-translate={{item.name}} data-ng-click=$ctrl.toggleMenu()></h1> </div> </nav> </header> <go-cmp-spinner class=go-loading-area data-ng-show=$ctrl.isLoading></go-cmp-spinner> <section class=go-mytv-main-screen--content data-ng-switch=$ctrl.status> <div data-ng-switch-when=request data-ng-switch=$ctrl.currentPath> <go-mdl-my-tv-cmp-table data-ng-switch-when=watched data-section=WATCHLOG data-status=$ctrl.status> </go-mdl-my-tv-cmp-table> <go-mdl-my-tv-cmp-table data-ng-switch-when=watchlist data-section=WATCHLIST data-status=$ctrl.status> </go-mdl-my-tv-cmp-table> <go-mdl-my-tv-cmp-table data-ng-switch-when=follow data-section=FOLLOW data-status=$ctrl.status> </go-mdl-my-tv-cmp-table> <go-mdl-my-tv-cmp-recordings data-ng-switch-when=recordings-programmed> </go-mdl-my-tv-cmp-recordings> <go-mdl-my-tv-cmp-recordings data-ng-switch-when=recordings-available> </go-mdl-my-tv-cmp-recordings> <go-mdl-my-tv-cmp-rented data-ng-switch-when=rented data-status=$ctrl.status> </go-mdl-my-tv-cmp-rented> </div> <div data-ng-switch-when=empty data-ng-switch=$ctrl.currentPath> <div data-ng-switch-when=rented data-go-mdl-my-tv-drct-rented></div> </div> <div class=go-mytv-main-screen--content-empty data-ng-switch-when=empty> <div class=go-mytv-main-screen--content-empty-image data-ng-class="\'go-mytv-main-screen--content-empty-image__\' + $ctrl.currentPath"></div> <div class=go-mytv-main-screen--content-message data-ng-switch="$ctrl.currentPath.indexOf(\'recordings\') === 0 && !$ctrl.isPvrUserActive"> <span class=go-mytv-main-screen--content-message__upper data-translate={{$ctrl.getSection($ctrl.currentPath).emptyUpperText}} data-ng-switch-when=false></span> <span class=go-mytv-main-screen--content-message__lower data-translate={{$ctrl.getSection($ctrl.currentPath).emptyLowerText}} data-ng-switch-when=false></span> <span class=go-mytv-main-screen--content-message__upper data-translate=myTv.empty.emptyRPVROnlyConfigUpperText data-ng-switch-when=true></span> <span class=go-mytv-main-screen--content-message__lower data-translate=myTv.empty.emptyRPVROnlyConfigLowerText data-ng-switch-when=true></span> </div> <a data-ng-href={{::($ctrl.getSection($ctrl.currentPath).buttonLink)}} data-ng-if="$ctrl.currentPath.indexOf(\'recordings\') !== 0 && !$ctrl.isPvrUserActive" class="go-btn go-btn__blue go-mytv-main-screen--content-empty-button" data-translate={{$ctrl.getSection($ctrl.currentPath).buttonText}}> </a> </div> <div class=go-mytv-main-screen--content-error data-ng-switch-when=error> <div class=go-mytv-main-screen--content-message> <span class=go-mytv-main-screen--content-message__upper data-translate=myTv.error.errorUpperText></span> <span class=go-mytv-main-screen--content-message__lower data-translate=myTv.error.errorLowerText></span> </div> </div> </section> </div> '
}
, function(e, t) {
    e.exports = '<div class=ng-hide itemscope itemtype=http://schema.org/Organization> <meta itemprop=name content="{{::(\'seoMicrodata.organization.name\' | translate)}}"/> <meta itemprop=url content="{{::(\'seoMicrodata.organization.url\' | translate)}}"/> <meta itemprop=logo content="{{::(\'seoMicrodata.organization.logo\' | translate)}}"/> </div> <div class=ng-hide itemscope itemtype=http://schema.org/WebSite> <meta itemprop=name content="{{::(\'seoMicrodata.website.name\' | translate)}}"/> <meta itemprop=alternateName content="{{::(\'seoMicrodata.website.alternateName\' | translate)}}"/> <meta itemprop=text content="{{::(\'seoMicrodata.website.text\' | translate)}}"/> <meta itemprop=url content={{::$ctrl.domain}} /> <meta itemprop=image content={{::$ctrl.domain}}/logo.png /> <form itemprop=potentialAction itemscope itemtype=http://schema.org/SearchAction> <meta itemprop=target content="{{::$ctrl.domain}}/search?q={search_term_string}"/> <input itemprop=query-input type=text name=search_term_string required/> <input type=submit /> </form> </div> '
}
, function(e, t) {
    e.exports = ' <header class=go-main--header data-ng-if=$ctrl.isHeaderNavigable> <div class=go-main__wrapper> <go-mdl-layout-cmp-first-header class="go-main--header-first clearfix"></go-mdl-layout-cmp-first-header> <go-mdl-authentication-cmp-login-button class="pull-right go-login__button"></go-mdl-authentication-cmp-login-button> </div> <go-mdl-layout-cmp-second-header class=go-main--header-second></go-mdl-layout-cmp-second-header> </header> <header class=go-main--header data-ng-if=!$ctrl.isHeaderNavigable> <div class="go-main--header-second go-main--header-second__center-children"> <a class=go-second-header--logo href=./ data-ng-click="$ctrl.isHeaderNavigable = true" data-translate data-translate-attr-title=title> <span class=go-second-header--logo-image></span> </a> </div> </header> <main class=go-main--view> <go-mdl-error-cmp-generic></go-mdl-error-cmp-generic> <div class=go-main--view-wrapper data-ng-view data-autoscroll=$ctrl.enableAutoscroll></div> </main> <footer class=go-main--footer><go-mdl-layout-cmp-footer></go-mdl-layout-cmp-footer></footer> <go-cmp-android-banner data-ng-if=::$ctrl.isAndroid></go-cmp-android-banner> <go-cmp-cookies-warning></go-cmp-cookies-warning> <go-cmp-first-login></go-cmp-first-login> <go-mdl-layout-cmp-microdata></go-mdl-layout-cmp-microdata> '
}
, function(e, t) {
    e.exports = "<div class=go-error-page> <div class=go-welcome--wrapper> <div class=go-error-page--img><go-cmp-icon data-name=error></go-cmp-icon></div> <p class=go-error-page--text data-translate=\"{{'error.statusCode.' + (error || 'other')}}\"></p> <p class=\"go-error-page--text go-error-page--action\" data-translate=error.message data-translate-values=\"{\n          back: 'back();',\n          home: './'\n        }\"></p> </div> </div> "
}
, , function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-class="{ \'go-btn__loading\': $ctrl.isLoading }" data-ng-click=::$ctrl.onClick() data-ng-if=$ctrl.isVisible> <span data-translate=details.amazonAlreadyUser></span> </button> '
}
, function(e, t) {
    e.exports = "<div class=go-details-triangle ng-if=\"$ctrl.isYellow || $ctrl.isOrange\" data-ng-class=\"{\n  'go-details-triangle__yellow': $ctrl.isYellow,\n  'go-details-triangle__orange': $ctrl.isOrange\n}\"></div> "
}
, function(e, t) {
    e.exports = "<h1 class=go-details-title data-ng-bind=$ctrl.titleTxt></h1> "
}
, function(e, t) {
    e.exports = '<span data-translate=audiosAndSubtitles.subtitle></span>: <span class=go-details--spec-value data-ng-repeat="subtitle in $ctrl.subtitles" data-ng-if=::subtitle data-ng-bind="::(subtitle | goFltrLanguage)"> </span> '
}
, function(e, t) {
    e.exports = '<div class=go-details-purchase-dropdown> <button class="go-btn go-btn__xl go-btn__orange go-btn__icon go-details-purchase-dropdown--btn go-details--btn" data-ng-class="{\n        \'go-btn__loading\': $ctrl.isLoading,\n        \'go-details-purchase-dropdown--btn__opened\': $ctrl.isOpened\n      }" data-ng-blur=::$ctrl.closeDropdown() data-ng-click=::$ctrl.onToggleDropdown() data-ng-if=$ctrl.isVisible> <span data-translate=details.subscribeDropdown></span> <span class="go-details-purchase-dropdown--chevron go-glyphicon-chevron-down go-glyphicon" data-ng-class="{\n          \'go-details-purchase-dropdown--chevron__opened\': $ctrl.isOpened\n        }"> </span> </button> <div class=go-details-purchase-dropdown--dropdown data-ng-if=$ctrl.isOpened> <span class=go-details-purchase-dropdown--item data-ng-repeat="subscription in ::$ctrl.subscriptions" data-ng-bind=::subscription.title data-ng-mousedown="::$ctrl.redirectTo(subscription | goFltrDetailsLink)"> </span> </div> </div> '
}
, function(e, t) {
    e.exports = '<a class="go-btn go-btn__xl go-btn__orange go-details--btn" data-ng-class="{ \'go-btn__loading\': $ctrl.isLoading }" data-ng-if=$ctrl.isVisible data-ng-href={{::$ctrl.url}}> <span data-ng-bind=::$ctrl.text></span> </a> '
}
, function(e, t) {
    e.exports = "<button class=\"go-btn go-btn__xl go-btn__grey-dark go-btn__squared go-details--btn\" data-ng-click=::$ctrl.onClick()> <span class=go-glyphicon data-ng-class=\"::{\n        'go-glyphicon-facebook': $ctrl.socialNetwork === 'facebook',\n        'go-glyphicon-twitter': $ctrl.socialNetwork === 'twitter'\n    }\"></span> </button> "
}
, function(e, t) {
    e.exports = '<div class=go-details-season-dropdown data-ng-class="{\'go-details-season-dropdown__open\': $ctrl.isOpened}"> <button class="go-btn go-btn__grey-dark go-btn__icon go-details--btn go-details-season-dropdown--btn" data-ng-blur=::$ctrl.closeDropdown() data-ng-click=::$ctrl.toggleDropdown()> <span data-ng-bind-html="$ctrl.selectedSeason | goMdlDetailsFltrSeason:({\n        withEpisode: false,\n        withAbbreviation: true})"> </span> <span class="go-details-season-dropdown--chevron go-glyphicon-chevron-down go-glyphicon"> </span> </button> <div class=go-details-season-dropdown--dropdown> <span class=go-details-season-dropdown--item data-ng-repeat="season in ::$ctrl.seasons" data-ng-class="{\'go-details-season-dropdown--item__active\': season.id == $ctrl.selectedSeasonId }" data-ng-mousedown=$ctrl.onSeasonSelected(season.id) data-ng-bind="::(season | goMdlDetailsFltrSeason:{\n          withEpisode: true,\n          withAbbreviation: false\n        })"> </span> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-movie-tabs> <div class=go-movie-tabs--menu> <go-mdl-details-cmp-season-dropdown data-ng-if="::$ctrl.seasons.length > 0" data-ng-show=$ctrl.isSeasonsSelected data-seasons=::$ctrl.seasons data-selected-season-id=$ctrl.selectedSeasonId data-on-season-selected=$ctrl.selectSeason(id)> </go-mdl-details-cmp-season-dropdown> <span class=go-movie-tabs--menu-item data-ng-repeat="tab in $ctrl.tabs" data-ng-hide="($index === 0 && ($ctrl.isSeasonsSelected || $ctrl.seasons.length === 0))" data-ng-class="{\n          \'go-movie-tabs--menu-item__selected\': !$first && $ctrl.tabSelected.index === $index,\n          \'go-movie-tabs--menu-item__first\': $first\n        }" data-translate={{tab.name}} data-ng-click=::$ctrl.onTabClicked($index)></span> </div> <go-mdl-carousel-cmp-episode data-ng-class="{\'go-movie-tabs--carousel__hidden\':!$ctrl.isSeasonsSelected || $ctrl.loadingEpisodes}" data-episodes=$ctrl.episodes data-event-name=detail::episodeSwipe> </go-mdl-carousel-cmp-episode> <go-mdl-carousel-cmp-recommendations data-ng-class="{\'go-movie-tabs--carousel__hidden\':!$ctrl.isRecommendationsSelected}" data-product-id=::$ctrl.serie.id data-genres=::$ctrl.serie.genres data-cw-uxr=::$root.cwTypes.VOD_SIMILAR data-event-name=detail::recommendationSwipe data-on-items="::$ctrl.registerTab({ name: \'details.related\', index: 1 })"> </go-mdl-carousel-cmp-recommendations> <go-mdl-carousel-cmp-upselling data-ng-if=$ctrl.isUpsellingVisible data-ng-class="{\'go-movie-tabs--carousel__hidden\':!$ctrl.isUpsellingSelected}" data-subscriptions=::$ctrl.serie.subscriptions data-event-name=detail::upsellingSwipe> </go-mdl-carousel-cmp-upselling> <go-cmp-spinner data-ng-if=$ctrl.loadingEpisodes> </go-cmp-spinner> <div data-ng-if=$ctrl.episode class="go-details--info go-details--info__chapter" data-ng-class="{\'go-details--info__chapter__hidden\': !$ctrl.isSeasonsSelected || $ctrl.loadingEpisodes}"> <div class=go-details--header> <data-go-mdl-details-cmp-title class=go-details--title data-title=$ctrl.episode.name data-episode-number=$ctrl.episode.episodeNumber> </data-go-mdl-details-cmp-title> </div> <div class=go-details--buttons> <data-go-mdl-catchup-cmp-main data-product=$ctrl.episode> </data-go-mdl-catchup-cmp-main> <data-go-mdl-details-cmp-play-vod data-product=$ctrl.episode></data-go-mdl-details-cmp-play-vod> <data-go-mdl-details-cmp-restart-vod data-product=$ctrl.episode></data-go-mdl-details-cmp-restart-vod> <data-go-mdl-details-cmp-purchase data-product=$ctrl.episode></data-go-mdl-details-cmp-purchase> <data-go-mdl-details-cmp-purchase-dropdown data-product=$ctrl.selectedSeason></data-go-mdl-details-cmp-purchase-dropdown> <data-go-mdl-details-cmp-purchase-dropdown data-product=$ctrl.episode></data-go-mdl-details-cmp-purchase-dropdown> </div> <div class="go-details--specs go-details--specs__main"> <data-go-mdl-details-cmp-age-rating class=go-details--spec data-age-rating=$ctrl.episode.ageRating></data-go-mdl-details-cmp-age-rating> <span class=go-details--spec data-ng-bind=$ctrl.episode.year></span> <data-go-mdl-details-cmp-duration class=go-details--spec ng-if="$ctrl.episode.duration > 0" data-duration=$ctrl.episode.duration include-meta=true></data-go-mdl-details-cmp-duration> <data-go-mdl-details-cmp-qualities class=go-details--spec data-medias=$ctrl.episode.medias data-ng-if=$ctrl.episode.medias.length> </data-go-mdl-details-cmp-qualities> <data-go-mdl-details-cmp-audios class=go-details--spec data-ng-if=$ctrl.episode.audioCodes.length data-audios=$ctrl.episode.audioCodes> </data-go-mdl-details-cmp-audios> <data-go-mdl-details-cmp-subtitles class=go-details--spec data-ng-if=$ctrl.episode.subtitleCodes.length data-subtitles=$ctrl.episode.subtitleCodes> </data-go-mdl-details-cmp-subtitles> </div> <p class=go-details--description data-ng-bind=$ctrl.episode.description></p> <div class="go-details--specs go-details--specs__secondary" data-ng-if=::$ctrl.episode.directors.length> <data-go-mdl-details-cmp-cast class=go-details--spec data-cast=$ctrl.episode.directors data-title="\'product.director\'" data-product-id=$ctrl.episode.id> </data-go-mdl-details-cmp-cast> </div> <div class="go-details--specs go-details--specs__secondary" data-ng-if=::$ctrl.episode.actors.length> <data-go-mdl-details-cmp-cast class=go-details--spec data-cast=$ctrl.episode.actors data-title="\'product.cast\'"> </data-go-mdl-details-cmp-cast> </div> </div> </div> '
}
, function(e, t) {
    e.exports = "<data-go-mdl-details-cmp-loading data-ng-if=$ctrl.isLoading></data-go-mdl-details-cmp-loading> <div class=go-details data-ng-if=!$ctrl.isLoading> <data-go-mdl-details-cmp-meta-serie data-ng-if=::$ctrl.serie data-serie=::$ctrl.serie data-audio-codes=::$ctrl.episode.audioCodes data-seasons=::$ctrl.seasons> </data-go-mdl-details-cmp-meta-serie> <data-go-mdl-details-cmp-serie-billboard data-ng-if=::$ctrl.serie data-product=$ctrl.serie data-seasons=::$ctrl.seasons data-setup-config=$ctrl.setupConfig> </data-go-mdl-details-cmp-serie-billboard> <data-go-mdl-details-cmp-serie-tabs data-ng-if=::$ctrl.serie data-serie=::$ctrl.serie data-seasons=$ctrl.seasons data-episodes=$ctrl.episodes data-setup-config=$ctrl.setupConfig> </data-go-mdl-details-cmp-serie-tabs> </div> "
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.onClick() data-translate={{$ctrl.getPvrText()}}></button> <div class=go-record--options data-ng-if=$ctrl.showPopover data-ng-class="{\n      \'go-record--options__record\': !$ctrl.isRecording,\n      \'go-record--options__cancel\': $ctrl.isRecording\n    }"> <ul class=go-record--options-list> <li class="go-record--options-list-element go-record--options-list-element-text" data-ng-click="$ctrl.addRecording(false, $event)" data-translate=epg.pvr.popover.episode data-ng-if=!$ctrl.isRecording></li> <li class="go-record--options-list-element go-record--options-list-element-text" data-ng-click="$ctrl.addRecording(true, $event)" data-translate=epg.pvr.popover.season data-ng-if=!$ctrl.isRecording></li> <li class="go-record--options-list-element go-record--options-list-element-text" data-ng-if=$ctrl.isRecording data-ng-click=$ctrl.onCancelRecordingFromPopover($event) data-translate="{{\n          $ctrl.recording.type === $root.types.RecordingScheduleType.SingleEvent ?\n            \'epg.pvr.popover.episode\' : \'epg.pvr.popover.season\'\n          }}"></li> </ul> </div> <div data-ng-if=$ctrl.showWarning data-translate=epg.pvr.onAirWarning class="go-record--options go-record--options__warning"></div> '
}
, function(e, t) {
    e.exports = '<span class=go-details--colon-separator data-ng-if=$ctrl.qualities.length data-translate=audiosAndSubtitles.quality> </span> <span class=go-details--spec-value data-ng-repeat="quality in $ctrl.qualities" data-ng-bind=::quality> </span> '
}
, function(e, t) {
    e.exports = '<div class=go-details-purchase-dropdown> <button class="go-btn go-btn__xl go-btn__yellow go-btn__icon go-details-purchase-dropdown--btn go-details--btn" data-ng-class="{\n        \'go-btn__loading\': $ctrl.isLoading,\n        \'go-details-purchase-dropdown--btn__opened\': $ctrl.isOpened\n      }" data-ng-blur=::$ctrl.closeDropdown() data-ng-click=::$ctrl.toggleDropdown() data-ng-if=$ctrl.isVisible> <span class="go-glyphicon go-glyphicon-ticket"></span> <span data-ng-bind=::$ctrl.getDropdownText()></span> <span class="go-details-purchase-dropdown--chevron go-glyphicon-chevron-down go-glyphicon" data-ng-class="{\n          \'go-details-purchase-dropdown--chevron__opened\': $ctrl.isOpened\n        }"> </span> </button> <div class=go-details-purchase-dropdown--dropdown data-ng-if=$ctrl.isOpened> <span class=go-details-purchase-dropdown--item data-ng-repeat="price in ::$ctrl.prices" data-ng-mousedown=::$ctrl.onPurchase(price) data-ng-bind=::$ctrl.getDropdownItemText(price)> </span> </div> </div> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" translate=details.playTrailer data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.onClick()></button> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-if=$ctrl.isVisible data-ng-click=::$ctrl.onClick() data-translate=placards.playChannel></button> '
}
, function(e, t) {
    e.exports = '<div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.cancellingText data-ng-bind=$ctrl.cancellingText></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isNotCompatiblePurchase data-translate=details.notificationBar.subscritionError></div> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__grey-dark go-details--btn" data-ng-if=!$ctrl.product.isCancelling() data-ng-click=::$ctrl.onClick() data-translate=common.cancel></button> '
}
, function(e, t) {
    e.exports = '<button class="go-btn go-btn__xl go-btn__orange go-details--btn" data-ng-click=::$ctrl.onClick() data-translate=subscriptions.rent></button> '
}
, function(e, t) {
    e.exports = '<section class=go-subscriptions-channels data-ng-if=$ctrl.product.hasLiveChannels> <div class=go-subscriptions-channels--header> <h2 class=go-details--section-title data-translate=details.channelsIncluded data-translate-values="{length: $ctrl.product.liveChannels.length}"></h2> <div class=go-subscriptions-channels--more-elements data-ng-click="$ctrl.isChannelsExpanded = !$ctrl.isChannelsExpanded" ng-if=$ctrl.isCollapsibleVisibile> <span data-ng-bind="($ctrl.isChannelsExpanded ? \'subscriptions.seeLessChannels\' : \'subscriptions.seeMoreChannels\') | translate"></span> </div> </div> <div class=go-subscriptions-channels--channels data-ng-class="{\'go-subscriptions-channels--channels__expanded\': $ctrl.isChannelsExpanded}"> <div class="go-image go-subscriptions-channels--logo" data-ng-repeat="liveChannel in\n        ::$ctrl.product.liveChannels" data-go-drct-image={{::liveChannel.logoBig}} data-go-attr-image-alt-title={{::liveChannel.name}} data-go-attr-image-error-msg={{::liveChannel.name}} data-go-attr-image-spotlight-bg=false></div> </div> </section> '
}
, function(e, t) {
    e.exports = '<data-go-mdl-details-cmp-loading data-ng-if=$ctrl.isLoading></data-go-mdl-details-cmp-loading> <div class="go-details go-details__subscription" data-ng-if=!$ctrl.isLoading> <data-go-mdl-details-cmp-subscription-billboard data-product=$ctrl.subscription> </data-go-mdl-details-cmp-subscription-billboard> <data-go-mdl-details-cmp-subscription-channels data-product=$ctrl.subscription> </data-go-mdl-details-cmp-subscription-channels> <section class=go-details--related data-ng-if=$ctrl.subscription.related.length> <h2 class=go-details--section-title data-translate=details.subscriptionRelated></h2> <data-go-mdl-carousel-drct-swiper data-contents=$ctrl.subscription.related data-event-name=detail::recommendationSwipe> </data-go-mdl-carousel-drct-swiper> <div class=go-details--related data-ng-if=$ctrl.subscription.related.length></div> </section> </div> '
}
, function(e, t) {
    e.exports = "<data-go-mdl-details-cmp-loading data-ng-if=$ctrl.isLoading></data-go-mdl-details-cmp-loading> <div class=go-details data-ng-if=!$ctrl.isLoading> <data-go-mdl-details-cmp-meta data-product=::$ctrl.movie></data-go-mdl-details-cmp-meta> <data-go-mdl-details-cmp-vod-billboard data-product=$ctrl.movie></data-go-mdl-details-cmp-vod-billboard> <data-go-mdl-details-cmp-movie-tabs data-movie=::$ctrl.movie></data-go-mdl-details-cmp-movie-tabs> </div> "
}
, function(e, t) {
    e.exports = '<div class=go-meta itemscope itemtype=http://schema.org/TVSeries> <meta itemprop=name content={{::$ctrl.name}} /> <meta itemprop=typicalAgeRange content={{::$ctrl.ageRating}}- /> <meta itemprop=genre content={{::$ctrl.genre}} /> <meta itemprop=inLanguage content={{::$ctrl.inLanguage}} /> <meta itemprop=description content={{::$ctrl.description}} /> <meta itemprop=url content={{::$ctrl.url}} /> <meta itemprop=image content={{::$ctrl.image}} /> <meta itemprop=datePublished content={{::$ctrl.datePublished}} /> <meta itemprop=numberOfSeasons content={{::$ctrl.numberOfSeasons}} /> <meta itemprop=numberOfEpisodes content={{::$ctrl.numberOfEpisodes}} /> <div data-ng-repeat="actor in ::$ctrl.actors" itemprop=actor itemscope itemtype=http://schema.org/Person> <meta itemprop=name content={{::actor}} /> </div> <div data-ng-repeat="director in ::$ctrl.directors" itemprop=director itemscope itemtype=http://schema.org/Person> <meta itemprop=name content={{::director}} /> </div> <div itemprop=potentialAction itemscope itemtype=http://schema.org/WatchAction> <div itemprop=target itemscope itemtype=http://schema.org/EntryPoint> <meta itemprop=urlTemplate content={{::$ctrl.url}} /> <meta itemprop=actionPlatform content=http://schema.org/DesktopWebPlatform /> <meta itemprop=inLanguage content={{::$ctrl.country}} /> </div> <div itemprop=expectsAcceptanceOf itemscope itemtype=http://schema.org/Offer> <meta data-ng-if=::$ctrl.isFree itemprop=category content=free /> <meta data-ng-if=::$ctrl.isRental itemprop=category content=rental /> <meta data-ng-if=::$ctrl.isSubscribable itemprop=category content=subscription /> <meta itemprop=availabilityStarts content={{::$ctrl.licenseStart}} /> <meta itemprop=availabilityEnds content={{::$ctrl.licenseEnd}} /> <div itemprop=eligibleRegion itemscope itemtype=http://schema.org/Country> <meta itemprop=name content={{::$ctrl.eligibleRegion}} /> </div> </div> </div> <div itemprop=containsSeason itemscope itemtype=http://schema.org/TVSeason data-ng-if=::$ctrl.seasons data-ng-repeat="season in ::$ctrl.seasons"> <meta itemprop=name content={{season.name}} /> <meta itemprop=numberOfEpisodes content={{season.childrenCount}} /> <meta itemprop=seasonNumber content={{season.seasonNumber}} /> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-meta itemscope itemtype={{::$ctrl.itemType}}> <meta itemprop=name content={{::$ctrl.name}} /> <meta itemprop=duration content="{{::($ctrl.duration | goFltrTimeIso)}}"/> <meta itemprop=typicalAgeRange content={{::$ctrl.ageRating}}- /> <meta itemprop=genre content={{::$ctrl.genre}} /> <meta itemprop=inLanguage content={{::$ctrl.inLanguage}} /> <meta itemprop=subtitleLanguage content={{::$ctrl.subtitleLanguage}} /> <meta itemprop=description content={{::$ctrl.description}} /> <meta itemprop=url content={{::$ctrl.url}} /> <meta itemprop=image content={{::$ctrl.image}} /> <div data-ng-repeat="actor in ::$ctrl.actors" itemprop=actor itemscope itemtype=http://schema.org/Person> <meta itemprop=name content={{::actor}} /> </div> <div data-ng-repeat="director in ::$ctrl.directors" itemprop=director itemscope itemtype=http://schema.org/Person> <meta itemprop=name content={{::director}} /> </div> <div itemprop=potentialAction itemscope itemtype=http://schema.org/WatchAction> <div itemprop=target itemscope itemtype=http://schema.org/EntryPoint> <meta itemprop=urlTemplate content={{::$ctrl.url}} /> <meta itemprop=actionPlatform content=http://schema.org/DesktopWebPlatform /> <meta itemprop=inLanguage content={{::$ctrl.country}} /> </div> <div itemprop=expectsAcceptanceOf itemscope itemtype=http://schema.org/Offer> <meta data-ng-if=::$ctrl.isFree itemprop=category content=free /> <meta data-ng-if=::$ctrl.isRental itemprop=category content=rental /> <meta data-ng-if=::$ctrl.isSubscribable itemprop=category content=subscription /> <meta itemprop=availabilityStarts content={{::$ctrl.licenseStart}} /> <meta itemprop=availabilityEnds content={{::$ctrl.licenseEnd}} /> <div itemprop=eligibleRegion itemscope itemtype=http://schema.org/Country> <meta itemprop=name content={{::$ctrl.eligibleRegion}} /> </div> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class="go-image go-details-logo" data-ng-if=::$ctrl.imageUrl data-go-drct-image={{::$ctrl.imageUrl}} data-go-attr-image-spotlight-bg=false></div> '
}
, function(e, t) {
    e.exports = "<div class=go-details-loading> <span class=go-details-loading--top></span> <span class=go-details-loading--related></span> </div> "
}
, function(e, t) {
    e.exports = '<data-go-mdl-details-cmp-loading data-ng-if=$ctrl.isLoading></data-go-mdl-details-cmp-loading> <data-go-mdl-error-cmp-live data-ng-if=$ctrl.isError></data-go-mdl-error-cmp-live> <div class="go-details go-details__live" data-ng-if="!$ctrl.isLoading && !$ctrl.isError"> <data-go-mdl-details-cmp-billboard-live data-product=$ctrl.product></data-go-mdl-details-cmp-billboard-live> <data-go-mdl-details-cmp-live-tabs data-schedule=::$ctrl.product></data-go-mdl-details-cmp-live-tabs> </div> '
}
, function(e, t) {
    e.exports = '<span class=go-details--specs-item> <a class="go-details--spec-value go-details--spec__genre" data-ng-repeat="genre in ::$ctrl.genres" data-ng-href="{{::(genre.name | goFltrSearchPath:$root.caTypes.SEARCH_FIELDS.GENRE)}}" data-ng-bind=::genre.name data-go-mdl-analytics-drct-analytic="::{\n        name: \'detail::genreSearch\',\n        data: {CONTENTID: $ctrl.productId, SEARCHNAME: genre.name}\n      }"> </a> </span> '
}
, function(e, t) {
    e.exports = '<p class=go-details-emitted> <span data-ng-if=::$ctrl.isVisible data-ng-bind="::($ctrl.emissionDate | goFltrEmitted)"> </span> </p> '
}
, function(e, t) {
    e.exports = '<span class="go-details--specs-item go-details-emission-channel" data-ng-bind=$ctrl.emissionChannelTxt></span> '
}
, function(e, t) {
    e.exports = '<span data-ng-bind="($ctrl.duration | goFltrDuration)"></span> '
}
, function(e, t) {
    e.exports = "<data-perfect-scrollbar class=go-details-description data-ng-bind=$ctrl.description> </data-perfect-scrollbar> "
}
, function(e, t) {
    e.exports = '<span class=go-details--specs-item><span data-translate={{::$ctrl.title}}></span>: <a class="go-details--spec-value go-details--spec__cast" data-ng-repeat="person in $ctrl.cast" data-ng-href="{{::(person.name | goFltrSearchPath:$root.caTypes.SEARCH_FIELDS.ACTOR + \',\' + $root.caTypes.SEARCH_FIELDS.DIRECTOR)}}" data-ng-bind=::person.name data-go-mdl-analytics-drct-analytic="::{\n        name: \'detail::castSearch\',\n        data: {CONTENTID: $ctrl.productId, SEARCH_NAME: person.name}\n      }"> </a> </span> '
}
, function(e, t) {
    e.exports = '<div class="go-details-billboard go-details-billboard__subscription"> <div class=go-details--triangle-price data-ng-if=$ctrl.showPriceTriangle> <p class="go-details--triangle-text go-details--triangle-text__price" data-ng-bind=::$ctrl.product.price></p> <p class="go-details--triangle-text go-details--triangle-text__currency" data-ng-bind=::$ctrl.product.recurrence></p> <span class=go-details--triangle-bg></span> </div> <div class=go-details--img-wrapper> <div class=go-details--img data-ng-style="::{\'background-image\': \'url({{$ctrl.product.backgroundImage}})\'}"></div> </div> <div class=go-details--content-landscape data-ng-if=::$ctrl.product.bannerDetail> <div class=go-details--img-landscape data-go-drct-image={{::$ctrl.product.bannerDetail}}></div> </div> <div class=go-details--info> <div class="go-details--header go-details--header__without-margin"> <data-go-mdl-details-cmp-title class=go-details--title data-title=::$ctrl.product.title> </data-go-mdl-details-cmp-title> </div> <div class=go-details--specs> <h2 class=go-details--sub-title data-ng-bind=::$ctrl.product.shortDescription></h2> </div> <div class=go-details--buttons> <data-go-mdl-details-cmp-subscription-purchase data-ng-if=$ctrl.hasSubscriptionPurchaseBtn data-product=$ctrl.product data-callback=::$ctrl.onPurchasedCallback()> </data-go-mdl-details-cmp-subscription-purchase> <data-go-mdl-details-cmp-subscription-cancel data-ng-if=$ctrl.hasSubscriptionCancelBtn data-product=$ctrl.product data-callback=::$ctrl.onCancelledCallback()> </data-go-mdl-details-cmp-subscription-cancel> </div> <data-go-mdl-details-cmp-description class=go-details--description data-description=::$ctrl.product.description> </data-go-mdl-details-cmp-description> <div class=go-details--bottom> <div class=go-details--commercial-indicators> <data-go-mdl-details-cmp-subscription-bars class=go-details--bars data-product=$ctrl.product> </data-go-mdl-details-cmp-subscription-bars> </div> </div> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isBlockTvodBarVisible data-translate=details.notificationBar.blockTvodError></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isCatalogExpirationBarVisible data-ng-bind="::($ctrl.product.licenseEnd | goFltrExpiresIn: \'availableMessage\')"></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isExpirationBarVisible data-ng-bind="::($ctrl.expirationDate | goFltrExpiresIn)"></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isPlaybackErrorBarVisible data-translate=details.notificationBar.playbackError></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isPurchaseErrorBarVisible data-translate=details.notificationBar.purchaseError></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isSubscribeOnlyBarVisible data-translate=details.notificationBar.subscribeOnly></div> <div class="go-details--bar go-details--bar__warning" data-ng-if=$ctrl.isSubscribeErrorBarVisible data-translate=details.notificationBar.subscribeError></div> <div class="go-details--bar go-details--bar__recording" data-ng-if=$ctrl.isRecordingBarVisible data-ng-class="{\'go-details--bar__recording-season\': $ctrl.isRecordingSeason, \'go-details--bar__recording-conflicted\': $ctrl.isRecordingBarConflicted}"> <span class=go-details--bar-recording-icon></span> <span data-ng-if=!$ctrl.isRecordingBarConflicted data-translate=epg.pvr.recording-bar></span> <span data-ng-if=$ctrl.isRecordingBarConflicted data-translate=epg.pvr.conflict-bar></span> </div> '
}
, function(e, t) {
    e.exports = '<span data-translate=audiosAndSubtitles.audio></span>: <span class=go-details--spec-value data-ng-repeat="audio in $ctrl.audios" data-ng-bind="::(audio | goFltrLanguage)"> </span> '
}
, function(e, t) {
    e.exports = "<img data-ng-src={{::$ctrl.ageRating.icon}} class=go-details-age-rating data-ng-attr-title={{::$ctrl.ageRating.name}} data-ng-attr-alt={{::$ctrl.ageRating.name}} /> "
}
, function(e, t) {
    e.exports = '<div class="swiper-container go-swiper--container"> <div class=go-swiper--hover></div> <div class=swiper-wrapper></div> <div class="go-swiper--button go-swiper--button__left"> <i class="go-glyphicon go-glyphicon-chevron-left"></i> </div> <div class="go-swiper--button go-swiper--button__right"> <i class="go-glyphicon go-glyphicon-chevron-right"></i> </div> <go-cmp-spinner class=go-swiper--loading data-ng-if=isloadingContents> </go-cmp-spinner> </div> '
}
, function(e, t) {
    e.exports = '<section> <data-go-mdl-carousel-drct-swiper data-ng-hide="$ctrl.isError || $ctrl.items.length === 0" data-contents=::$ctrl.items data-event-name={{$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error data-ng-if=$ctrl.isError></data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<section> <data-go-mdl-carousel-cmp-header data-ng-if="$ctrl.channel.isExtension || (!$ctrl.isError && $ctrl.showSlider && $ctrl.maxSlides > 0)" data-channel=::$ctrl.channel> </data-go-mdl-carousel-cmp-header> <data-go-mdl-carousel-drct-swiper data-ng-if="!$ctrl.channel.isExtension && !$ctrl.isError && $ctrl.showSlider && $ctrl.maxSlides > 0" data-contents=$ctrl.items data-load-next-slides=$ctrl.loadContents data-max-slides=$ctrl.maxSlides data-event-name={{::$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-drct-swiper data-ng-if=$ctrl.channel.isExtension data-contents=$ctrl.items data-event-name={{::$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error data-ng-if=$ctrl.isError></data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = ' <section> <data-go-mdl-carousel-drct-swiper data-ng-hide="::($ctrl.isError || $ctrl.items.length === 0)" data-contents=$ctrl.items data-event-name={{$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error data-ng-show=::$ctrl.isError></data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<section class=go-promos> <div class=go-promos--wrapper data-ng-hide="$ctrl.isError || $ctrl.promos.length === 0"> <h1 class=go-promos--title> <i class=go-glyphicon-diamond></i> <span data-translate=home.promos.title></span> </h1> <data-go-mdl-carousel-drct-swiper class=go-promos--carousel data-contents=$ctrl.promos> </data-go-mdl-carousel-drct-swiper> </div> <data-go-mdl-carousel-cmp-error data-ng-if=$ctrl.isError></data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<section> <data-go-mdl-carousel-cmp-header data-ng-if="!$ctrl.isError && $ctrl.showSlider" data-channel=::$ctrl.channel> </data-go-mdl-carousel-cmp-header> <data-go-mdl-carousel-drct-swiper data-ng-if="!$ctrl.isError && $ctrl.showSlider" data-contents=$ctrl.items data-event-name={{::$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error data-ng-if=$ctrl.isError></data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<section class=go-live data-ng-if=$ctrl.showArea> <data-go-mdl-carousel-cmp-header class=go-live--header__dark data-ng-if="!$ctrl.isError && $ctrl.schedules.length" data-title=home.liveArea.title data-link=tv-guide/now> </data-go-mdl-carousel-cmp-header> <data-go-mdl-carousel-drct-swiper class="go-live--carousel go-live--carousel__dark" data-ng-if="!$ctrl.isError && $ctrl.schedules.length" data-contents=$ctrl.schedules data-event-name=home::liveSwipe> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error class="go-live--wrapper go-live--error__dark" data-ng-if=$ctrl.isError> </data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<div class=go-carousel-header> <span class="go-carousel-header--ticket go-glyphicon-ticket" data-ng-if=::$ctrl.isTicketVisible> </span> <div class=go-carousel-header--title-wrapper> <h1 class="ellipsis go-carousel-header--title" data-translate={{::$ctrl.title}}></h1> <span class=go-carousel-header--separator data-ng-if=::$ctrl.link> </span> <a class=go-carousel-header--link data-ng-click=::$ctrl.open($event) data-ng-href={{::$ctrl.link}} data-ng-if=::$ctrl.link data-go-mdl-analytics-drct-analytic=::$ctrl.analyticsData> <span data-translate=carousel.link></span> <i class="go-carousel-header--link-caret go-glyphicon-chevron-right"></i> </a> </div> </div> '
}
, function(e, t) {
    e.exports = "<div class=go-carousel-error> <div class=go-carousel-error--title data-translate=carousel.error.title></div> <div class=go-carousel-error--subtitle data-translate=carousel.error.subtitle></div> </div> "
}
, function(e, t) {
    e.exports = '<section class=go-episode> <data-go-mdl-carousel-drct-swiper class=go-episode--carousel data-space-between=0 data-ng-hide="$ctrl.isError || $ctrl.episodes === 0" data-contents=$ctrl.episodes data-event-name={{$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error class=go-episode--wrapper data-ng-show=$ctrl.isError> </data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<section> <data-go-mdl-carousel-cmp-header data-ng-if="!$ctrl.isError && $ctrl.channels.length" data-channel=::$ctrl.channel> </data-go-mdl-carousel-cmp-header> <data-go-mdl-carousel-drct-swiper data-ng-if="!$ctrl.isError && $ctrl.channels.length" data-contents=$ctrl.channels data-event-name={{::$ctrl.eventName}}> </data-go-mdl-carousel-drct-swiper> <data-go-mdl-carousel-cmp-error data-ng-if=::$ctrl.isError></data-go-mdl-carousel-cmp-error> </section> '
}
, function(e, t) {
    e.exports = '<div class="go-mdl-authentication go-mdl-authentication-drct-login-form"> <form class="form-horizontal login" role=form name=loginForm data-ng-submit=login() novalidate> <div data-ng-if=isAuthFormOpened> <div class=login-error data-ng-show=hasLoginError> <div class=icon></div> <span class="message error" data-translate={{errorMessage}}></span> </div> <div class=form-group> <input type=text autofocus=true class=form-control name=email data-translate data-translate-attr-placeholder=auth.userName data-ng-model=credentials.userName required/> </div> <div class=form-group> <input type=password class=form-control name=password data-translate data-translate-attr-placeholder=auth.password data-ng-model=credentials.userPass required/> </div> <div> <div class=checkbox> <label> <input type=checkbox data-ng-model=credentials.rememberMe /> <span data-translate=auth.remember></span> </label> </div> <button class="go-btn go-btn__blue" data-ng-class="{\'go-btn__loading\': isLoading}" type=submit data-translate=auth.signIn></button> </div> <div class=recover-link data-ng-class="{\'has-error\': hasLoginError}"> <a href="" data-translate=auth.recoverPassword.link data-translate-attr-title=auth.recoverPassword.link data-ng-click=handleClickOnRecover()></a> </div> </div> </form> <form class="form-horizontal recover" role=form name=recoverForm data-ng-submit=recoverPassword() novalidate> <div data-ng-if=isRecoverFormOpened> <div class=recover-error data-ng-show=hasRecoverError> <div class=icon></div> <span class="message error" data-translate={{errorMessage}}></span> </div> <p class=message data-ng-show=!isRecoverFinished data-translate=auth.recoverPassword.message></p> <p class="message success" data-ng-show=isRecoverFinished data-translate=auth.recoverPassword.response></p> <div class=form-group> <input type=text autofocus=true class=form-control name=email data-translate data-translate-attr-placeholder=auth.userName data-ng-show=!isRecoverFinished data-ng-model=credentials.userName data-ng-change=checkIsValidEmail() required/> </div> <div data-ng-show=!isRecoverFinished class=recover-buttons> <button type=button class="pull-left btn btn-cancel" data-ng-click=toggleAuthAndRecoverForms() data-translate=common.cancel tabindex=-1></button> <button type=submit class="pull-right btn btn-send" data-translate=common.send data-ng-disabled=hasRecoverError></button> </div> <div data-ng-show=isRecoverFinished> <button type=button class="pull-right btn btn-accept" data-ng-click="toggleForm(); toggleAuthAndRecoverForms()" data-translate=common.accept></button> </div> </div> </form> <div class=register-user data-ng-if=userStatus.isAnonymousLoggedIn> <p> <span data-translate=userRegistration.registrationLink.title></span> <go-cmp-register-link></go-cmp-register-link> </p> </div> </div> '
}
, function(e, t) {
    e.exports = '<section class=go-auth-page> <div class=go-auth-page--content__wide> <header> <h1 class=go-auth-page--title data-translate=auth.rememberPasswordSuccess.title></h1> </header> <div class=go-auth-page--description> <span data-translate=auth.rememberPasswordSuccess.descriptionPre></span> <strong><em data-ng-bind=::$ctrl.email></em></strong> <span data-translate=auth.rememberPasswordSuccess.descriptionPost></span> </div> <div class=go-auth-page--info data-translate=auth.rememberPasswordSuccess.tryAgain data-translate-values="::{rememberLink: $ctrl.rememberPasswordUrl }"></div> <div class=go-auth-page--center-children> <go-cmp-icon data-name=mail-ok data-classes=go-auth-page--img></go-cmp-icon> <button type=button class="go-btn go-btn__xl go-btn__blue go-auth-page--button__large" data-ng-click=::$ctrl.redirectToHome() data-translate=auth.returnToHome></button> </div> </div> </section> '
}
, function(e, t) {
    e.exports = '<section class=go-auth-page> <div class=go-auth-page--content> <h1 class=go-auth-page--title data-translate=auth.rememberPassword.title></h1> <form class=go-form role=form name=$ctrl.formRememberPassword novalidate> <header> <p class=go-auth-page--description data-translate=auth.rememberPassword.description></p> </header> <div class="go-form--group go-form--group__more-space" data-ng-class="{\n            \'has-error\': $ctrl.email && !$ctrl.isValid,\n            \'has-success\': $ctrl.isValid\n          }"> <input data-ng-model=$ctrl.email name=email type=email autofocus=true class=go-form--control data-translate data-ng-change=::$ctrl.checkIsValidEmail() required/> <p class=go-form--block-error data-ng-if=$ctrl.isInvalidEmail> {{ \'auth.rememberPassword.invalidEmail\' | translate | uppercase }} </p> </div> <footer class="go-form--group go-auth-page--footer"> <button type=button class="go-btn go-btn__xl go-btn__grey go-auth-page--button__medium" data-ng-click=::$ctrl.redirectToHome() data-translate=common.cancel></button> <button type=submit class="go-btn go-btn__xl go-btn__blue go-auth-page--button__medium" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-click=::$ctrl.sendRecoverEmail() data-translate=common.send data-ng-disabled="!$ctrl.email || !$ctrl.isValid"></button> </footer> </form> </div> </section> '
}
, function(e, t) {
    e.exports = '<section class=go-auth-page> <div class=go-auth-page--content__wide> <header> <h1 class=go-auth-page--title data-translate=auth.newPasswordSuccess.title></h1> </header> <div class=go-auth-page--description data-translate=auth.newPasswordSuccess.description></div> <div class=go-auth-page--center-children> <go-cmp-icon data-name=ok data-classes="go-auth-page--img go-auth-page--img__small"></go-cmp-icon> <button type=button class="go-btn go-btn__xl go-btn__blue go-auth-page--button__large" data-ng-click=::$ctrl.redirectToHome() data-translate=auth.returnToHome></button> </div> </div> </section> '
}
, function(e, t) {
    e.exports = '<section class=go-auth-page> <div class=go-auth-page--content> <header> <h1 class=go-auth-page--title data-translate=auth.newPasswordError.title></h1> </header> <div class=go-auth-page--description> <span data-translate="{{\'auth.newPasswordError.\' + ($ctrl.errorType || \'unexpectedError\')}}"></span> <strong><em data-ng-bind=::$ctrl.email></em></strong> </div> <div class=go-auth-page--info ng-if=$ctrl.isSendingMailError data-translate=auth.newPasswordError.tryAgain></div> <div class=go-auth-page--center-children> <go-cmp-icon data-name=mail-nok data-classes=go-auth-page--img></go-cmp-icon> <footer class=go-auth-page--footer> <button type=button class="go-btn go-btn__xl go-btn__grey go-auth-page--button__medium" data-ng-click=::$ctrl.redirectToHome() data-translate=common.cancel></button> <button type=button class="go-btn go-btn__xl go-btn__blue go-auth-page--button__medium" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-click=::$ctrl.redirectToRememberPassword() data-translate=common.send></button> </footer> </div> </div> </section> '
}
, function(e, t) {
    e.exports = '<section class=go-auth-page> <div class=go-auth-page--content> <h1 class=go-auth-page--title data-translate=auth.newPassword.title></h1> <form class=go-form role=form name=$ctrl.formNewPassword novalidate> <header> <p class=go-auth-page--description data-translate=auth.newPassword.description></p> </header> <div class=go-form--group data-ng-class="{\n              \'has-error\': ($ctrl.newPass && $ctrl.newPassRepeat && $ctrl.newPass !== $ctrl.newPassRepeat) ||\n                (!$ctrl.formPassword.newPass.$pristine && $ctrl.formPassword.newPass.$invalid) ||\n                ($ctrl.newPass && !$ctrl.isValid)\n            }"> <label class=go-form--block-label data-translate=auth.newPassword.new></label> <input data-ng-model=$ctrl.newPass name=newPass type=password data-ng-change=::$ctrl.checkIsValidPassword() class="go-form--control password" required/> <p class=go-form--block-error data-ng-if=$ctrl.isInvalidPassword> {{ \'auth.newPassword.invalidPassword\' | translate | uppercase }} </p> <div class=go-form--block-explanation> <span data-translate={{$ctrl.validationMessage}}></span> <a href=./ class=go-auth-page--explanation data-translate=auth.newPassword.passwordFormat data-ng-click=$ctrl.openInfoPopup($event)></a> </div> </div> <div class=go-form--group data-ng-class="{\n          \'has-error\': ($ctrl.newPass && $ctrl.newPassRepeat && $ctrl.newPass !== $ctrl.newPassRepeat) ||\n            (!$ctrl.formPassword.passRepeat.$pristine && $ctrl.formPassword.passRepeat.$invalid) ||\n            ($ctrl.newPass && !$ctrl.isValid)\n        }"> <label class=go-form--block-label data-translate=auth.newPassword.repeat></label> <input data-ng-model=$ctrl.newPassRepeat name=passRepeat type=password data-ng-change=::$ctrl.checkPasswordsAreEqual() class="go-form--control password-repeat" required/> <p class=go-form--block-error data-ng-if=$ctrl.isPasswordMissmatch> {{ \'auth.newPassword.passwordsDoNotMatch\' | translate | uppercase }} </p> </div> <footer class="go-form--group go-auth-page--footer"> <button type=button class="go-btn go-btn__xl go-btn__grey go-auth-page--button__medium" data-ng-click=::$ctrl.redirectToHome() data-translate=common.cancel></button> <button type=submit class="go-btn go-btn__xl go-btn__blue go-auth-page--button__medium" data-ng-class="{\'go-btn__loading\': $ctrl.isLoading}" data-ng-click=::$ctrl.changePassword() data-translate=common.send data-ng-disabled="!$ctrl.newPass || !$ctrl.newPassRepeat || $ctrl.newPass !== $ctrl.newPassRepeat || !$ctrl.isValid"></button> </footer> </form> </div> </section> '
}
, function(e, t) {
    e.exports = '<div class=go-login-toolbar data-ng-switch=$ctrl.isLoggedIn()> <p class="go-login-toolbar--text go-login-toolbar--text__logged" data-ng-switch-when=true> <span class=go-login-toolbar--logout-welcome data-ng-bind=::$ctrl.title></span><a class="go-login-toolbar--link go-login-toolbar--link__pipe" href="" data-ng-click=::$ctrl.logout() data-translate=auth.logOut></a> </p> <p class=go-login-toolbar--text data-ng-switch-when=false> <a class="go-login-toolbar--link gtm-login-header" href="" data-ng-click=::$ctrl.login() data-translate=auth.logIn></a> </p> </div> '
}
, , function(e, t) {
    e.exports = "<img class=go-image-element /> <span class=go-image-error data-ng-bind=::errorMsg> </span> "
}
, function(e, t, n) {
    var a = n(0);
    function r(e) {
        return a.createElement("svg", e, a.createElement("path", {
            d: "M294.111 256.001L504.109 46.003c10.523-10.524 10.523-27.586 0-38.109-10.524-10.524-27.587-10.524-38.11 0L256 217.892 46.002 7.894C35.478-2.63 18.416-2.63 7.893 7.894s-10.524 27.586 0 38.109l209.998 209.998L7.893 465.999c-10.524 10.524-10.524 27.586 0 38.109 10.524 10.524 27.586 10.523 38.109 0L256 294.11l209.997 209.998c10.524 10.524 27.587 10.523 38.11 0 10.523-10.524 10.523-27.586 0-38.109L294.111 256.001z"
        }))
    }
    r.defaultProps = {
        viewBox: "0 0 512.001 512.001"
    },
    e.exports = r,
    r.default = r
}
, function(e, t) {
    e.exports = '<div class=go-cmp-subscription-box> <div class=go-cmp-subscription-box--image-wrapper data-ng-class="{\'go-triangle__subs\': $ctrl.isSubscriptionPurchasable}"> <a class="go-cmp-subscription-box--image img_240_135" data-go-drct-image={{::$ctrl.subscription.banner}} data-go-attr-image-link={{::$ctrl.link}} data-go-attr-image-alt-title={{::$ctrl.subscription.title}}> </a> </div> <div class=go-cmp-subscription-box--information> <a class=go-cmp-subscription-box--title data-go-drct-product-link data-item=::$ctrl.subscription data-ng-bind=::$ctrl.subscription.title> </a> <p class=go-cmp-subscription-box--description data-ng-bind=::$ctrl.subscription.shortDescription></p> <p class=go-cmp-subscription-box--price data-ng-if=::$ctrl.isSubscriptionPurchasable> <span class=go-cmp-subscription-box--price-value data-ng-if=::$ctrl.price data-ng-bind=::$ctrl.price></span><span class=go-cmp-subscription-box--price-recurrence data-ng-if=::$ctrl.recurrence data-ng-bind=::$ctrl.recurrence></span> </p> <a class="btn btn-secondary go-cmp-subscription-box--button" data-ng-if=::$ctrl.isButtonShown() data-ng-href={{::$ctrl.link}} data-ng-class="::({\n            \'go-btn-subscription__active\': $ctrl.isSubscriptionPurchasable,\n            \'go-btn-subscription__inactive\': $ctrl.isSubscriptionPurchased\n        })"> <span data-translate={{::$ctrl.btnText}}></span> </a> <p class=go-cmp-subscription-box--text data-ng-if=::$ctrl.subscription.isCancelling() data-translate=subscriptionBox.cancelling></p> </div> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-user-info> <p data-ng-if=$ctrl.userData.firstName> <span class=go-user-info--label data-translate=common.userData.name></span> <span class=go-user-info--value data-ng-bind="::($ctrl.userData.firstName + \' \' + $ctrl.userData.lastName)"></span> </p> <p data-ng-if=$ctrl.userData.email> <span class=go-user-info--label data-translate=common.userData.email></span> <span class=go-user-info--value data-ng-bind=::$ctrl.userData.email></span> </p> <p data-ng-if=$ctrl.userData.birthDate> <span class=go-user-info--label data-translate=common.userData.birthDate></span> <span class=go-user-info--value data-ng-bind="::(($ctrl.userData.birthDate * 1000) | date)"></span> </p> <p data-ng-if="$ctrl.userData.gender > 0"> <span class=go-user-info--label data-translate=common.userData.gender></span> <span class=go-user-info--value data-translate> {{\'common.userData.genderValue.\' + $ctrl.userData.genderName}} </span> </p> <p data-ng-repeat="field in ::$ctrl.userData.customFields | limitTo: 2" data-ng-if="field.key && field.value"> <span class=go-user-info--label data-ng-bind=::field.key></span> <span class=go-user-info--value data-ng-bind=::field.value></span> </p> <p data-ng-if=$ctrl.creditCard.pan> <span class=go-user-info--label data-translate=common.userData.creditCard></span> <span class=go-user-info--value> <span data-ng-bind=::$ctrl.creditCard.pan></span> <a data-ng-click=$ctrl.onCreditCardChange() class=go-user-info--value-anchor data-ng-if=$ctrl.editable data-translate=common.userData.change> </a> </span> </p> </div> '
}
, function(e, t) {
    e.exports = '<div class=go-toggle-switch> <p class="go-toggle-switch--text go-toggle-switch--text__left" data-ng-class="{\'go-toggle-switch--text__selected\': !$ctrl.isOn}" data-translate={{::$ctrl.offTextTranslate}}></p> <input type=checkbox class=go-toggle-switch--checkbox id=toggle data-ng-model=$ctrl.isOn data-ng-change=::$ctrl.onToggleDelayed() /> <label for=toggle class=go-toggle-switch--label></label> <p class=go-toggle-switch--text data-ng-class="{\'go-toggle-switch--text__selected\': $ctrl.isOn}" data-translate={{::$ctrl.onTextTranslate}}></p> </div> '
}
, function(e, t) {
    e.exports = "<div class=go-spinner data-ng-class=::$ctrl.type><div class=go-spinner--wrapper></div></div> "
}
, , function(e, t) {
    e.exports = '<button class="go-button {{\'go-button--\' + $ctrl.type}}"> <div data-ng-class="{\'go-button--text-wrapper__has-hover-text\': $ctrl.hoverText}" class=go-button--text-wrapper> <div class="go-button--text go-button--text__hover" data-ng-if=$ctrl.hoverText> <span class="go-button--glyphicon glyphicon"></span> <span class=go-button--value data-translate={{$ctrl.hoverText}}></span> </div> <div class=go-button--text> <span class="go-button--glyphicon glyphicon {{\'glyphicon-\' + $ctrl.type}}"></span> <span class=go-button--value data-translate={{$ctrl.text}}></span> <i data-ng-if="::($ctrl.type === \'buy\')" class="go-button--arrow glyphicon glyphicon-chevron-down"></i> </div> </div> </button> '
}
, function(e, t) {
    e.exports = '<a class=go-browser title={{::browser.name}} target=_blank data-ng-repeat="browser in $ctrl.browserList" data-ng-href={{::browser.url}} data-ng-class="[browser.id, $ctrl.iconClass]"> <p class=go-browser--text data-ng-bind=::browser.name></p> <p class=go-browser--text__small data-translate=browser.version data-translate-values="{version: browser.version}"></p> </a> '
}
, function(e, t) {
    e.exports = '<div class=go-android-banner data-ng-if=$ctrl.isShown> <button data-ng-click=$ctrl.onClickClose() class=go-android-banner--close> <go-cmp-icon data-classes=go-remove--icon data-name=remove-icon></go-cmp-icon> </button> <span class="app-icon go-android-banner--icon"></span> <div class=go-android-banner--info> <p class=go-android-banner--title data-translate=smartBanners.title></p> <p class=go-android-banner--subtitle data-translate=smartBanners.subtitle></p> <p class=go-android-banner--subtitle data-translate=smartBanners.android.price></p> </div> <a data-ng-href={{::$ctrl.androidLink}} class=go-android-banner--view-button data-ng-click=$ctrl.onClickClose() data-translate-attr-title=smartBanners.view data-translate=smartBanners.view> </a> </div> '
}
, , , , , function(e, t, n) {
    "use strict";
    (function(e) {
        n.d(t, "a", function() {
            return u
        });
        var a = n(5)
          , r = n.n(a)
          , o = n(34)
          , i = n(1)
          , c = n(17)
          , s = n.n(c)
          , l = n(4);
        function u() {
            "ngInject";
            return Object.assign({
                redirect: function(t, n, a) {
                    var i = ""
                      , c = l.getProperty(a, "method", "GET")
                      , s = l.getProperty(a, "target", "_self");
                    if ("GET" === c) {
                        var u = n ? [t, e.param(n)].join("?") : t;
                        o.$window.open(u, s)
                    } else {
                        var d = o.$document.find("body");
                        e.each(n, function(e, t) {
                            i += '<input type="hidden" name="'.concat(e, '" value="').concat(t, '">')
                        }),
                        r.a.element("<form target=\"'".concat(s, "'\" action=\"'").concat(t, '\'" method="POST">\'').concat(i, "'</form>")).appendTo(d).submit()
                    }
                },
                redirectToHome: function() {
                    o.$location.path("/"),
                    o.$location.search({})
                },
                getSearchParam: function(e) {
                    return o.$location.search()[e]
                },
                getI18nMessages: function(e, t) {
                    var n = {};
                    return s()(t, function(t, a) {
                        n[a] = Object(o.$filter)("translate")(e ? [e, t].join(".") : t)
                    }),
                    n
                },
                changeLocation: function(e, t) {
                    var n = o.$injector.get("$route")
                      , a = n.current
                      , r = o.$rootScope.$on("$locationChangeSuccess", function() {
                        r(),
                        o.$rootScope.$emit("analytics::routeChangeSuccess"),
                        n.current = a
                    });
                    o.$location.path(e).replace(),
                    a.params = t || a.params,
                    a.pathParams = t || a.pathParams
                },
                isNotAiring: function(e) {
                    var t = o.$injector.get("goSvcTime")
                      , n = l.toTimestamp(e.startTime)
                      , a = l.toTimestamp(e.endTime)
                      , r = t.getTime(!0);
                    return n > r || a < r
                },
                throttle: function(e) {
                    var t, n = this, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return function() {
                        var r, i = o.$injector.get("goSvcTime").getTime(!0), c = (t = t || i) - i;
                        if (c <= 0 || c > a) {
                            for (var s = arguments.length, l = new Array(s), u = 0; u < s; u++)
                                l[u] = arguments[u];
                            r = e.apply(n, l),
                            t = i + a
                        }
                        return r
                    }
                },
                getCaDeviceTypes: function() {
                    var e = o.$injector.get("goSvcUniapiParameter").getFutDeviceTypeSync();
                    return "null|".concat(i.caTypes.DEVICE_TYPES.PC).concat(e ? "|".concat(e) : "")
                },
                getCaDeviceTypesWithoutNull: function() {
                    var e = o.$injector.get("goSvcUniapiParameter").getFutDeviceTypeSync();
                    return "".concat(i.caTypes.DEVICE_TYPES.PC).concat(e ? "|".concat(e) : "")
                }
            }, l)
        }
    }
    ).call(this, n(47))
}
, , , function(e, t, n) {
    "use strict";
    (function(e) {
        n.d(t, "a", function() {
            return o
        });
        var a = n(27)
          , r = n.n(a);
        function o() {
            var t, n;
            this.setEnvironment = function(e) {
                t = e
            }
            ,
            this.$get = ["$rootScope", "$location", "goSvcUniapiSettings", "goSvcLogger", "goSvcUserStatus", "goCnstSetup", function(a, o, i, c, s, l) {
                var u = c.getLogger("SERVICE", "goSvcGoogleAnalytics")
                  , d = l.googleAnalytics
                  , g = t && d[t] || d.defaultEnvironment;
                function p(e) {
                    try {
                        ga("send", "pageview", {
                            page: e || o.url(),
                            title: ""
                        })
                    } catch (e) {
                        u.debug("Error sending page view to Google Analytics.")
                    }
                }
                return s.$watch("isLoggedIn", function(e, t) {
                    try {
                        e && !t && s.profile ? ga("set", "userId", r.a.MD5(s.profile.id.toString()).toString()) : !e && t && ga("set", "userId")
                    } catch (e) {
                        u.error("Error setting userId for analytics: ", e.message)
                    }
                }),
                {
                    destroy: function() {
                        n && n()
                    },
                    setUp: function() {
                        var t, r, o, c, s, l, d, m = g.id;
                        if (g.useThisInsteadInstanceValue && m) {
                            r = window,
                            o = document,
                            c = "script",
                            s = "ga",
                            r.GoogleAnalyticsObject = s,
                            r.ga = r.ga || function() {
                                (r.ga.q = r.ga.q || []).push(arguments)
                            }
                            ,
                            r.ga.l = 1 * new Date,
                            l = o.createElement(c),
                            d = o.getElementsByTagName(c)[0],
                            l.async = 1,
                            l.src = "//www.google-analytics.com/analytics.js",
                            d.parentNode.insertBefore(l, d);
                            try {
                                ga("create", m, "auto"),
                                ga("require", "linkid", "linkid.js"),
                                p()
                            } catch (e) {
                                u.debug("Error loading Google Analytics.")
                            }
                        } else
                            try {
                                (t = i.get("FooterScripts")) && e("head").append(t)
                            } catch (e) {
                                u.error("Error loading footer scripts.")
                            }
                        n = a.$on("$locationChangeSuccess", function() {
                            return p()
                        })
                    },
                    sendPageView: p
                }
            }
            ]
        }
    }
    ).call(this, n(47))
}
, function(e, t, n) {
    "use strict";
    (function(e) {
        function a(t, n) {
            "ngInject";
            function a(e, t) {
                if (!e.hasOwnProperty(t))
                    throw new Error("Field ".concat(t, " does not exist"));
                return e[t]
            }
            return function(r, o, i) {
                var c = r && t.get(r);
                return function(t) {
                    var r, s = function(e) {
                        return a(e, "data"),
                        a(e.data, "Content"),
                        n.getDeepProperty(e, function(e) {
                            return e.data.Content.hasOwnProperty("List") && e.data.Content.List.hasOwnProperty("List") ? "data.Content.List.List" : "data.Content.List"
                        }(e)) || n.getDeepProperty(e, "data.Content", {})
                    }(t), l = s;
                    return c && (l = e.isArray(s) ? s.map(function(e) {
                        return c(e, o)
                    }) : c(s, o)),
                    i && (r = function(e) {
                        return n.getDeepProperty(e, "data.Content.Count", 0)
                    }(t)),
                    i ? {
                        data: l,
                        count: r
                    } : l
                }
            }
        }
        n.d(t, "a", function() {
            return a
        }),
        a.$inject = ["$injector", "goSvcUtils"]
    }
    ).call(this, n(47))
}
, , , , function(e, t, n) {
    "use strict";
    n.r(t);
    var a = n(5)
      , r = n.n(a)
      , o = n(4)
      , i = n(254)
      , c = n.n(i);
    n(400);
    l.$inject = ["$q", "goMdlCatchupSvcManager", "goSvcUserStatus", "uasMovieService", "goSvcCast", "goSvcLogger", "goMdlPopUpsSvcManager", "goSvcUtils", "goSvcUniapiPin", "goMdlAnalyticsSvcManager", "goSvcDetails", "goCnstConfig", "goCnstEnumerated", "goMdlAnalyticsSvcUniapi", "goMdlAnalyticsSvcContentWise", "goSvcAmazon"];
    var s = {
        bindings: {
            product: "<"
        },
        template: c.a,
        controller: l
    };
    function l(e, t, n, a, r, i, c, s, l, u, d, g, p, m, f, h) {
        "ngInject";
        var v, y, S = i.getLogger("CONTROLLER", "goMdlCatchupCtrlMain"), b = g.go.goMdlCatchup.toBeFixed, E = p.goType, T = this;
        function C() {
            return a.GetExtCatchUpURL({
                movieId: T.product.id,
                urlType: 0
            }).then(r("goModelExternalCatchupUrl"))
        }
        function P(e) {
            var t = e.url;
            return s.getProperty(b, "providersInUrl", []).some(function(e) {
                return -1 !== t.toLowerCase().indexOf(e.toLowerCase())
            }) && (t = t.replace(b.stringToFix, b.stringFixed)),
            e
        }
        function I() {
            return T.product.goType === E.Episode ? T.product.producerName : T.product.producer.title
        }
        function A() {
            return t.getInstance(I()).then(function(t) {
                return t.login().then(C).then(P).then(function(n) {
                    return n.url ? m.sendBatch().catch(function() {
                        return e.resolve()
                    }).then(function() {
                        return function(e, t) {
                            var n = t.url;
                            return e.redirect(n, T.product).catch(function() {
                                return s.redirect(n)
                            })
                        }(t, n)
                    }) : e.reject()
                })
            })
        }
        function M(e) {
            S.error("Error redirecting to catchup content", e || ""),
            v && v.close(),
            c.openError({
                title: "popup.catchup.error.title",
                message: "popup.catchup.error.description",
                accept: "common.accept"
            })
        }
        function N() {
            S.debug("Redirected to catchup content.")
        }
        T.loadIsVisible = function() {
            d.isPlayExternalCatchupButtonVisible(T.product).then(function(e) {
                T.isVisible = e
            })
        }
        ,
        T.play = function() {
            var t, a, r;
            return T.isLoading = !0,
            t = T.product.seriesId || T.product.id,
            a = T.product.contentWiseParams || f.getParams(t),
            r = a.id === t ? a : f.getDefaultParams(),
            u.trackEvent("detail::externalCatchupPlay", {
                CONTENTID: T.product.id,
                CONTENTTYPE: T.product._productType,
                TRACKID: r.trackId,
                UXREFERENCE: r.uxReference
            }),
            I().toLowerCase() === p.amazon.producer.toLowerCase() ? h.amazonCatchupFlow(T.product).finally(function() {
                T.isLoading = !1
            }) : (n.isAnonymousLoggedIn ? e.when() : l.isParentalPinNeeded(T.product).then(function(e) {
                return e && c.openParentalPin().result
            })).then(function() {
                return v = c.openRedirect({
                    message: "popup.catchup.loading.description"
                }),
                A().then(N).catch(M)
            }).catch(o.noop).finally(function() {
                T.isLoading = !1
            })
        }
        ,
        T.$onInit = function() {
            T.isLoading = !1
        }
        ,
        T.$onChanges = function(e) {
            e.product.isFirstChange() ? y = n.$watchGroup(["isAuth", "isLoggedIn"], T.loadIsVisible) : T.loadIsVisible()
        }
        ,
        T.$onDestroy = function() {
            y()
        }
    }
    var u = n(17)
      , d = n.n(u);
    function g(e, t, n, a, r, o) {
        "ngInject";
        var i = {}
          , c = o.parameterGroupTitle
          , s = o.defaultProviderName;
        function l(n) {
            return i[n] ? t.when(e.get(i[n])) : t.reject(new Error("No instance registered for that provider."))
        }
        return {
            register: function(e, t) {
                i[e] = t
            },
            getInstance: function(e) {
                return r.isLoggedIn ? function(e) {
                    var r = e ? e.toUpperCase() : "";
                    return a.getCatchupProviders().then(function(e) {
                        var a;
                        return d()(e, function(e, t) {
                            var o = "".concat(c, ".").concat(r);
                            n.getDeepProperty(e, o) && (a = t)
                        }),
                        a || t.reject(new Error("No provider found for that producer."))
                    })
                }(e).then(function(e) {
                    return l(e)
                }).catch(function() {
                    return l(s)
                }) : l(s)
            }
        }
    }
    function p(e, t, n, a, r, o, i, c) {
        var s = c.go.goMdlCatchup.providers.toolbox
          , l = i.goType;
        function u(t) {
            return t ? e.when(s.oauthUrl.login.replace("__SHORTNAME__", t)) : e.reject("Short name is incorrect.")
        }
        return {
            login: function() {
                return e.when(n.isAuth && n.isLoggedIn)
            },
            redirect: function(e, n) {
                var i;
                return o.GetToolboxToken().then(t("goModelExternalCatchupToken")).then(function(e) {
                    return i = e.value,
                    function(e) {
                        var t = (e.goType === l.Episode ? e.producerName : e.producer.title).toUpperCase();
                        return r.getCatchupProviders().then(function(e) {
                            return a.getDeepProperty(e, [s.nameInPlatform, "EXTERNALCATCHUP", t].join("."))
                        })
                    }(n)
                }).then(u).then(function(t) {
                    a.redirect(t, {
                        idp: s.idp,
                        return: e,
                        token: i
                    }, {
                        method: "GET"
                    })
                })
            }
        }
    }
    function m(e, t) {
        return {
            login: function() {
                return e.when(!1)
            },
            redirect: function(n) {
                var a = e.defer();
                return n ? (t.redirect(n, {}, {
                    method: "GET"
                }),
                a.resolve()) : a.reject(new Error("URL is not correct")),
                a.promise
            }
        }
    }
    g.$inject = ["$injector", "$q", "goSvcUtils", "goSvcUniapiParameter", "goSvcUserStatus", "goMdlCatchupCnstMain"],
    p.$inject = ["$q", "goSvcCast", "goSvcUserStatus", "goSvcUtils", "goSvcUniapiParameter", "uasAuthenticationService", "goCnstEnumerated", "goCnstConfig"],
    m.$inject = ["$q", "goSvcUtils"],
    n.d(t, "goMdlCatchup", function() {
        return f
    });
    var f = r.a.module("goMdlCatchup", []).component("goMdlCatchupCmpMain", s).constant("goMdlCatchupCnstMain", {
        parameterGroupTitle: "EXTERNALCATCHUP",
        defaultProviderName: "default"
    }).factory("goMdlCatchupSvcManager", g).factory("goMdlCatchupSvcToolbox", p).factory("goMdlCatchupSvcDefault", m).run(["goMdlCatchupSvcManager", "goCnstConfig", "goMdlCatchupCnstMain", function(e, t, n) {
        var a = t.go.goMdlCatchup.providers.toolbox;
        e.register(a.nameInPlatform, "goMdlCatchupSvcToolbox"),
        e.register(n.defaultProviderName, "goMdlCatchupSvcDefault")
    }
    ]).name
}
, function(e, t, n) {
    "use strict";
    n.r(t);
    var a = n(5)
      , r = n.n(a)
      , o = n(102)
      , i = n.n(o)
      , c = n(101)
      , s = n.n(c);
    function l(e) {
        "ngInject";
        e.resolveWhen("/tv-guide/now", {
            template: "<go-mdl-epg-cmp-now></go-mdl-epg-cmp-now>",
            page: {
                title: "seoMetadata.title.epg.now",
                description: "seoMetadata.description.epg.now",
                eventName: "epg::now",
                canonical: "/tv-guide/now"
            }
        }).resolveWhen("/tv-guide/epg", {
            template: i.a,
            controller: "goMdlEpgCtrlEpg",
            page: {
                title: "seoMetadata.title.epg.upcoming",
                description: "seoMetadata.description.epg.upcoming",
                eventName: "epg::guide",
                canonical: "/tv-guide/epg"
            }
        }).resolveWhen("".concat("/tv-guide/filter", "/:genre"), {
            template: s.a,
            controller: "goMdlEpgCtrlFilter",
            page: {
                title: "seoMetadata.title.epg.filter",
                description: "seoMetadata.title.epg.upcoming",
                eventName: "epg::filter",
                canonical: "/tv-guide/filter"
            }
        }).resolveWhen("/tv-guide/filter", {
            redirectTo: "/tv-guide/now"
        }).resolveWhen("/tv-guide", {
            redirectTo: "/tv-guide/now"
        })
    }
    l.$inject = ["$routeProvider"];
    var u = n(253)
      , d = n.n(u)
      , g = n(1);
    n(398);
    m.$inject = ["$filter", "goSvcLibrary"];
    var p = {
        bindings: {
            channel: "<"
        },
        template: d.a,
        controller: m
    };
    function m(e, t) {
        "ngInject";
        var n = this;
        n.$onInit = function() {
            if (n.channel.l7dProviderId) {
                var a = g.caUtils.getId(n.channel.l7dProviderId);
                t.getChannel(a).then(function(t) {
                    n.channelLink = e("goFltrDetailsLink")(t)
                })
            }
            n.image = n.channel.iconBig || n.channel.logo
        }
    }
    var f = n(252)
      , h = n.n(f)
      , v = (n(396),
    {
        template: h.a
    })
      , y = n(2)
      , S = n.n(y)
      , b = n(251)
      , E = n.n(b);
    n(394);
    C.$inject = ["$q", "$scope", "$location", "$window", "goSvcUserStatus", "goSvcLogger", "goSvcSlug", "goSvcLiveChannels", "goSvcSchedules", "goMdlAnalyticsSvcPerformance", "goSvcPlayback", "goSvcLiveDetail", "goMdlEpgSvcRedirect", "goCnstConfig", "uaConstants", "goSvcTime"];
    var T = {
        template: E.a,
        controller: C
    };
    function C(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f) {
        "ngInject";
        var h, v, y, b, E = this, T = p.go.goMdlEpg.routes.filter, C = m.PlaybackType, P = o.getLogger("COMPONENT", "goMdlEpgComponentNow");
        function I() {
            h = null,
            s.invalidateOngoingRequest()
        }
        function A(e) {
            P.error(e),
            E.isErrorMessage = !0
        }
        function M() {
            t.$evalAsync(function() {
                E.isLoading = !1
            })
        }
        E.openDetails = function(e) {
            e && d.openPopup(e.pid)
        }
        ,
        E.playChannel = function(e) {
            var t, n;
            y.some(function(a) {
                return e === a.id && a.schedules.length && (t = a,
                n = a.schedules[0]),
                t
            }),
            t && n && (l.start(),
            l.trackEpgPlay(),
            u.playLiveChannel(t, n))
        }
        ,
        E.applyFilter = function(e) {
            var a = n.path().split("/").reverse()[0]
              , r = "/".concat(T, "/")
              , o = e.genre;
            n.path(r + i.encodeId(o.id, o.title)).search("day", t.selectedIndex).search("from", a)
        }
        ,
        E.loadSchedules = function() {
            c.getAllChannels().then(function(t) {
                return e.all([s.getSchedules(t, C.PlaybackRight, h), s.getSchedules(t, C.NonPlayback, h)])
            }).then(function(e) {
                var t = S()(e, 2)
                  , n = t[0]
                  , a = t[1];
                y = n[C.PlaybackRight],
                b = a[C.NonPlayback],
                y.sort(function(e, t) {
                    return e.channelNumber - t.channelNumber
                }),
                b.sort(function(e, t) {
                    return e.channelNumber - t.channelNumber
                }),
                E.playbackChannels = y,
                E.nonPlaybackChannels = b
            }).catch(A).finally(M)
        }
        ;
        var N = t.$on("$locationChangeStart", I);
        E.$onInit = function() {
            v = r.$watchCollection("[isAuth, isLoggedIn]", function() {
                r.isAuth && g.checkKeepRoute().then(function() {
                    h = f.getTime(!0),
                    a.scrollTo(0, 0),
                    E.isLoading = !0,
                    E.isErrorMessage = !1,
                    E.playbackChannels = [],
                    E.nonPlaybackChannels = [],
                    I(),
                    E.loadSchedules()
                })
            })
        }
        ,
        E.$onDestroy = function() {
            N(),
            v()
        }
    }
    var P = n(250)
      , I = n.n(P)
      , A = (n(392),
    n(4));
    N.$inject = ["$scope", "$controller", "goMdlPlacardsSvcLink"];
    var M = {
        template: I.a,
        bindings: {
            channel: "=",
            isCompleteProgram: "=",
            detailsCallback: "&",
            isNonPlayback: "<?"
        },
        controller: N
    };
    function N(e, t, n) {
        "ngInject";
        var a = this;
        a.open = function(e) {
            n.open(e, this.content)
        }
        ,
        a.onMouseEnter = function() {
            a.isPlacardHovered = !0
        }
        ,
        a.$onInit = function() {
            a.channel ? (a.program = a.channel.schedules.length ? a.isCompleteProgram ? a.channel.schedules[0] : a.channel.schedules[1] : null,
            a.programImage = a.program ? a.program.isAirProgram ? a.program.videoFrame : a.program.videoFrameUpcoming : null,
            a.isProgramLoaded = !0,
            a.isNonPlayback = !!A.isDefined(a.isNonPlayback) && a.isNonPlayback) : (a.program = null,
            a.programImage = null,
            a.isNonPlayback = !1)
        }
    }
    var w = n(249)
      , L = n.n(w)
      , $ = (n(390),
    {
        template: L.a,
        controller: R,
        bindings: {
            content: "<"
        }
    });
    function R(e) {
        var t = this;
        t.$onInit = function() {
            t.progress = e("goMdlEpgFltrProgress")(t.content)
        }
    }
    R.$inject = ["$filter"];
    var D = n(248)
      , _ = n.n(D)
      , O = (n(388),
    {
        template: _.a,
        bindings: {
            content: "<"
        },
        controller: U
    });
    function U(e) {
        var t = this;
        t.$onInit = function() {
            t.timePeriod = e("goFltrTimeToPeriod")(t.content),
            t.dateRange = e("goFltrDateRange")(t.content)
        }
    }
    U.$inject = ["$filter"];
    var k = n(247)
      , x = n.n(k)
      , j = (n(386),
    {
        template: x.a,
        controller: B,
        bindings: {
            imageUrl: "<",
            alt: "<?",
            isBig: "<"
        }
    });
    function B(e) {
        var t = this;
        t.$onInit = function() {
            t.srcsetName = t.isBig ? e.imageSets.placardLandscapeBig : e.imageSets.placardLandscape
        }
    }
    B.$inject = ["goCnstEnumerated"];
    var F = n(246)
      , V = n.n(F)
      , H = n(11)
      , G = n.n(H);
    n(384);
    q.$inject = ["$filter", "$q", "$location", "goMdlPlacardsSvcLive", "goSvcUtils"];
    var W = {
        template: V.a,
        bindings: {
            content: "<",
            logo: "<"
        },
        controller: q
    };
    function q(e, t, n, a, r) {
        "ngInject";
        var o = this
          , i = e("translate");
        o.setTitle = function(e) {
            o.title = e || o.content.name
        }
        ,
        o.onRestartMouseEnter = function() {
            o.setTitle("placards.playFromBeginning")
        }
        ,
        o.onPlayMouseEnter = function() {
            o.content.isAirProgram ? o.setTitle("placards.playLive") : o.setTitle("placards.playChannel")
        }
        ,
        o.onMouseEnter = function() {
            o.isPriceVisible = !0,
            G()(o.isPlayAvailable) ? t.all([a.isPlayAvailable(o.content), a.isRestartAvailable(o.content)]).then(function(e) {
                var t = S()(e, 2)
                  , n = t[0]
                  , a = t[1];
                o.isPlayAvailable = n,
                o.isRestartAvailable = a
            }).finally(function() {
                o.isButtonsVisible = !0
            }) : o.isButtonsVisible = !0
        }
        ,
        o.onSubscribeMouseEnter = function() {
            o.setTitle(i("placards.subscribeContent"))
        }
        ,
        o.onButtonMouseLeave = function() {
            o.setTitle()
        }
        ,
        o.onInfoMouseEnter = function() {
            o.setTitle("placards.goToDetailsVod")
        }
        ,
        o.onLogoMouseEnter = function() {
            o.setTitle("placards.goToChannel")
        }
        ,
        o.onMouseLeave = function() {
            o.isPriceVisible = !1
        }
        ,
        o.onLogo = function(e, t) {
            e.preventDefault(),
            e.stopPropagation(),
            n.path(t)
        }
        ,
        o.onPurchaseMouseEnter = function() {
            o.setTitle(i("placards.rentContent"))
        }
        ,
        o.onPlay = function(e) {
            e.stopPropagation(),
            e.preventDefault(),
            a.play(o.content)
        }
        ,
        o.onRestart = function(e) {
            e.stopPropagation(),
            e.preventDefault(),
            a.playFromBeginning(o.content)
        }
        ,
        o.$onInit = function() {
            o.setTitle(),
            r.getDeepProperty(o, "logo.l7dProviderId") && a.getChannelLink(o.logo.l7dProviderId).then(function(e) {
                o.channelLink = e
            }),
            o.isInfoAvailable = !0,
            o.isPlayTrailerAvailable = !1,
            o.isPurchaseAvailable = !1,
            o.isLinkAvailable = !1,
            o.isSubscribeAvailable = o.content.canUpgrade
        }
    }
    var Y = n(18)
      , z = n.n(Y);
    function Q(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f) {
        "ngInject";
        var h, v, y = m.go.goMdlEpg, b = m.go.goMdlEpg.routes, E = m.go.goMdlEpg.filters.total, T = m.go.goMdlEpg.rowsRenderedFirst, C = {
            locationEpgFilter: b.filter,
            tvguide: y.tvGuide,
            epg: y.epg,
            filter: y.filter
        }, P = {
            old: null,
            current: null,
            lastRoute: n.current,
            get: function() {
                var e = t.path()
                  , n = e.substr(e.lastIndexOf("/") + 1);
                return e.indexOf(C.locationEpgFilter) > 0 && (n = C.filter),
                n
            }
        }, I = [], M = [], N = !1, w = {};
        function L() {
            var t = a.defer()
              , n = function() {
                e.isLoadingSchedules = !1,
                e.showLoading = !1,
                e.data.length && R(),
                n = A.noop
            };
            function r(n) {
                A.isDefined(n) && (e.isLoadingSchedules = !1,
                e.showLoading = !1),
                e.isLoadingInProgress = !1,
                t.reject(n)
            }
            function i(e) {
                return !!e
            }
            function c(t) {
                n(),
                t.forEach(function(t) {
                    e.data.some(function(e, n) {
                        if (t.channel.liveChannelId === e.channel.liveChannelId)
                            return e.programs = z()(t.programs.filter(i)),
                            A.isDefined(M[n]) && M[n] && (h[n].programs = z()(e.programs.filter(l.isProgramInsideInterval))),
                            !0
                    })
                })
            }
            return e.isLoadingInProgress = !0,
            a.all([o.getChannels(f.PlaybackType.PlaybackRight), o.getChannels(f.PlaybackType.NonPlayback)]).then(function(n) {
                var a, i = S()(n, 2), u = i[0], d = i[1], g = u.concat(d);
                return e.data = z()(o.getMatrix()),
                e.isEmpty = !(u.length || d.length),
                e.showError = e.isEmpty,
                a = e.data,
                h = z()(a.map(function(e) {
                    return A.isDefined(e.programs) ? e.programs.length = 0 : e.programs = [],
                    e
                })),
                e.showLoading = !1,
                R(),
                (v = o.get24hSchedules(g, s.toServerTime(l.getMainStartTime()), N)).promise.then(function(n) {
                    e.isLoadingInProgress = !1,
                    e.isLoadingSchedules = !1,
                    N = !1,
                    $(),
                    t.resolve(n)
                }, r, c),
                v.promise
            }, function(n) {
                e.showError = !0,
                e.isLoadingSchedules = !1,
                e.isLoadingInProgress = !1,
                t.reject(n)
            }),
            t.promise
        }
        function $() {
            function t(e) {
                return !(!e || !e.programs) && e.programs.filter(l.isProgramInsideInterval).length > 0
            }
            for (var n = 0; n < e.dataPlayback.length; n++)
                e.dataPlaybackNoInfo[n] = !e.dataPlayback[n].programs || !t(e.data[n]);
            for (var a = 0; a < e.dataNonPlayback.length; a++) {
                var r = e.data[e.dataPlayback.length + a];
                e.dataNonPlaybackNoInfo[a] = !e.dataNonPlayback[a].programs || !t(r)
            }
        }
        function R() {
            e.dataPlayback.length = 0,
            e.dataNonPlayback.length = 0,
            h.forEach(function(t) {
                t.channel.isPlayback ? e.dataPlayback.push(t) : e.dataNonPlayback.push(t)
            })
        }
        function D() {
            A.isDefined(v) && v.reject()
        }
        function _() {
            e.date = c.getTime(),
            L()
        }
        e.data = [],
        e.dataPlayback = [],
        e.dataNonPlayback = [],
        e.dataPlaybackNoInfo = [],
        e.dataNonPlaybackNoInfo = [],
        e.date = c.getTime(),
        e.dataPrograms = [],
        e.isNonOttFold = !0,
        e.timelineItems = [],
        e.goSvcUserStatus = i,
        e.initialHorizontalDisplacement = 0,
        e.isTimelineDisplaced = !1,
        e.selectedSchedule = null,
        e.timelineHours = y.hours,
        e.isLoadingSchedules = !0,
        e.isLoadingInProgress = !1,
        e.isEmpty = !0,
        e.showError = !1,
        e.selectedIndex = 0,
        e.showLoading = !1,
        e.applyFilter = function(n) {
            var a = t.path().split("/").reverse()[0]
              , r = "/".concat(C.locationEpgFilter, "/");
            w = n,
            t.path(r + d.encodeId(w.genre.id, w.genre.title)).search("day", e.selectedIndex).search("from", a)
        }
        ,
        e.changeCurrentDayFilter = function(t) {
            u.trackEvent("epg::daySwitch", {
                DAY: s.toMaxFixed(I[t] / 1e3, 0)
            }),
            e.showLoading = !0,
            e.dataPlaybackNoInfo.length = 0,
            e.dataNonPlaybackNoInfo.length = 0,
            e.selectedIndex = t,
            D(),
            l.setMainDate(I[t]),
            l.setTimelineTimeInterval(),
            _()
        }
        ,
        e.openDetails = function(e, t) {
            t && g.openPopup(t.pid)
        }
        ,
        e.path = function() {
            return P.current
        }
        ,
        l.setMainDate(c.getTime(!0)),
        P.current = P.get(),
        e.$on("$locationChangeSuccess", function(t, a, o) {
            var s = a.includes("lid", 1) && !o.includes("lid")
              , u = !a.includes("lid") && o.includes("lid");
            s || u || (r.scrollTo(0, 0),
            P.old = P.current,
            P.current = P.get(),
            l.setMainDate(c.getTime(!0)),
            e.isLoadingSchedules = !0,
            e.dataPlayback.length = 0,
            e.dataNonPlayback.length = 0,
            e.dataPlaybackNoInfo.length = 0,
            e.dataNonPlaybackNoInfo.length = 0,
            P.current === C.epg && (e.$emit("goMdlAnalyticsSvcManager::routeChangeSuccess"),
            n.current = P.lastRoute),
            D(),
            i.isAuth && _())
        }),
        e.lineInView = function(t, n, a) {
            var r = a.element[0]
              , o = e.data[t].programs;
            "0px" === r.style.left && (r.style.left = l.getCurrentRowPosition());
            var i = h[t];
            n && i.programs && 0 === i.programs.length ? (i.programs = A.isDefined(o) ? z()(o.filter(l.isProgramInsideInterval)) : void 0,
            M[t] = !0) : !n && i.programs && i.programs.length > 0 && (i.programs.length = 0,
            M[t] = !1)
        }
        ,
        e.checkRowsInView = function() {
            for (var t = 0; t < M.length; t++) {
                var n = e.data[t];
                M[t] && A.isDefined(n) && A.isDefined(n.programs) && (h[t].programs = z()(n.programs.filter(l.isProgramInsideInterval)))
            }
        }
        ,
        e.setNoInfoPrograms = function() {
            !e.isLoadingInProgress && $()
        }
        ;
        var O = i.$watchCollection("[isAuth, isLoggedIn]", function(t, n) {
            t[1] !== n[1] && (N = !0),
            i.isAuth && p.checkKeepRoute().then(function() {
                !function() {
                    for (var e = new Date(c.getTime(!0)), t = 0; t < E; t++)
                        I.push(e.getTime()),
                        e.setDate(e.getDate() + 1)
                }(),
                e.showLoading = !0,
                M.length = T,
                M.fill(!0),
                _()
            })
        });
        e.$on("$destroy", O)
    }
    function K(e, t, n, a, r, o, i, c, s) {
        "ngInject";
        var l = s.go.goMdlEpg
          , u = l.tvGuide
          , d = l.now
          , g = l.routes
          , p = 0
          , m = {};
        function f() {
            return e.message = "common.error.catalogItems",
            n.reject()
        }
        function h(t) {
            e.$evalAsync(function() {
                e.showGrid = t
            })
        }
        function v(t, n) {
            return o.getFilteredSchedules(m.genre.id, p, t, n).then(function(n) {
                return e.count = n.count,
                function(t, n) {
                    return e.message = n || t.data.length ? "" : "thematicArea.noContent",
                    t
                }(n, t)
            }).catch(f)
        }
        function y() {
            m.genre = i.getGenre(),
            e.genre = m.genre,
            h(!1),
            p = t.search().day || 0,
            e.back = "".concat(u, "/").concat(t.search().from || d),
            e.selectedIndex = parseInt(p, 10),
            h(!0)
        }
        e.changeDay = function(e) {
            p = e,
            t.search("day", p)
        }
        ,
        e.applyFilter = function(n) {
            m = n,
            e.genre = m.genre,
            t.path("/".concat(g.filter, "/").concat(r.encodeId(m.genre.id, m.genre.title))).search("day", p)
        }
        ,
        e.getFilteredContents = function(t, n) {
            return e.message = "",
            v(t, n)
        }
        ,
        e.selectedIndex = 0,
        e.showGrid = !1;
        var S = a.$watchCollection("[isAuth, isLoggedIn]", function() {
            a.isAuth && c.checkKeepRoute().then(function() {
                return y()
            })
        });
        e.$on("$destroy", S)
    }
    Q.$inject = ["$scope", "$location", "$route", "$q", "$window", "goSvcLiveOrchestrator", "goSvcUserStatus", "goSvcTime", "goSvcUtils", "goMdlEpgSvcEpg", "goMdlAnalyticsSvcManager", "goSvcSlug", "goSvcLiveDetail", "goMdlEpgSvcRedirect", "goCnstConfig", "uaConstants"],
    K.$inject = ["$scope", "$location", "$q", "goSvcUserStatus", "goSvcSlug", "goMdlEpgSvcLive", "goMdlEpgSvcFilter", "goMdlEpgSvcRedirect", "goCnstConfig"];
    var X = n(245)
      , J = n.n(X);
    n(382);
    function Z(e, t, n, a) {
        return {
            scope: {
                callback: "=",
                selectedIndex: "="
            },
            template: J.a,
            link: {
                pre: function(r) {
                    var o, i, c = new Date(n.getTime(!0)), s = a.go.goMdlEpg.filters, l = s.daysDivider, u = s.total;
                    function d(e, t) {
                        var n = new Date(e.getTime());
                        return n.setDate(n.getDate() + t),
                        n
                    }
                    for (r.filters = {
                        days: []
                    },
                    t("common.date.today").then(function(e) {
                        r.filters.days[0] = e + l + c.getDate()
                    }).catch(A.noop),
                    t("common.date.tomorrow").then(function(e) {
                        r.filters.days[1] = e + l + d(c, 1).getDate()
                    }).catch(A.noop),
                    o = 2; o < u; o++)
                        i = d(c, o),
                        r.filters.days[o] = e.DATETIME_FORMATS.DAY[i.getDay()].slice(0, 3).toUpperCase() + l + i.getDate()
                },
                post: function(e) {
                    e.selectDay = function(t) {
                        e.selectedIndex !== t && (e.selectedIndex = t,
                        e.callback(t))
                    }
                }
            }
        }
    }
    Z.$inject = ["$locale", "$translate", "goSvcTime", "goCnstConfig"];
    var ee = n(20)
      , te = n.n(ee)
      , ne = n(244)
      , ae = n.n(ne);
    n(380);
    function re(e, t, n, a, r, o, i, c) {
        return {
            template: ae.a,
            link: function(s, l) {
                var u, d, g, p = c.go.goMdlEpg.timeline.scrollMovement, m = n.find(".go-epg-upcoming"), f = m.innerWidth(), h = l.find(".go-epg-upcoming--header-now-text"), v = f + c.go.goMdlEpg.timeline.limit, y = c.go.goMdlEpg.timeline.timer, S = c.go.goMdlEpg.timeline.nowLengthLimits, b = c.go.goMdlEpg.filters, E = t.Math, T = null;
                function C(e, t) {
                    w().css("left", e),
                    N().css("left", e),
                    a.setTimelineTimeInterval(e),
                    s.checkRowsInView(),
                    !t && s.setNoInfoPrograms()
                }
                function P(e) {
                    var t = s.limitsScroll;
                    A.isDefined(t) && (t.left = !1,
                    t.right = !1),
                    0 === e ? A.isDefined(t) && (t.left = !0) : e === v && A.isDefined(t) && (t.right = !0)
                }
                function I(e) {
                    var t = -E.abs(a.getCurrentTimeCoordinate());
                    t < v && (t = v),
                    C(t, e),
                    P(t),
                    s.initialHorizontalDisplacement = t,
                    s.isTimelineDisplaced = !1,
                    0 !== s.selectedIndex && s.changeCurrentDayFilter(0)
                }
                function M(e) {
                    var t = function(e) {
                        var t = parseInt(N().position().left, 10);
                        return (t = "right" === e ? t - p : t + p) > 0 ? t = 0 : t < v && (t = v),
                        P(t),
                        t
                    }(e);
                    r.trackEvent("epg::timeSwitch", {
                        DIRECTION: e
                    }),
                    C(t),
                    t <= s.initialHorizontalDisplacement + S && t >= s.initialHorizontalDisplacement - S ? s.isTimelineDisplaced = !1 : (s.isTimelineDisplaced = !0,
                    t < s.initialHorizontalDisplacement ? L() : 0 === s.selectedIndex && (h.addClass("go-epg-upcoming--header-now-text__right-arrow"),
                    h.removeClass("go-epg-upcoming--header-now-text__left-arrow")))
                }
                function N() {
                    return l.find(".go-epg-upcoming--programs-row")
                }
                function w() {
                    return l.find(".go-epg-upcoming--header-static-timeline")
                }
                function L() {
                    h.addClass("go-epg-upcoming--header-now-text__left-arrow"),
                    h.removeClass("go-epg-upcoming--header-now-text__right-arrow")
                }
                function $() {
                    u = s.$watch("selectedIndex", function(e, t) {
                        L(),
                        t > 0 && 0 === e && I(!0)
                    })
                }
                function R() {
                    var t = l.find(".go-epg-upcoming--playback-wrapper")
                      , n = l.find(".go-epg-upcoming--non-playback-wrapper");
                    t.removeClass("go-epg-upcoming--inner-wrapper__hidden"),
                    n.removeClass("go-epg-upcoming--inner-wrapper__hidden"),
                    e(function() {
                        t.addClass("go-epg-upcoming--inner-wrapper__hidden"),
                        n.addClass("go-epg-upcoming--inner-wrapper__hidden"),
                        t = n = null
                    })
                }
                s.limitsScroll = {
                    left: !1,
                    right: !1
                },
                s.numOfDays = b.total,
                s.launchScroll = function(e) {
                    "right" === e && s.limitsScroll.right || "left" === e && s.limitsScroll.left ? function(e) {
                        var t = "right" === e ? s.selectedIndex + 1 : s.selectedIndex - 1
                          , n = "right" === e ? 0 : v;
                        "left" === e && 0 === t ? (te()(u) && u(),
                        s.changeCurrentDayFilter(t),
                        $()) : s.changeCurrentDayFilter(t),
                        C(n),
                        "right" === e ? (s.limitsScroll.left = !0,
                        s.limitsScroll.right = !1) : (s.limitsScroll.left = !1,
                        s.limitsScroll.right = !0)
                    }(e) : M(e)
                }
                ,
                s.moveEpgToCurrent = I,
                $(),
                s.$on("$destroy", function() {
                    A.isDefined(T) && e.cancel(T),
                    te()(u) && u(),
                    te()(d) && d(),
                    i.removeHandler(g)
                }),
                "ie" === o.browser.name && (d = s.$watch("modalInstance", function(e) {
                    null !== e && e.result && e.result.then(R, R)
                })),
                T = e(function t() {
                    l.find(".go-epg-upcoming--wrapper").perfectScrollbar("update"),
                    N().length > 0 && w().length > 0 ? I() : T = e(t, y)
                }, y),
                g = i.addHandler(function() {
                    f = m.innerWidth(),
                    v = f + c.go.goMdlEpg.timeline.limit
                })
            }
        }
    }
    re.$inject = ["$timeout", "$window", "$document", "goMdlEpgSvcEpg", "goMdlAnalyticsSvcManager", "goSvcFeature", "goSvcResizeListener", "goCnstConfig"];
    n(378);
    n(376);
    var oe = n(243)
      , ie = n.n(oe);
    n(374);
    function ce(e, t, n) {
        var a = n.go.goMdlEpg.maxProgramWidth
          , r = n.go.goMdlEpg.minProgramWidth;
        return {
            replace: !0,
            scope: {
                program: "=",
                state: "=?",
                detailsCallback: "&",
                isAirProgram: "=?"
            },
            link: function(n, o) {
                var i, c;
                n.program && (i = e.getProgramCoordinates(n.program.startTime, n.program.endTime),
                (c = o.parent()).css("width", i.width),
                i.width > a ? n.state = 0 : i.width <= a && i.width >= r ? n.state = 1 : n.state = 2,
                c.css("position", "absolute"),
                c.css("left", i.left),
                n.program.isAirProgram && (n.progress = t("goMdlEpgFltrProgress")(n.program)),
                n.startTime = t("goFltrDateRange")(n.program, void 0, void 0, 1),
                n.endTime = t("goFltrDateRange")(n.program, void 0, void 0, 2),
                n.program.isAirProgram = e.isAirProgram(n.program))
            },
            template: ie.a
        }
    }
    function se(e, t) {
        var n = e.Math;
        return function(e) {
            var a, r, o;
            return !e || e.startTime <= 0 || !e.endTime ? "0%" : (a = e.endTime - e.startTime,
            r = t.getTime() - e.startTime,
            (o = n.floor(100 * r / a)) < 0 ? o = 0 : o > 100 && (o = 100),
            o + "%")
        }
    }
    function le(e, t, n, a) {
        "ngInject";
        var r, o, i = [], c = a.go.goMdlEpg.smartFilter, s = t.Math;
        return n.$watchCollection("[isAuth, isLoggedIn]", function() {
            n.isAuth && (i = [])
        }),
        {
            requestChild: function(t, n) {
                if (i.length && o === t.starttime) {
                    var a = i.some(function(e, t) {
                        return e - r[t] > 0
                    });
                    return a ? function(e, t) {
                        var n, a, o, c = l(e.limit), u = i.map(function(e, t) {
                            return e - r[t] - c[t]
                        });
                        return u.some(function(e) {
                            return e < 0
                        }) && !u.every(function(e) {
                            return e < 0
                        }) ? (a = s.abs(u.filter(function(e, t) {
                            if (e < 0)
                                return n = t,
                                !0
                        })[0]),
                        o = s.abs(n - 1),
                        c = c.map(function(e, t) {
                            return e + (t === o ? a : 0)
                        }),
                        p(e, t, c).then(m)) : p(e, t).then(m)
                    }(t, n) : d(t)
                }
                return o = t.starttime,
                i = [],
                r = [],
                function(t, n) {
                    var a, o;
                    return p(t, n).then(function(t) {
                        var c, l;
                        r = t.map(function(e) {
                            return e.data.length
                        }),
                        i = t.map(function(e) {
                            var t = e.count;
                            return t
                        }),
                        a = t;
                        var u = t.map(function(e) {
                            return e.count - e.config.params.limit
                        })
                          , d = u.some(function(e, t) {
                            if (e < 0)
                                return c = t,
                                !0
                        }) && !u.every(function(e) {
                            return e <= 0
                        });
                        return d ? (l = s.abs(c - 1),
                        o = t[l].config.params,
                        Object.assign(o, {
                            offset: t[l].data.length,
                            limit: s.abs(u[c])
                        }),
                        r[l] = t[l].data.length,
                        n(o).then(function(e) {
                            return a.push(e),
                            r[l] += o.limit,
                            g(a)
                        })) : e.when(g(a))
                    })
                }(t, n)
            }
        };
        function l(e) {
            var t = e % 2
              , n = s.floor(e / 2);
            return [n, n + t]
        }
        function u(e) {
            return e.reduce(function(e, t) {
                return e + t
            }, 0)
        }
        function d(t) {
            return e.when({
                config: {
                    params: t
                },
                data: [],
                count: u(i)
            })
        }
        function g(e) {
            return {
                data: Array.prototype.concat.apply([], e.map(function(e) {
                    return e.data
                })),
                count: u(i)
            }
        }
        function p(t, n, a) {
            var o = a || l(t.limit);
            0 === t.offset && (r = [0, 0]);
            var s = [z()(Object.assign(t, {
                offset: r[0],
                limit: o[0]
            })), z()(Object.assign(t, {
                offset: r[1],
                limit: o[1],
                ca_genreIds: "",
                ca_programTypeId: c.genres.filter(function(e) {
                    return "kids" === e.title
                })[0].id
            }))].map(function(e, t) {
                return !i.length || i[t] - r[t] > 0 ? n(e) : d(e)
            });
            return e.all(s)
        }
        function m(t) {
            return r = t.map(function(e) {
                return e.config.params.offset += e.data.length,
                e.config.params.offset
            }),
            e.when(g(t))
        }
    }
    function ue(e, t, n, a) {
        "ngInject";
        var r, o = a.go.goMdlEpg.pixelFactor, i = a.go.goMdlEpg.timeline.scrollMovement, c = o * i * 1e3, s = {
            left: 0,
            position: 0,
            right: 0
        }, l = e.Math.abs, u = n.getTime(!0);
        return {
            getCurrentRowPosition: function() {
                return s.position
            },
            getProgramCoordinates: function(e, n) {
                var a, r, i = new Date(u), c = new Date(t.toTimestamp(e));
                i.setHours(0),
                i.setMinutes(0),
                i.setSeconds(0),
                c.setHours(0),
                c.setMinutes(0),
                c.setSeconds(0),
                c.getDate() < i.getDate() ? (a = n - i.getTime() / 1e3,
                r = 0) : (a = n - e,
                r = (e - c.getTime() / 1e3) / o);
                return {
                    width: a / o,
                    left: r
                }
            },
            setMainDate: function(e) {
                u = e
            },
            getMainStartTime: function() {
                var e = new Date(u);
                return e.setHours(0),
                e.setMinutes(0),
                e.setSeconds(0),
                e.getTime()
            },
            getMainEndTime: function() {
                var e = new Date(u);
                return e.setHours(23),
                e.setMinutes(59),
                e.setSeconds(59),
                e.getTime()
            },
            getCurrentTimeCoordinate: function() {
                var e = n.getTime(!0)
                  , t = new Date(e);
                return t.setHours(0),
                t.setMinutes(0),
                t.setSeconds(0),
                (e / 1e3 - t / 1e3) / o
            },
            isAirProgram: function(e) {
                if (!e)
                    return !1;
                var a = n.getTime(!0);
                return t.toTimestamp(e.endTime) >= a && t.toTimestamp(e.startTime) <= a
            },
            isNextProgram: function(e) {
                if (!e)
                    return !1;
                var a = n.getTime(!0);
                return t.toTimestamp(e.startTime) > a
            },
            setTimelineTimeInterval: function(t) {
                var n = new Date(u).setHours(0, 0, 0, 0);
                A.isDefined(t) && (s.position = t);
                r = e.innerWidth,
                s.left = o * l(t || s.position) * 1e3 + n,
                s.left -= c,
                s.right = o * l((t || s.position) - r) * 1e3 + n,
                s.right += c
            },
            isProgramInsideInterval: function(e) {
                if (!e)
                    return !1;
                var n = t.toTimestamp(e.startTime)
                  , a = t.toTimestamp(e.endTime)
                  , r = s.left
                  , o = s.right;
                return n >= r && n <= o || n <= r && a <= o && a >= r || n <= r && a >= o
            }
        }
    }
    function de(e, t, n, a, r) {
        "ngInject";
        var o = r.go.goMdlEpg.smartFilter.genres;
        return {
            getGenres: function() {
                return e.when(a.setSelectedItem([o, i()]))
            },
            getGenre: i
        };
        function i() {
            return (e = n.decode(t.path())) && o.filter(function(t) {
                return t.id === e.id
            })[0] || o.filter(function(e) {
                return e.isDefault
            })[0];
            var e
        }
    }
    function ge(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d, p, m, f, h = 86400, v = u.PlaybackType, y = l.go.goMdlEpg.smartFilter, S = g.caTypes.CONTENT_TYPES.LIVE_PROGRAM;
        return {
            getDetailsFromSchedule: function(a) {
                return r.programSchedules().get({
                    contentPid: g.caUtils.toPid(S, a.epgProgramId)
                }).then(function(r) {
                    return function(a, r) {
                        var o, i, c;
                        (r = r.filter(function(e) {
                            return e.Start === a.startTime && g.caUtils.getId(e.LiveChannelPid) === a.liveChannelId && parseInt(e.ProgramId) === a.epgProgramId
                        })) && r.length ? (o = r[0],
                        i = s(o),
                        (c = {
                            id: o.Pid,
                            liveChannelId: g.caUtils.getId(o.LiveChannelPid),
                            liveProgram: function(e, t) {
                                return {
                                    id: t.id,
                                    name: t.name,
                                    description: t.details.description,
                                    resizableImages: t.details.resizableImages,
                                    ageRating: t.details.ageRating,
                                    channel: e.channel,
                                    startTime: e.startTime,
                                    endTime: e.endTime,
                                    isAirProgram: e.isAirProgram || n.isAirProgram({
                                        startTime: e.startTime,
                                        endTime: e.endTime
                                    }),
                                    seriesId: t.details.epgSerieId,
                                    isCpvrDisabled: t.isCpvrDisabled
                                }
                            }(a, i),
                            epgNetworkDvr: o.EpgNetworkDvr,
                            seasonNumber: o.SeasonNumber
                        }).liveProgram.showPVR = c.epgNetworkDvr && t.getTime() < c.liveProgram.endTime,
                        c.liveProgram.showCPVR = !c.liveProgram.isCpvrDisabled && t.getTime() < c.liveProgram.endTime,
                        c = e.when(c)) : c = e.reject("No program details available");
                        return c
                    }(a, r)
                })
            },
            getFilteredSchedules: function(s, l, u, g) {
                return f = m === s && p === l,
                m = s,
                p = l,
                e.all([a.getChannels(v.PlaybackRight), a.getChannels(v.NonPlayback)]).then(function(e) {
                    return e[0].concat(e[1]).map(function(e) {
                        return "lch".concat(e)
                    }).toString()
                }).then(function(a) {
                    var r, c, p = {
                        offset: u,
                        limit: g,
                        includedescription: !1,
                        filteravailability: !1,
                        orderBy: "DateStart",
                        livechannelpids: a,
                        ca_programTypeId: s
                    }, m = {};
                    return y.genres.forEach(function(e) {
                        m[e.title] = e.id
                    }),
                    p = Object.assign(p, (c = l * h,
                    f && d ? r = d : (r = c ? i.toServerTime(n.getMainStartTime()) : t.getDiscretizedTime(),
                    d = r),
                    {
                        starttime: r + c,
                        endtime: i.toServerTime(n.getMainEndTime()) + c
                    })),
                    s === m.kids ? o.getChildrenGenreId().then(function(e) {
                        return e ? Object.assign(p, {
                            ca_genreIds: e,
                            ca_programTypeId: y.programType.children
                        }) : p
                    }) : (s === m.others && (p.ca_programTypeId = y.programType.others),
                    e.when(p))
                }).then(function(t) {
                    function n(e) {
                        return r.pagedSchedules().get(JSON.parse(JSON.stringify(e)))
                    }
                    return t.livechannelpids.length ? t.ca_genreIds ? c.requestChild(t, n) : n(t) : e.when({
                        data: [],
                        count: 0
                    })
                })
            }
        }
    }
    function pe(e, t, n) {
        "ngInject";
        return {
            checkKeepRoute: function() {
                return t.isAvailableForUser().then(function(t) {
                    return t ? e.when() : (n.redirectToHome(),
                    e(function() {
                        return null
                    }))
                }).catch(function() {
                    return e.when()
                })
            }
        }
    }
    ce.$inject = ["goMdlEpgSvcEpg", "$filter", "goCnstConfig"],
    se.$inject = ["$window", "goSvcTime"],
    le.$inject = ["$q", "$window", "goSvcUserStatus", "goCnstConfig"],
    ue.$inject = ["$window", "goSvcUtils", "goSvcTime", "goCnstConfig"],
    de.$inject = ["$q", "$location", "goSvcSlug", "goSvcCatalog", "goCnstConfig"],
    ge.$inject = ["$q", "goSvcTime", "goMdlEpgSvcEpg", "goSvcLiveOrchestrator", "goSvcCaLive", "goSvcUniapiParameter", "goSvcUtils", "goMdlEpgSvcChildRequest", "goModelCaDetailedLiveProgram", "goCnstConfig", "uaConstants"],
    pe.$inject = ["$q", "goSvcUniapiLive", "goSvcUtils"];
    n(372);
    n.d(t, "goMdlEpg", function() {
        return me
    });
    var me = r.a.module("goMdlEpg", []).component("goMdlEpgCmpChannel", p).component("goMdlEpgCmpError", v).component("goMdlEpgCmpNow", T).component("goMdlEpgCmpPlacard", M).component("goMdlEpgCmpProgressBar", $).component("goMdlEpgCmpDate", O).component("goMdlEpgCmpLandscapeImage", j).component("goMdlEpgCmpButtonsLive", W).controller("goMdlEpgCtrlEpg", Q).controller("goMdlEpgCtrlFilter", K).directive("goMdlEpgDrctDaysMenu", Z).directive("goMdlEpgDrctEpg", re).directive("goMdlEpgDrctFilter", function() {
        return {
            controller: "goMdlEpgCtrlFilter",
            template: s.a
        }
    }).directive("goMdlEpgDrctMain", function() {
        return {
            template: i.a
        }
    }).directive("goMdlEpgDrctScheduleItem", ce).filter("goMdlEpgFltrProgress", se).factory("goMdlEpgSvcChildRequest", le).factory("goMdlEpgSvcEpg", ue).factory("goMdlEpgSvcFilter", de).factory("goMdlEpgSvcLive", ge).factory("goMdlEpgSvcRedirect", pe).config(l).name
}
, function(e, t, n) {
    "use strict";
    n.r(t);
    var a = n(5)
      , r = n.n(a)
      , o = (n(883),
    n(1))
      , i = (n(847),
    n(816),
    n(814),
    n(812),
    n(233),
    n(810),
    n(809),
    n(808),
    n(807),
    n(806),
    n(797),
    n(796),
    n(795),
    n(794),
    n(793),
    n(792),
    n(790),
    n(789),
    n(788),
    n(787),
    n(786),
    n(785),
    n(168))
      , c = n.n(i);
    n(80),
    n(780),
    n(34),
    n(57);
    function s(e) {
        var t, n = "homeEditorial", a = {};
        t = function(e, t, n, r) {
            return a[r] || (a[r] = n.apply(e, t).finally(function() {
                a[r] = null
            })),
            a[r]
        }
        ,
        e.decorator("goSvcUniapiAuthentication", ["$delegate", function(e) {
            var n = e.login
              , a = e.logout
              , r = e.getUser;
            return e.login = function() {
                return t(this, arguments, n, "login")
            }
            ,
            e.logout = function() {
                return t(this, arguments, a, "login")
            }
            ,
            e.getUser = function() {
                return t(this, arguments, r, "getUser")
            }
            ,
            e
        }
        ]),
        e.decorator("goSvcUniapiPin", ["$delegate", function(e) {
            var n = e.checkParentalPin
              , a = e.checkPurchasePin
              , r = e.changeParentalPin
              , o = e.setAgeRatingValue
              , i = e.changePurchasePin
              , c = e.setPurchasePin;
            return e.checkParentalPin = function() {
                return t(this, arguments, n, "pin")
            }
            ,
            e.checkPurchasePin = function() {
                return t(this, arguments, a, "pin")
            }
            ,
            e.changeParentalPin = function() {
                return t(this, arguments, r, "pin")
            }
            ,
            e.setAgeRatingValue = function() {
                return t(this, arguments, o, "pin")
            }
            ,
            e.changePurchasePin = function() {
                return t(this, arguments, i, "pin")
            }
            ,
            e.setPurchasePin = function() {
                return t(this, arguments, c, "pin")
            }
            ,
            e
        }
        ]),
        e.decorator("goMdlHomeSvcEditorial", ["$delegate", "goSvcUtils", function(e, a) {
            var r = e.getChannelEditorialContents
              , o = e.getEditorsPickContents
              , i = Array.prototype.slice;
            function c(e) {
                return function() {
                    var r = i.call(arguments)
                      , o = a.getProperty(r[0], "contentPid", "");
                    return t(this, arguments, e, n + o)
                }
            }
            return e.getChannelEditorialContents = c(r),
            e.getEditorsPickContents = c(o),
            e
        }
        ]),
        e.decorator("goSvcUniapiPvr", ["$delegate", function(e) {
            var n = e.getAllRecordingSchedules
              , a = Array.prototype.slice;
            return e.getAllRecordingSchedules = function() {
                var e = a.call(arguments)[0];
                return t(this, arguments, n, "recording" + e)
            }
            ,
            e
        }
        ])
    }
    function l(e, t, n) {
        return function(a) {
            var r = t.getAll()
              , o = e("number")(a, n.decimalCurrency);
            return r && r.CurrencyFormat && r.CurrencyFormat.indexOf("%1") >= 0 ? r.CurrencyFormat.replace("%1", o) : o
        }
    }
    s.$inject = ["$provide"],
    l.$inject = ["$filter", "goSvcUniapiSettings", "goCnstSetup"];
    var u = n(21)
      , d = n(178)
      , g = n.n(d);
    function p(e, t) {
        "ngInject";
        var n = e("translate");
        return function(e) {
            if (e === t.languages.autoCode)
                return n("audiosAndSubtitles.languages.automatic");
            var a = "audiosAndSubtitles.languages.".concat(e)
              , r = n(a);
            return r !== a ? g()(r) : g()(Object(u.a)(e))
        }
    }
    p.$inject = ["$filter", "goCnstEnumerated"];
    var m = n(11)
      , f = n.n(m);
    function h(e, t) {
        "ngInject";
        var n = e("translate")
          , a = n("common.date.unknown")
          , r = n("common.date.separator");
        function o(e, n, r, o) {
            var i;
            return (r === o || f()(r)) && (i = t(e, n) || a),
            i
        }
        return function(e, t, n, a) {
            var i = t || r
              , c = "";
            return e && (e.startTime || e.endTime) && (i = 2 === a ? "" : i,
            c = [o(e.startTime, n, a, 1), o(e.endTime, n, a, 2)].join(i)),
            c
        }
    }
    function v(e, t, n) {
        var a = e("date");
        return function(e, r) {
            var o = r || n.go.date.format.time;
            return e ? a(t.toTimestamp(e), o) : ""
        }
    }
    function y(e, t, n) {
        "ngInject";
        var a = "".concat(n.routes.movie, "/")
          , r = "".concat(n.routes.serie, "/")
          , i = "".concat(n.routes.catalog, "/")
          , c = "".concat(n.routes.subscription, "/")
          , s = "".concat(n.routes.catchup, "/")
          , l = "".concat(n.routes.live, "/")
          , u = n.routes.contents
          , d = n.goType
          , g = "";
        return function(n) {
            return !n || n.preload ? g : t.isNetflixContent(n) ? g : function(e) {
                return e.url && m(e) && e.goType !== d.Subscription
            }(n) ? n.url : function(e) {
                return e.productId > 0
            }(n) ? function(t) {
                var n;
                switch (t.goType) {
                case d.Movie:
                    n = a + f(t);
                    break;
                case d.Episode:
                case d.Season:
                case d.Serie:
                    n = function(e) {
                        var t = m(e) ? p(e) : f(e);
                        return r + t
                    }(t);
                    break;
                case d.VodChannel:
                    n = (y = t).isCatchup ? function(e) {
                        return e.isRootCatchup ? s.replace("/", "") : e.isRootCatchupChildren && e.hasChildren ? s + f(e) : e.isRootCatchupChildren && !e.hasChildren ? "".concat(s).concat(f(e), "/").concat(u) : !e.isRootCatchupChildren && e.parentChannelId ? "".concat(s).concat(h(e), "/").concat(u, "/").concat(f(e)) : g
                    }(y) : function(e) {
                        var t = i;
                        return e.isRoot ? g : e.hasChildren || e.isRootChildren ? t + f(e) : e.parentChannelId ? "".concat(t).concat(h(e), "/").concat(f(e)) : g
                    }(y);
                    break;
                case d.Subscription:
                    v = t,
                    n = c + e.encodeId(v.productId, v.title);
                    break;
                case d.LiveProgram:
                    o = t,
                    n = l + e.encodeId(o.productId, o.title || o.name);
                    break;
                default:
                    n = g
                }
                var o;
                var v;
                var y;
                return n
            }(n) : g
        }
        ;
        function p(e) {
            return e.productId
        }
        function m(e) {
            return e.pid && o.caUtils.getType(e.pid) === o.caTypes.CONTENT_TYPES.LINK
        }
        function f(t) {
            return e.encodeId(p(t), t.name || "")
        }
        function h(t) {
            return e.encodeId(t.parentChannelId, t.parentChannelTitle || "")
        }
    }
    function S(e) {
        var t = e("translate");
        return function(e, n) {
            var a;
            if (e >= 0) {
                var r = e / 60 | 0;
                a = r + " " + t("common.date.minute", {
                    count: r
                }, "messageformat")
            } else
                a = n ? "" : t("common.error.duration");
            return a
        }
    }
    function b(e, t) {
        var n = e("translate")
          , a = e("goFltrDateUniapi");
        return function(e) {
            var r = t.getDiffDaysFromNow(e);
            return 0 === r ? n("common.emitted.today") : 1 === r ? n("common.emitted.yesterday") : r <= 7 ? n("common.emitted.other") + " " + a(e, "EEEE, dd MMM") : n("common.emitted.other") + " " + a(e, "dd MMM")
        }
    }
    function E(e, t) {
        "ngInject";
        var n = e("translate")
          , a = e("goFltrDateUniapi");
        return function(e) {
            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "expirationMessage"
              , o = t.getDiffDaysFromNow(e)
              , i = t.getDiffHoursFromNow(e);
            return i >= 0 ? n("details.".concat(r, ".expired")) : i >= -1 ? n("details.".concat(r, ".lessThan1Hour")) : i >= -48 ? n("details.".concat(r, ".lessThan48Hours"), {
                hours: Math.abs(i)
            }) : n("details.".concat(r, ".moreThan48Hours"), o >= -7 ? {
                date: a(e, "EEEE dd MMM")
            } : {
                date: a(e, "dd MMM")
            })
        }
    }
    h.$inject = ["$filter", "goFltrDateUniapiFilter"],
    v.$inject = ["$filter", "goSvcUtils", "goCnstConfig"],
    y.$inject = ["goSvcSlug", "goSvcNetflix", "goCnstEnumerated"],
    S.$inject = ["$filter"],
    b.$inject = ["$filter", "goSvcTime"],
    E.$inject = ["$filter", "goSvcTime"];
    var T = n(15)
      , C = n.n(T);
    function P(e) {
        "ngInject";
        var t = e("translate");
        return function(e, n, a) {
            return C()(e) ? e.map(function(e) {
                return n ? e[n] : e
            }).join(a || t("common.joinSeparator")) : ""
        }
    }
    function I(e, t) {
        var n = e.Math;
        return function(e, a) {
            return t("translate")("common.percentage", {
                value: a > 0 && e > 0 ? n.floor(100 * e / a) : 0
            })
        }
    }
    function A(e) {
        var t = e("goFltrCurrency")
          , n = e("goFltrRecurrence");
        return function(e) {
            var a = t(e.value);
            return e.isRecurring && (a += "/" + n(e, "subscriptions.recurrence")),
            a
        }
    }
    function M(e, t) {
        "ngInject";
        var n = t.RecurrenceType.Custom
          , a = e("translate");
        return function(e, t) {
            var r = e.recurrenceType
              , o = e.recurrenceDays
              , i = e.rentalPeriod;
            return r === n ? function(e) {
                var t = a("common.date.day", {
                    count: e
                }, "messageformat");
                return a("library.availableCustom", {
                    number: e,
                    period: t
                })
            }(o) : function(e, t) {
                return e ? a([t || "library.available", e].join(".")) : ""
            }(i, t)
        }
    }
    function N(e) {
        var t = "search?" + e.search.queryParam + "={0}&" + e.search.typeParam + "={1}";
        return function(e, n) {
            var a = t;
            return e && (n && (e = '"' + e + '"',
            a = a.replace(/\{1\}/, n)),
            a = a.replace(/\{0\}/, encodeURIComponent(e))),
            a = a.replace(/[\?\&]?[\w]+=\{[\d]+\}$/, "")
        }
    }
    P.$inject = ["$filter"],
    I.$inject = ["$window", "$filter"],
    A.$inject = ["$filter"],
    M.$inject = ["$filter", "uaConstants"],
    N.$inject = ["goCnstEnumerated"];
    var w = n(10)
      , L = n.n(w);
    function $(e) {
        "ngInject";
        return function(t, n) {
            var a = t
              , r = n;
            return t && !L()(t) && (a = t.title || "content",
            r = t.id),
            r ? e.encodeId(r, a) : e.encode(a)
        }
    }
    $.$inject = ["goSvcSlug"];
    var R = n(17)
      , D = n.n(R);
    function _(e, t) {
        "ngInject";
        var n = t.spotlight.path
          , a = {
            resize: "CROP",
            format: "JPEG"
        };
        return function(t, r, o, i) {
            var c, s, l = [];
            return t && t.length ? (t.lastIndexOf("http") > 0 ? (c = t.substring(t.lastIndexOf("http"))).indexOf("&") > 0 && (c = c.substring(0, c.indexOf("&"))) : c = encodeURIComponent(t),
            D()(Object.assign({}, a, i), function(e, t) {
                return l.push("".concat(t, "=").concat(e))
            }),
            s = "".concat(e.getSpotlightUrlSync() + n, "?image=").concat(c),
            r && (s += "&width=".concat(r)),
            o && (s += "&height=".concat(o)),
            "".concat(s, "&").concat(l.join("&"))) : ""
        }
    }
    function O(e, t) {
        "ngInject";
        var n = e("goFltrSpotlight");
        return function(e, a) {
            var r = [];
            if (e) {
                var o = e.includes("saturation=") ? t.spotlight.effects.epgUpcoming : void 0;
                return D()(a, function(t, a) {
                    r.push("".concat(n(e, t.width, t.height, o), " ").concat(a))
                }),
                r.join(",")
            }
            return ""
        }
    }
    function U(e) {
        var t = e.Math.floor;
        function n(e) {
            return e < 10 && (e = "0" + e),
            e
        }
        return function(e) {
            var a, r, o, i = "00:00";
            return e >= 0 && (a = t(e / 3600),
            r = t(e / 60 % 60),
            o = t(e / 3600 % 60),
            i = n(a) + ":" + n(r) + ":" + n(o)),
            i
        }
    }
    function k(e) {
        return function(t, n) {
            return t >= n ? e("translate")("myTv.table.rows.progressBar.completed") : e("translate")("myTv.table.rows.progressBar.leftTime", {
                value: e("goFltrDuration")(n - t)
            })
        }
    }
    function x(e, t, n) {
        "ngInject";
        var a = e("translate")
          , r = e("goFltrDateUniapi")
          , o = /'/g;
        return function(e) {
            var i, c = t.getTime();
            if (e) {
                var s = e.startTime
                  , l = e.endTime
                  , u = t.getDiffDaysFromNow(s);
                i = c >= s && c <= l ? a("common.timeToPeriod.now") : 0 === u ? a("common.timeToPeriod.today") : 1 === u ? a("common.timeToPeriod.yesterday") : -1 === u ? a("common.timeToPeriod.tomorrow") : r(s, a("common.timeToPeriod.other"))
            }
            return i ? n.capitalize(i.replace(o, "")) : ""
        }
    }
    _.$inject = ["goSvcUniapiParameter", "goCnstEnumerated"],
    O.$inject = ["$filter", "goCnstEnumerated"],
    U.$inject = ["$window"],
    k.$inject = ["$filter"],
    x.$inject = ["$filter", "goSvcTime", "goSvcUtils"];
    var j = n(25)
      , B = n.n(j);
    var F = r.a.module("go.filters", []).filter("goFltrCurrency", l).filter("goFltrLanguage", p).filter("goFltrDateRange", h).filter("goFltrDateUniapi", v).filter("goFltrDetailsLink", y).filter("goFltrDuration", S).filter("goFltrEmitted", b).filter("goFltrExpiresIn", E).filter("goFltrJoin", P).filter("goFltrPercentage", I).filter("goFltrPricingModelText", A).filter("goFltrRecurrence", M).filter("goFltrSearchPath", N).filter("goFltrSlugify", $).filter("goFltrSpotlight", _).filter("goFltrSrcset", O).filter("goFltrTimeIso", U).filter("goFltrTimeLeft", k).filter("goFltrTimeToPeriod", x).filter("goFltrGenres", function() {
        return function(e) {
            return C()(e) ? (e = function(e) {
                var t = e[0];
                return B()(t) && t.name
            }(e) ? e.map(function(e) {
                return e.name
            }) : e).join(", ") : e
        }
    }).name
      , V = {
        env: "Production",
        country: "pt-br",
        device: "pc",
        deviceName: "PC",
        serviceEndpoint: "service3.0/",
        baseName: "mca-go-pt-br-prod-iis-7.4.1-ra-0-gf825b39",
        version: "7.4.1",
        milestone: "/RA",
        commitNumber: "gf825b39",
        dirty: "false",
        sha: "gf825b39",
        basePath: "/",
        data: {
            environment: {
                prod: "Production",
                preprod: "Preproduction",
                staging: "Staging",
                cert: "Certification",
                minilabDev: "MinilabDev",
                minilabProd: "MinilabProd",
                dev: "Dev",
                azure: "Azure"
            }
        }
    }
      , H = n(79)
      , G = n(22)
      , W = r.a.module("go.constants", []).constant("goCnstApp", V).constant("goCnstConfig", H.goCnstConfig).constant("goCnstEnumerated", G.a).name;
    function q(e, t, n, a, r) {
        "ngInject";
        var o = t.goType
          , i = t.goSource;
        return function(t) {
            var c;
            switch (e(t, i.productModel)) {
            case o.Season:
                c = n(t);
                break;
            case o.Episode:
                c = a(t);
                break;
            default:
                c = r(t)
            }
            return c
        }
    }
    function Y(e, t) {
        "ngInject";
        return function(n) {
            var a = e.getProperty(n, "Icon");
            return a && (n = Object.assign(n, {
                Images: {
                    Icon: [{
                        SourceImageFormat: a.Ext,
                        Url: a.Url,
                        SourceImageHeight: a.Width,
                        ImageClass: "0",
                        SourceImageWidth: a.Height
                    }]
                }
            })),
            Object.assign({
                id: e.getProperty(n, "ID", -1),
                value: e.getProperty(n, "Age", -1),
                name: e.getProperty(n, "Title", ""),
                description: e.getProperty(n, "Name", ""),
                isXXX: e.getProperty(n, "IsAdult", !1)
            }, t(n))
        }
    }
    function z(e, t) {
        "ngInject";
        return function(n) {
            return o.caUtils.isType(n.Pid, o.caTypes.CONTENT_TYPES.LIVE_SCHEDULE) ? e(n) : t(n)
        }
    }
    function Q(e, t, n) {
        "ngInject";
        var a = o.caTypes.ATTRIBUTES
          , r = a.REQUIRES_PIN
          , i = a.EXTERNAL_URLS
          , c = o.caTypes.NEXT_LEVEL_TYPE.Grid;
        return function(a) {
            var s = Object.assign({
                pid: e.getProperty(a, "Pid"),
                title: e.getProperty(a, "Title", ""),
                titleInMenu: e.getProperty(a, "TitleInMenu", ""),
                description: e.getProperty(a, "Description", ""),
                position: e.getProperty(a, "AnchorExtensionPosition", o.caTypes.ANCHOR_EXTENSION_POSITION.Bottom),
                isSpecialChannel: e.getProperty(a, "IsSpecialChannel"),
                parentChannelId: e.getProperty(a, "ParentChannelId"),
                nextLevel: e.getProperty(a, "NextLevel", c),
                contentType: e.getProperty(a, "ChannelType", o.caTypes.CHANNEL_CONTENT_TYPE.VOD),
                defaultSortVOD: e.getProperty(a, "VodDefaultOrder"),
                defaultSortLIVE: e.getProperty(a, "LiveDefaultOrder"),
                customUxrLayout: e.getProperty(a, "UxReferenceLayout"),
                customUxrSearch: e.getProperty(a, "UxReferenceSearch"),
                showSubscribedFilter: e.getProperty(a, "ShowSubscribedFilter", !1)
            }, t(a));
            return s.id = o.caUtils.getId(s.pid),
            s.isAdult = o.caUtils.getAttribute(a, r),
            s.goType = n.goType.VodChannel,
            s.itemType = e.getItemTypeFromGoType(s.goType),
            s.productId = s.id,
            s.name = s.title,
            s.externalUrls = o.caUtils.getAttribute(a, i),
            s.titleInMenu = s.titleInMenu || s.title,
            s.isCatchup = !1,
            s.isRootCatchup = !1,
            s.isRootCatchupChildren = !1,
            s.hasChildren = !1,
            s
        }
    }
    function K(e, t, n) {
        "ngInject";
        return function(a) {
            var r = {
                pid: e.getProperty(a, "Pid", -1),
                name: e.getProperty(a, "Title", ""),
                seriesId: e.getProperty(a, "SeriesId", 0),
                seasonId: e.getProperty(a, "SeasonId", 0)
            };
            return r.id = o.caUtils.getId(r.pid),
            r.productId = r.id,
            r.goType = t(r.pid, n.goSource.pid),
            r.itemType = e.getItemTypeFromGoType(r.goType),
            r.isAdult = o.caUtils.getAttribute(a, o.caTypes.ATTRIBUTES.REQUIRES_PIN),
            r.episodeId = r.goType === n.goType.Episode ? r.id : 0,
            r.seasonId = r.goType === n.goType.Season ? r.id : r.seasonId,
            r.seriesId = r.goType === n.goType.Serie ? r.id : r.seriesId,
            r
        }
    }
    function X(e, t, n) {
        "ngInject";
        return function(a) {
            var r = {
                pid: e.getProperty(a, "Pid", -1),
                name: e.getProperty(a, "Title", ""),
                trackId: e.getProperty(a, "TrackId")
            };
            return r.id = o.caUtils.getId(r.pid),
            r.productId = r.id,
            r.goType = t(r.pid, n.goSource.pid),
            r.isAdult = o.caUtils.getAttribute(a, o.caTypes.ATTRIBUTES.REQUIRES_PIN),
            r
        }
    }
    function J(e, t, n, a) {
        "ngInject";
        return function(r) {
            var i, c = {
                pid: n.getProperty(r, "Pid", -1),
                name: n.getProperty(r, "Title"),
                reducedDescription: n.getProperty(r, "ShortDescription", ""),
                details: {
                    description: n.getProperty(r, "Description", ""),
                    epgSerieId: n.getProperty(r, "EpgSerieId", -1)
                },
                isCpvrDisabled: o.caUtils.getAttribute(r, o.caTypes.ATTRIBUTES.CPVR_DISABLE) || !1
            };
            return c.id = o.caUtils.getId(c.pid),
            c.details.ageRating = (i = o.caUtils.getId(n.getProperty(r, "AgeRatingPid", 0)),
            (e.get("AgeRatings") || []).filter(function(e) {
                return n.getProperty(e, "ID") === i
            }).map(t)[0]),
            c.videoFrame = n.getProperty(o.caUtils.getImage(r, o.caTypes.IMAGE_TYPES.VIDEOFRAME), "Url"),
            c.itemType = a.itemType.LiveProgram,
            c
        }
    }
    function Z(e, t, n, a, r) {
        "ngInject";
        return function(e) {
            var i = Object.assign({
                pid: t.getProperty(e, "Pid", -1),
                name: t.getProperty(e, "Title", ""),
                productId: t.getProperty(e, "CatalogItemId", -1),
                url: t.getProperty(e, "Url", ""),
                catalogItemPid: t.getProperty(e, "CatalogItemPid", -1),
                startDate: function(e) {
                    var n = t.getProperty(e, "DateStart", 0);
                    return n > 0 ? n : 0
                }(e)
            }, a(e));
            return i.id = o.caUtils.getId(i.pid),
            i.goType = n(i.catalogItemPid, r.goSource.pid),
            i.itemType = t.getItemTypeFromGoType(i.goType),
            i.catalogItemType = r.catalogItemType[o.caUtils.getType(i.catalogItemPid)] || 0,
            i.title = i.name,
            i
        }
    }
    function ee(e, t, n, a, r, i, c) {
        "ngInject";
        var s = o.caTypes.ATTRIBUTES
          , l = o.caTypes.DEVICE_TYPES
          , u = c.Quality;
        return function(c) {
            var d = Object.assign({
                pid: e.getProperty(c, "Pid"),
                goType: n.goType.Episode,
                itemType: n.itemType.Episode,
                name: e.getProperty(c, "Title"),
                title: e.getProperty(c, "Title"),
                distributor: e.getProperty(c, "Distributor"),
                description: e.getProperty(c, "Description"),
                commercializationType: e.getProperty(c, "CommercializationType"),
                licenseEnd: e.getProperty(c, "AvailableUntil", -1),
                episodeNumber: e.getProperty(c, "EpisodeNumber"),
                seasonNumber: e.getProperty(c, "SeasonNumber"),
                seasonId: e.getProperty(c, "SeasonId"),
                seriesId: e.getProperty(c, "SeriesId"),
                duration: e.getProperty(c, "Duration"),
                actorPids: e.getDeepProperty(c, "Relations.ActorPids", []),
                directorPids: e.getDeepProperty(c, "Relations.DirectorPids", []),
                subscriptions: function(t) {
                    return e.getDeepProperty(t, "Relations.ProductDependenciesPids", []).map(function(e) {
                        return o.caUtils.getId(e)
                    })
                }(c),
                ageRating: function(t) {
                    var n = e.getProperty(t, "AgeRatingPid");
                    if (!n)
                        return null;
                    var r = o.caUtils.getId(n)
                      , c = (a.get("AgeRatings") || []).find(function(e) {
                        return e.ID === r
                    });
                    return c ? i(c) : null
                }(c),
                year: e.getProperty(c, "Year"),
                audios: e.getProperty(c, "Audios", []),
                producerName: e.getProperty(c, "ProducerName"),
                closingCreditsStartTime: e.getProperty(c, "ClosingCreditsStartTime")
            }, t(c));
            return d.id = o.caUtils.getId(d.pid),
            d.productId = d.id,
            r.setCommercializationFlags(d),
            d.maxQuality = function(e) {
                var t = o.caUtils.getAttribute(e, s.DEVICE_TYPES_QUALITIES) || []
                  , n = (C()(t) ? t : [t]).filter(function(e) {
                    return e.indexOf(l.PC) >= 0
                }).map(function(e) {
                    return e.replace("".concat(l.PC, "-"), "")
                })[0];
                return n ? u[n] : u.Unknown
            }(c),
            d
        }
    }
    function te(e, t) {
        "ngInject";
        return function(n) {
            var a = {
                pid: e.getProperty(n, "Pid"),
                title: e.getProperty(n, "Title", ""),
                titleInMenu: e.getProperty(n, "TitleInMenu", ""),
                parentChannelId: e.getProperty(n, "ParentChannelId"),
                extensionType: e.getProperty(n, "ExtensionType", -1),
                order: e.getProperty(n, "ContentOrder"),
                customUxrPage: e.getProperty(n, "UxReferencePage")
            };
            return a.id = o.caUtils.getId(a.pid),
            a.isAdult = !1,
            a.goType = t.goType.VodChannel,
            a.itemType = e.getItemTypeFromGoType(a.goType),
            a.productId = a.id,
            a.name = a.title,
            a.isExtension = a.extensionType > 0,
            a.isPersonalExtension = a.isExtension && a.extensionType === o.caTypes.EXTENSION_TYPE.PersonalContent,
            a.titleInMenu = a.titleInMenu || a.title,
            a.isCatchup = !1,
            a.isRootCatchup = !1,
            a.isRootCatchupChildren = !1,
            a.hasChildren = !1,
            a.items = [],
            a
        }
    }
    function ne(e) {
        "ngInject";
        return function(t) {
            var n = {
                pid: e.getProperty(t, "Pid", -1),
                name: e.getProperty(t, "Title", "")
            };
            return n.id = o.caUtils.getId(n.pid),
            n
        }
    }
    function ae(e, t, n, a) {
        "ngInject";
        return function(r) {
            var i = Object.assign({
                callLetter: e.getProperty(r, "CallLetter", e.getProperty(r, "ChannelName")),
                startTime: e.getProperty(r, "Start", -1),
                endTime: e.getProperty(r, "End", -1),
                recordingChannelId: parseInt(e.getProperty(r, "EpgChannelId", -1), 10),
                liveChannelId: parseInt(e.getProperty(r, "ChannelId", -1), 10),
                epgProgramId: parseInt(e.getProperty(r, "ProgramId", -1), 10)
            }, t(r), a(r));
            return i.catalogItemType = o.caTypes.CONTENT_TYPES.LIVE_SCHEDULE,
            i.isAirProgram = function(e) {
                var t = n.getTime();
                return e.startTime <= t && e.endTime >= t
            }(i),
            i
        }
    }
    function re(e, t, n, a, r, i) {
        "ngInject";
        var c = t.getLogger("MODEL", "goModelCaLiveChannel")
          , s = o.caTypes.ATTRIBUTES
          , l = s.REQUIRES_PIN
          , u = "".concat(o.caTypes.DEVICE_TYPES.PC, "_")
          , d = u + r.PlaybackType.PlaybackRight
          , g = u + r.PlaybackType.NonPlayback
          , p = "".concat(u, "1")
          , m = i.go.uniapi.config.deviceType.PCPlayback;
        function f(t, n) {
            var a = !1
              , r = e.getDeepProperty(t, ["Attributes", n].join("."), []);
            return -1 !== r.indexOf(d) ? a = !0 : -1 === r.indexOf(g) && c.warning("cannot fetch isPlayback property"),
            a
        }
        function h(t) {
            var n = e.getDeepProperty(t, "Attributes.ca_channelmapnumber", []);
            return new Map(n.map(function(e) {
                return e.split("_").map(function(e) {
                    return parseInt(e)
                })
            }))
        }
        return function(t) {
            var i = Object.assign({
                name: e.getProperty(t, "Name", ""),
                channelNumber: e.getProperty(t, "ChannelNumber", -1),
                dvr: e.getProperty(t, "Dvr"),
                recordingChannelId: e.getProperty(t, "EpgLiveChannelReferenceId", -1),
                channelMaps: function(e) {
                    return Array.from(h(e).keys()).map(function(e) {
                        return parseInt(e)
                    })
                }(t),
                channelMapNumber: h(t),
                callLetter: e.getProperty(t, "CallLetter", ""),
                urlList: [],
                pid: e.getProperty(t, "Pid"),
                isAdult: o.caUtils.getAttribute(t, l),
                isPlayback: f(t, s.DEVICE_TYPES_IS_PLAYBACK),
                isPvrPlayback: f(t, s.DEVICE_TYPES_IS_PVR_PLAYBACK),
                subscriptions: e.pidsArrayToIdsArray(e.getDeepProperty(t, "Relations.ProductDependenciesPids", []), [o.caTypes.CONTENT_TYPES.SUBSCRIPTION]),
                mediaPids: e.getDeepProperty(t, "Relations.MediaPids", []),
                l7dProviderId: function(t) {
                    var n = e.getProperty(t, "ProviderChannel", "")
                      , a = e.getProperty(t, "LXDChannel", "");
                    return n || a
                }(t),
                maxQuality: function(t) {
                    var n = e.getDeepProperty(t, "Attributes.ca_devicetypes_qualities", []).filter(function(e) {
                        return e.indexOf(o.caTypes.DEVICE_TYPES.PC) >= 0
                    }).map(function(e) {
                        return e.replace("".concat(o.caTypes.DEVICE_TYPES.PC, "-"), "")
                    })[0];
                    return n ? r.Quality[n] : r.Quality.Unknown
                }(t),
                defaultLanguagesOrder: e.getProperty(t, "DefaultLanguageOrders", ""),
                isAdvancedCDNServices: e.getProperty(t, "AdvancedCDNServices"),
                isCpvrManageable: function(e) {
                    return (o.caUtils.getAttribute(e, s.DEVICE_TYPES_IS_PVR_MANAGEABLE) || []).includes(p)
                }(t)
            }, n(t));
            return i.id = o.caUtils.getId(i.pid),
            i.liveChannelId = i.id,
            i.goType = a.goType.LiveChannel,
            i.itemType = e.getItemTypeFromGoType(i.goType),
            i.title = i.name,
            i.isRestartTVEnabled = function(t) {
                return e.getDeepProperty(t, ["Attributes", s.DEVICE_TYPES_IS_START_OVER_ENABLED].join("."), []).some(function(e) {
                    return e === m
                })
            }(t),
            i
        }
    }
    function oe(e, t, n) {
        "ngInject";
        return function(a) {
            var r = Object.assign({
                pid: e.getProperty(a, "Pid", -1),
                programName: e.getProperty(a, "Title", ""),
                callLetter: e.getProperty(a, "CallLetter", ""),
                startTime: e.getProperty(a, "Start", -1),
                endTime: e.getProperty(a, "End", -1),
                epgNetworkDvr: e.getProperty(a, "EpgNetworkDvr"),
                epgProgramId: parseInt(e.getProperty(a, "ProgramId", -1), 10),
                epgSerieId: parseInt(e.getProperty(a, "EpgSerieId", -1), 10),
                liveChannelId: parseInt(e.getProperty(a, "ChannelId", -1), 10)
            }, t(a));
            return r.id = o.caUtils.getId(r.pid),
            r.goType = n.goType.LiveProgram,
            r.itemType = e.getItemTypeFromGoType(r.goType),
            r
        }
    }
    function ie(e, t, n) {
        "ngInject";
        var a = o.caTypes.QUALITY
          , r = o.caTypes.STREAMING_TYPE
          , i = o.caTypes.DRM_TYPE
          , c = o.caTypes.ATTRIBUTES
          , s = n("translate");
        return function(n) {
            var l = {
                pid: e.getProperty(n, "Pid"),
                name: e.getProperty(n, "Title"),
                url: t.getMediaUrl(n, "PublicUrl"),
                drmType: function(t) {
                    var n = e.getProperty(t, "DRMType", "Unknown");
                    return i[n] || i.Unknown
                }(n),
                playType: function(t) {
                    var n = e.getProperty(t, "StreamingType", "None");
                    return r[n] || r.None
                }(n),
                languageList: e.getProperty(n, "IsoLanguageList") || e.getProperty(n, "LanguageList", ""),
                quality: function(t) {
                    var n = e.getProperty(t, "Quality", "None");
                    return a[n] || a.None
                }(n),
                qualityName: e.getProperty(n, "Quality"),
                isAuto: o.caUtils.getAttribute(n, c.AUTO)
            };
            return l.id = o.caUtils.getId(l.pid),
            l.productId = l.id,
            l.text = s("common.quality.".concat(l.qualityName)),
            l
        }
    }
    function ce(e) {
        "ngInject";
        return function(t) {
            var n = {
                pid: e.getProperty(t, "Pid", -1),
                name: e.getProperty(t, "Title", ""),
                menuType: e.getProperty(t, "MenuType", 0),
                isPC: function(e) {
                    return o.caUtils.getAttribute(e, "ca_deviceTypes") === "".concat(o.caTypes.DEVICE_TYPES.PC)
                }(t),
                childPids: e.getDeepProperty(t, "Relations.ChildPids", [])
            };
            return n.id = o.caUtils.getId(n.pid),
            n
        }
    }
    q.$inject = ["goModelGoType", "goCnstEnumerated", "goModelSeason", "goModelEpisode", "goModelMovie"],
    Y.$inject = ["goSvcUtils", "goModelImages"],
    z.$inject = ["goModelCaLive", "goModelCaVod"],
    Q.$inject = ["goSvcUtils", "goModelImages", "goCnstEnumerated"],
    K.$inject = ["goSvcUtils", "goModelGoType", "goCnstEnumerated"],
    X.$inject = ["goSvcUtils", "goModelGoType", "goCnstEnumerated"],
    J.$inject = ["goSvcUniapiSettings", "goModelAgeRating", "goSvcUtils", "goCnstEnumerated"],
    Z.$inject = ["$filter", "goSvcUtils", "goModelGoType", "goModelImages", "goCnstEnumerated"],
    ee.$inject = ["goSvcUtils", "goModelImages", "goCnstEnumerated", "goSvcUniapiSettings", "goSvcCommercialSegmentation", "goModelAgeRating", "uaConstants"],
    te.$inject = ["goSvcUtils", "goCnstEnumerated"],
    ne.$inject = ["goSvcUtils"],
    ae.$inject = ["goSvcUtils", "goModelCaContent", "goSvcTime", "goModelImages"],
    re.$inject = ["goSvcUtils", "goSvcLogger", "goModelImages", "goCnstEnumerated", "uaConstants", "goCnstConfig"],
    oe.$inject = ["goSvcUtils", "goModelImages", "goCnstEnumerated"],
    ie.$inject = ["goSvcUtils", "goSvcUtilsModel", "$filter"],
    ce.$inject = ["goSvcUtils"];
    var se = n(4);
    function le(e, t) {
        "ngInject";
        var n = t.RecurrenceType
          , a = t.UserType;
        return function(r) {
            var i = function(e) {
                return se.isDefined(e.Relation) ? e.Content : e
            }(r)
              , c = {
                pid: e.getProperty(i, "Pid", -1),
                value: e.getProperty(i, "PricingModelPrice", -1),
                isRecurring: e.getProperty(i, "IsRecurring"),
                quality: e.getProperty(i, "Quality"),
                recurrenceType: n[e.getProperty(i, "RecurrenceType")] || n.Unknown,
                recurrenceDays: e.getProperty(i, "RecurrenceDays", 0),
                rentalPeriod: e.getProperty(i, "RecurrenceType", ""),
                userType: function(e) {
                    var t = o.caUtils.getAttribute(e, o.caTypes.ATTRIBUTES.USER_TYPES);
                    return a[t] || a.Unknown
                }(i)
            };
            return c.id = o.caUtils.getId(c.pid),
            c.recurrenceTypeId = t.RecurrenceType[c.recurrenceType],
            c
        }
    }
    function ue(e, t) {
        "ngInject";
        return function(n) {
            var a = {
                pid: e.getProperty(n, "Pid", -1),
                name: e.getProperty(n, "Title", ""),
                images: t(n)
            };
            return a.id = o.caUtils.getId(a.pid),
            a
        }
    }
    function de(e, t, n, a, r) {
        "ngInject";
        return function(i) {
            var c = Object.assign({
                name: e.getProperty(i, "Title", ""),
                pid: e.getProperty(i, "Pid"),
                id: o.caUtils.getId(e.getProperty(i, "Pid")),
                duration: e.getProperty(i, "Duration"),
                liveChannelId: parseInt(e.getProperty(i, "ChannelId", -1), 10),
                productId: o.caUtils.getId(e.getProperty(i, "Pid")),
                commercializationType: e.getProperty(i, "CommercializationType"),
                goType: t(e.getProperty(i, "Pid"), r.goSource.pid),
                subscriptions: e.pidsArrayToIdsArray(e.getDeepProperty(i, "Relations.ProductDependenciesPids", []), [o.caTypes.CONTENT_TYPES.SUBSCRIPTION]),
                trackId: e.getProperty(i, "TrackId"),
                genrePids: e.getDeepProperty(i, "Relations.GenrePids", []),
                providerPids: e.getDeepProperty(i, "Relations.ProviderPids", []),
                genres: []
            }, a(i));
            return n.setCommercializationFlags(c),
            c.itemType = e.getItemTypeFromGoType(c.goType),
            c
        }
    }
    function ge(e, t, n) {
        "ngInject";
        var a = o.caTypes.RELATIONS
          , r = a.ACTOR
          , i = a.DIRECTOR
          , c = a.MEDIA
          , s = a.SUBTITLE
          , l = a.GENRE;
        return function(a) {
            var u, d = o.caUtils.getType(n.getProperty(a, "Relation")), g = a.Content;
            switch (d) {
            case c:
                u = e(g);
                break;
            case s:
                u = t(g);
                break;
            case i:
            case r:
            case l:
            default:
                u = function(e) {
                    return {
                        pid: n.getProperty(e, "Pid"),
                        name: n.getProperty(e, "Title")
                    }
                }(g)
            }
            return u && (u.sourcePid = n.getProperty(a, "SourcePid"),
            u.relationType = d),
            u || a
        }
    }
    function pe(e, t, n, a) {
        "ngInject";
        var r = o.caTypes.ATTRIBUTES.PROGRAM_TYPE_ID;
        return function(i) {
            var c = Object.assign({
                pid: e.getProperty(i, "Pid", -1),
                channelName: e.getProperty(i, "ChannelName"),
                endTime: e.getProperty(i, "End", -1),
                startTime: e.getProperty(i, "Start", -1),
                recordingChannelId: parseInt(e.getProperty(i, "EpgChannelId", -1), 10),
                epgProgramId: o.caUtils.getId(e.getProperty(i, "LiveProgramPid", -1)),
                epgNetworkDvr: e.getProperty(i, "EpgNetworkDvr", -1),
                epgSerieId: o.caUtils.getId(e.getProperty(i, "EpgSerieId", -1)),
                liveChannelId: o.caUtils.getId(e.getProperty(i, "LiveChannelPid", -1)),
                programName: e.getProperty(i, "Title", ""),
                name: e.getProperty(i, "Title"),
                genrePids: e.getDeepProperty(i, "Relations.GenrePids", []),
                programTypeId: o.caUtils.getAttribute(i, r),
                trackId: e.getProperty(i, "TrackId")
            }, n(i));
            return c.id = o.caUtils.getId(c.pid),
            c.callLetter = e.getProperty(i, "CallLetter") || c.channelName,
            c.catalogItemType = o.caTypes.CONTENT_TYPES.LIVE_PROGRAM,
            c.productId = c.id,
            c.movieId = c.id,
            c.goType = a.goType.LiveProgram,
            c.itemType = e.getItemTypeFromGoType(c.goType),
            c.isAirProgram = function(e) {
                var n = t.getTime();
                return e.startTime <= n && e.endTime >= n
            }(c),
            c
        }
    }
    function me(e, t, n) {
        "ngInject";
        var a = o.caTypes.ATTRIBUTES
          , r = o.caTypes.DEVICE_TYPES.PC;
        return function(i) {
            var c = {
                pid: e.getProperty(i, "Pid"),
                seasonNumber: e.getProperty(i, "SeasonNumber"),
                name: e.getProperty(i, "Title"),
                episodes: e.getDeepProperty(i, "Relations.EpisodePids", []),
                commercializationType: e.getProperty(i, "CommercializationType"),
                childrenCount: e.getProperty(i, "ChildrenCount", 0),
                licenseEnd: e.getProperty(i, "AvailableUntil", -1),
                trailerIds: e.getDeepProperty(i, "Relations.MediaPids", []).map(o.caUtils.getId)
            };
            return c.id = o.caUtils.getId(c.pid),
            c.productId = c.id,
            c.goType = t.goType.Season,
            c.itemType = e.getItemTypeFromGoType(c.goType),
            n.setCommercializationFlags(c),
            c.availableForThisDeviceQualities = function(e) {
                var t = o.caUtils.getAttribute(e, a.DEVICE_TYPES_QUALITIES) || [];
                return L()(t) && (t = [t]),
                t.filter(function(e) {
                    return 0 === e.indexOf(r)
                }).length
            }(i),
            c
        }
    }
    function fe(e, t, n, a, r, i) {
        "ngInject";
        var c = o.caTypes.CONTENT_TYPES
          , s = c.PERSON
          , l = c.GENRE
          , u = c.SERIE
          , d = o.caTypes.ATTRIBUTES.REQUIRES_PIN;
        return function(c) {
            var g, p = o.caUtils.getType(e.getProperty(c, "Pid"));
            switch (p) {
            case u:
                g = function(c) {
                    var s = Object.assign({
                        commercializationType: e.getProperty(c, "CommercializationType", ""),
                        pid: e.getProperty(c, "Pid"),
                        name: e.getProperty(c, "Title"),
                        description: e.getProperty(c, "Description", ""),
                        distributor: e.getProperty(c, "Distributor"),
                        shortDescription: e.getProperty(c, "ShortDescription", ""),
                        subtitles: [],
                        actorPids: e.getDeepProperty(c, "Relations.ActorPids", []),
                        directorPids: e.getDeepProperty(c, "Relations.DirectorPids", []),
                        genrePids: e.getDeepProperty(c, "Relations.GenrePids", []),
                        providerPids: e.getDeepProperty(c, "Relations.ProviderPids", []),
                        playableMedias: [],
                        ageRating: function(t) {
                            var a = o.caUtils.getId(e.getProperty(t, "AgeRatingPid", 0))
                              , i = n.get("AgeRatings") || [];
                            return r(i.find(function(e) {
                                return e.ID === a
                            }))
                        }(c),
                        audios: e.getProperty(c, "Audios", []),
                        duration: e.getProperty(c, "Duration"),
                        year: e.getProperty(c, "Year"),
                        subscriptions: function(t) {
                            return e.getDeepProperty(t, "Relations.ProductDependenciesPids", []).map(function(e) {
                                return o.caUtils.getId(e)
                            })
                        }(c),
                        childrenCount: e.getProperty(c, "ChildrenCount"),
                        goType: i.goType.Serie,
                        producerName: e.getProperty(c, "ProducerName")
                    }, t(c));
                    return a.setCommercializationFlags(s),
                    s.id = o.caUtils.getId(s.pid),
                    s.isAdult = o.caUtils.getAttribute(c, d),
                    s.productId = s.id,
                    s.itemType = e.getItemTypeFromGoType(s.goType),
                    s
                }(c);
                break;
            case s:
            case l:
            default:
                g = function(t, n) {
                    return {
                        pid: e.getProperty(t, "Pid"),
                        name: e.getProperty(t, "Title"),
                        type: n
                    }
                }(c, p)
            }
            return g || c
        }
    }
    le.$inject = ["goSvcUtils", "uaConstants"],
    ue.$inject = ["goSvcUtils", "goModelImages"],
    de.$inject = ["goSvcUtils", "goModelGoType", "goSvcCommercialSegmentation", "goModelImages", "goCnstEnumerated"],
    ge.$inject = ["goModelCaMedia", "goModelCaSubtitle", "goSvcUtils"],
    pe.$inject = ["goSvcUtils", "goSvcTime", "goModelImages", "goCnstEnumerated"],
    me.$inject = ["goSvcUtils", "goCnstEnumerated", "goSvcCommercialSegmentation"],
    fe.$inject = ["goSvcUtils", "goModelImages", "goSvcUniapiSettings", "goSvcCommercialSegmentation", "goModelAgeRating", "goCnstEnumerated"];
    var he = n(40);
    function ve(e, t, n, a, r, i) {
        "ngInject";
        var c = o.caTypes.ATTRIBUTES
          , s = i.PurchaseStatus
          , l = i.SubscriptionPurchaseType
          , u = i.UserType;
        return function(i) {
            var d, g = Object.assign({
                pid: e.getProperty(i, "Pid"),
                incompatible: o.caUtils.getAttribute(i, c.INCOMPATIBLE) || [],
                isAdult: e.getProperty(i, "RequiresPin"),
                isOtt: e.getProperty(i, "IsOtt"),
                title: e.getProperty(i, "Title", ""),
                userTypes: o.caUtils.getAttribute(i, c.USER_TYPES),
                purchaseType: l[o.caUtils.getAttribute(i, c.PURCHASE_TYPE)] || l.Unknown,
                description: e.getProperty(i, "Description", ""),
                shortDescription: e.getProperty(i, "ShortDescription", ""),
                hasLiveChannels: o.caUtils.getAttribute(i, "ca_haslivechannel"),
                pricingModelPids: e.getDeepProperty(i, "Relations.PricingModelPids", []),
                isVisible: o.caUtils.getAttribute(i, "ca_isvisible"),
                uxReferenceLayout: e.getProperty(i, "UxReferenceLayout"),
                vodDefaultOrder: e.getProperty(i, "VodDefaultOrder"),
                url: "",
                userRight: {},
                pricingModels: [],
                isCompatible: !1,
                isNetflix: !1
            }, n(i));
            return g.subscriptionId = o.caUtils.getId(g.pid),
            g.id = o.caUtils.getId(g.pid),
            g.productId = g.id,
            g.goType = r.goType.Subscription,
            g.itemType = e.getItemTypeFromGoType(g.goType),
            g.isNetflix = g.id === a.getNetflixSubscriptionIdSync(),
            g.incompatible = (d = g.incompatible,
            (Object(he.isArray)(d) ? d : [d]).map(function(e) {
                return parseInt(e, 10)
            })),
            g.setPricingModels = function(e) {
                var t = this;
                t.pricingModels = e.filter(function(e) {
                    return -1 !== t.pricingModelPids.indexOf(e.pid)
                })
            }
            ,
            g.setUserRight = function(e) {
                this.userRight = e
            }
            ,
            g.setCompatible = function(e) {
                this.isCompatible = e
            }
            ,
            g.getPricingModelsByUserType = function() {
                return this.pricingModels.filter(function(e) {
                    return t.isAnonymousLoggedIn ? e.userType === u.Anonymous : t.profile.type === e.userType || e.userType === u.Both
                }).sort(function(e, t) {
                    return e.value - t.value
                })
            }
            ,
            g.isPurchasedFromDevice = function() {
                return 0 !== this.userRight.deviceTypeId && 402 !== this.userRight.deviceTypeId && 403 !== this.userRight.deviceTypeId
            }
            ,
            g.isCancelling = function() {
                return [s.Cancelling, s.ToBeCancelled, s.PendingOBCancellation].indexOf(this.userRight.purchaseStatusId) >= 0
            }
            ,
            g.isDirect = function() {
                return this.purchaseType === l.ApiOnly || this.purchaseType === l.Both
            }
            ,
            g.isOnlineChannel = function() {
                return this.purchaseType === l.ProvisioningOnly
            }
            ,
            g
        }
    }
    function ye(e) {
        "ngInject";
        return function(t) {
            var n = e.getProperty(t, "IsoLanguageCode") || e.getProperty(t, "LanguageCode", "")
              , a = {
                pid: e.getProperty(t, "Pid"),
                name: e.getProperty(t, "Title"),
                code: n,
                languageCode: n
            };
            return a.id = o.caUtils.getId(a.pid),
            a
        }
    }
    function Se(e, t, n, a) {
        "ngInject";
        return function(r) {
            var i = Object.assign({
                commercializationType: e.getProperty(r, "CommercializationType", ""),
                genrePids: e.getDeepProperty(r, "Relations.GenrePids", []),
                providerPids: e.getDeepProperty(r, "Relations.ProviderPids", []),
                distributor: e.getProperty(r, "Distributor", -1),
                releaseDate: e.getProperty(r, "ReleaseDate", -1),
                duration: e.getProperty(r, "Duration", -1)
            }, t(r), a(r));
            return i.catalogItemType = o.caUtils.getType(i.pid),
            i.subscriptions = e.pidsArrayToIdsArray(e.getDeepProperty(r, "Relations.ProductDependenciesPids", []), [o.caTypes.CONTENT_TYPES.SUBSCRIPTION]),
            n.setCommercializationFlags(i),
            i
        }
    }
    function be(e) {
        "ngInject";
        return function(t) {
            return {
                pan: e.getProperty(t, "Pan", ""),
                statusBank: e.getProperty(t, "StatusBank", "")
            }
        }
    }
    function Ee(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                deviceId: e.getProperty(t, "DeviceId", -1),
                deviceType: e.getProperty(t, "DeviceTypeId", -1),
                friendlyName: e.getProperty(t, "FriendlyName", ""),
                creationDate: e.getProperty(t, "CreationDate", -1),
                enabled: !!e.getProperty(t, "Enabled", 0),
                deviceExternalId: e.getProperty(t, "DeviceExternalId", -1),
                master: e.getProperty(t, "Master")
            }
        }
    }
    function Te(e, t, n, a, r) {
        "ngInject";
        return function(i) {
            var c = Object.assign(t(i), {
                episodeNumber: e.getProperty(i, "OrderEpisode", -1),
                seasonId: e.getProperty(i, "SeasonId", -1),
                seriesId: e.getProperty(i, "SeriesId", -1),
                qualityRented: e.getDeepProperty(i, "CanWatch.PricingModel.Quality", n.Quality.Unknown),
                seasonNumber: e.getProperty(i, "SeasonNumber", -1),
                seriesName: e.getProperty(i, "SeriesName")
            })
              , s = a.getLogger("MODEL", "goModelEpisode");
            return c.goType !== r.goType.Episode && s.warning("Casting a content like a episode, but content with id ".concat(c.id, " has goType ").concat(c.goType)),
            c.playableMedias = c.medias.filter(function(e) {
                return e.quality >= c.qualityRented
            }),
            c.pid = o.caUtils.toPid(o.caTypes.CONTENT_TYPES.MOVIE, c.id),
            c
        }
    }
    function Ce(e) {
        "ngInject";
        return function(t) {
            return {
                value: e.getProperty(t, "Token")
            }
        }
    }
    function Pe(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                name: e.getProperty(t, "Title", -1)
            }
        }
    }
    function Ie(e, t, n) {
        "ngInject";
        var a = t.goType
          , r = t.goSource
          , i = n.MovieType
          , c = n.ProductType
          , s = n.CatalogItemType
          , l = o.caTypes.CONTENT_TYPES;
        function u(t) {
            var n, r = e.getDeepProperty(t, "CanWatch.ProductTypeId", -1), o = {};
            return -1 === r ? n = function(e) {
                var t = {};
                return t[i.Movie] = a.Movie,
                t[i.Series] = a.Serie,
                t[i.Season] = a.Season,
                t[i.Episode] = a.Episode,
                t[e] || a.Unknown
            }(e.getProperty(t, "Type", 0)) : (o[c.Movie] = t.SeriesId ? a.Episode : a.Movie,
            o[c.Serie] = a.Serie,
            o[c.Season] = a.Season,
            o[c.Subscription] = a.Subscription,
            o[c.LiveChannel] = a.LiveChannel,
            o[c.LiveProgram] = a.LiveProgram,
            n = o[r] || a.Unknown),
            n
        }
        return function(t, n) {
            var i, c, d;
            if (t)
                switch (n) {
                case r.productModel:
                    i = u(t);
                    break;
                case r.catalogModel:
                    c = e.getProperty(t, "CatalogItemType", 0),
                    (d = {})[s.Movie] = a.Movie,
                    d[s.Serie] = a.Serie,
                    d[s.Season] = a.Season,
                    d[s.Episode] = a.Episode,
                    d[s.Subscription] = a.Subscription,
                    d[s.LiveSubscription] = a.Subscription,
                    d[s.VodSubscription] = a.Subscription,
                    d[s.LiveProgram] = a.LiveProgram,
                    d[s.LiveChannel] = a.LiveChannel,
                    d[s.VodChannel] = a.VodChannel,
                    i = d[c] || a.Unknown;
                    break;
                case r.pid:
                    i = function(e) {
                        var t = {};
                        return t[l.MOVIE] = a.Movie,
                        t[l.SERIE] = a.Serie,
                        t[l.SEASON] = a.Season,
                        t[l.EPISODE] = a.Episode,
                        t[l.SUBSCRIPTION] = a.Subscription,
                        t[l.LIVE_PROGRAM] = a.LiveProgram,
                        t[l.LIVE_CHANNEL] = a.LiveChannel,
                        t[l.CHANNEL] = a.VodChannel,
                        t[l.LIVE_SCHEDULE] = a.LiveProgram,
                        t[o.caUtils.getType(e)] || a.Unknown
                    }(t);
                    break;
                default:
                    i = u(a.Unknown)
                }
            return i
        }
    }
    function Ae(e, t, n, a) {
        "ngInject";
        var r = a.ImageType
          , i = n.imageSizes
          , c = o.caTypes.DEVICE_TYPES
          , s = e("goFltrSpotlight");
        return function(e) {
            return function(e) {
                var n = {};
                return D()(i, function(a, r) {
                    var i, l = o.caUtils.getImage(e, (i = r).charAt(0).toUpperCase() + i.slice(1), c.PC), u = t.getProperty(l, "Url");
                    u && (n["".concat(r, "Original")] = u,
                    D()(a, function(e, t) {
                        var a = s(u, e.width, e.height, e.options);
                        n[t] = a
                    }))
                }),
                n
            }(e.ResizableImages ? function(e) {
                var t = e.ResizableImages || []
                  , n = {};
                return D()(r, function(e, a) {
                    n[a] = function(e, t) {
                        return e.filter(function(e) {
                            var n = e.Type;
                            return n === t
                        }).map(function(e) {
                            return Object.assign(e, {
                                ImageClass: 0
                            })
                        })
                    }(t, r[a])
                }),
                Object.assign(e, {
                    Images: n
                })
            }(e) : e)
        }
    }
    function Me(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "ID"),
                name: e.getProperty(t, "Title"),
                value: e.getProperty(t, "Value")
            }
        }
    }
    function Ne(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                name: e.getProperty(t, "Name", ""),
                description: e.getProperty(t, "Description", "")
            }
        }
    }
    function we(e, t) {
        "ngInject";
        var n = o.caTypes.DRM_TYPE
          , a = o.caTypes.STREAMING_TYPE
          , r = o.caTypes.QUALITY
          , i = o.caTypes.ATTRIBUTES;
        return function(c) {
            var s = {
                pid: e.getProperty(c, "Pid"),
                title: e.getProperty(c, "Title", ""),
                quality: r[e.getProperty(c, "Quality", "None")],
                qualityName: e.getProperty(c, "Quality"),
                playType: a[e.getProperty(c, "StreamingType", "None")],
                drmType: n[e.getProperty(c, "DRMType", "Unknown")],
                url: t.getMediaUrl(c, "PublicUrl"),
                isAuto: o.caUtils.getAttribute(c, i.AUTO)
            };
            return s.id = o.caUtils.getId(s.pid),
            s.name = s.title,
            s
        }
    }
    function Le(e, t) {
        "ngInject";
        var n = t.Quality;
        return function(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                drmType: e.getProperty(t, "DRM", -1),
                quality: e.getProperty(t, "Quality", -1),
                playType: e.getProperty(t, "PlayTypeValue", -1),
                qualityName: function(t) {
                    return e.swap(n)[t] || ""
                }(e.getProperty(t, "Quality")),
                type: e.getProperty(t, "Type", 0),
                languages: e.getProperty(t, "Languages", []),
                languageList: function(t) {
                    return e.getProperty(t, "Languages", []).map(function(e) {
                        var t = e.Code;
                        return Object(u.b)(t)
                    }).join(",")
                }(t),
                isAuto: !1
            }
        }
    }
    function $e(e, t, n, a, r) {
        "ngInject";
        return function(i) {
            var c = Object.assign(t(i), {
                movieId: e.getProperty(i, "ID", -1),
                rentedIn: e.getDeepProperty(i, "CanWatch.StartDate", 0),
                movieType: e.getProperty(i, "Type", n.MovieType.Unknown),
                qualityRented: e.getDeepProperty(i, "CanWatch.PricingModel.Quality", n.Quality.Unknown)
            })
              , s = a.getLogger("MODEL", "goModelMovie");
            return c.goType !== r.goType.Movie && s.warning("Casting a content like a movie, but content with id ".concat(c.id, " has goType ").concat(c.goType)),
            c.isFavorite = c._isTaggedWith(c, n.TagType.Favorite),
            c.playableMedias = c.medias.filter(function(e) {
                return e.quality >= c.qualityRented
            }),
            c.pid = o.caUtils.toPid(o.caTypes.CONTENT_TYPES.MOVIE, c.id),
            c
        }
    }
    function Re(e) {
        return function(t) {
            return {
                token: e.getProperty(t, "Token"),
                isCarrierBilling: "NetflixCarrierBilling" === e.getProperty(t, "MoP", "NetflixCarrierBilling")
            }
        }
    }
    function De(e) {
        "ngInject";
        return function(t) {
            return {
                action: e.getProperty(t, "Action"),
                url: e.getProperty(t, "Url")
            }
        }
    }
    function _e(e) {
        "ngInject";
        return function(t) {
            return {
                episodeId: e.getProperty(t, "ID", -1),
                seasonId: e.getProperty(t, "SeasonId", -1)
            }
        }
    }
    function Oe(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                name: e.getProperty(t, "Title", ""),
                type: e.getProperty(t, "PaymentType", -1)
            }
        }
    }
    function Ue(e, t) {
        "ngInject";
        return function(n) {
            var a = function(t) {
                var n = e.getProperty(t, "MediaInfo", "");
                return n && L()(n) ? JSON.parse(atob(n)) : n
            }(n)
              , r = {
                id: e.getProperty(a, "MediaId"),
                url: t.getMediaUrl(n, "Url"),
                concurrenceToken: e.getProperty(n, "ConcurrenceToken", ""),
                resume: function(t) {
                    var n = e.getProperty(t, "Resume");
                    return {
                        time: e.getProperty(n, "Time", 0),
                        subtitleId: e.getProperty(n, "SubtitleId", 0),
                        audioCode: e.getProperty(n, "AudioCode", null),
                        userId: e.getProperty(n, "UserId", 0)
                    }
                }(n),
                laUrl: e.getProperty(n, "LA_URL"),
                customData: e.getProperty(n, "CustomData"),
                heartbeatId: -1,
                text: "",
                qualityName: "",
                quality: -1,
                mediaQualityId: -1,
                sortingPosition: -1,
                languageList: "",
                playType: -1,
                setHeartbeatId: function(e) {
                    r.heartbeatId = e
                },
                setText: function(e) {
                    r.text = e
                },
                setQualityName: function(e) {
                    r.qualityName = e
                },
                setQuality: function(e) {
                    r.quality = e
                },
                setMediaQualityId: function(e) {
                    r.mediaQualityId = e
                },
                setLanguageList: function(e) {
                    r.languageList = e
                },
                setPlayType: function(e) {
                    r.playType = e
                }
            };
            return r
        }
    }
    function ke(e, t) {
        "ngInject";
        var n = t.RecurrenceType;
        return function(a) {
            return {
                id: e.getProperty(a, "ID", -1),
                value: e.getProperty(a, "Price", -1),
                rentalPeriod: function(t) {
                    return e.swap(n)[t] || ""
                }(e.getProperty(a, "RecurrenceType")),
                isRecurring: e.getProperty(a, "Isrecurring"),
                quality: e.getProperty(a, "Quality"),
                qualityName: function(n) {
                    return e.swap(t.Quality)[n] || ""
                }(e.getProperty(a, "Quality")),
                recurrenceType: e.getProperty(a, "RecurrenceType", n.Unknown),
                recurrenceDays: e.getProperty(a, "RecurrenceDays", 0)
            }
        }
    }
    ve.$inject = ["goSvcUtils", "goSvcUserStatus", "goModelImages", "goSvcUniapiParameter", "goCnstEnumerated", "uaConstants"],
    ye.$inject = ["goSvcUtils"],
    Se.$inject = ["goSvcUtils", "goModelCaContent", "goSvcCommercialSegmentation", "goModelImages"],
    be.$inject = ["goSvcUtils"],
    Ee.$inject = ["goSvcUtils"],
    Te.$inject = ["goSvcUtils", "goModelProduct", "uaConstants", "goSvcLogger", "goCnstEnumerated"],
    Ce.$inject = ["goSvcUtils"],
    Pe.$inject = ["goSvcUtils"],
    Ie.$inject = ["goSvcUtils", "goCnstEnumerated", "uaConstants"],
    Ae.$inject = ["$filter", "goSvcUtils", "goCnstEnumerated", "uaConstants"],
    Me.$inject = ["goSvcUtils"],
    Ne.$inject = ["goSvcUtils"],
    we.$inject = ["goSvcUtils", "goMdlPlayerSvcMedias"],
    Le.$inject = ["goSvcUtils", "uaConstants"],
    $e.$inject = ["goSvcUtils", "goModelProduct", "uaConstants", "goSvcLogger", "goCnstEnumerated"],
    Re.$inject = ["goSvcUtils"],
    De.$inject = ["goSvcUtils"],
    _e.$inject = ["goSvcUtils"],
    Oe.$inject = ["goSvcUtils"],
    Ue.$inject = ["goSvcUtils", "goMdlPlayerSvcMedias"],
    ke.$inject = ["goSvcUtils", "uaConstants"];
    var xe = n(24)
      , je = n.n(xe)
      , Be = n(2)
      , Fe = n.n(Be);
    function Ve(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        "ngInject";
        var p = u.Role
          , m = u.MovieAccessReason
          , f = u.PlayType;
        function h(e, t) {
            return e.filter(function(e) {
                return e.Role === t
            }).map(a)
        }
        function v(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                name: e.getDeepProperty(t, "Language.Title", ""),
                code: e.getDeepProperty(t, "Language.Code", ""),
                languageCode: e.getDeepProperty(t, "Language.Code", ""),
                url: e.getProperty(t, "URL", "")
            }
        }
        function y(e, t) {
            return function() {
                return e.tags.some(function(e) {
                    return e.type === t && e.value
                })
            }
        }
        function S(e) {
            e < 0 && (e = 0);
            var t = new Date(1e3 * e)
              , n = t.getMonth() + 1;
            return "".concat(t.getFullYear(), "-").concat(n, "-").concat(t.getDate(), "T00:00:00")
        }
        return function(a) {
            var b, E, T = Object.assign({
                id: e.getProperty(a, "ID", -1),
                productId: e.getProperty(a, "ID", -1),
                name: e.getProperty(a, "Title", ""),
                description: e.getProperty(a, "Description", ""),
                expirationDate: e.getDeepProperty(a, "CanWatch.ExpirationDate", -1),
                releaseDate: e.getProperty(a, "ReleaseDate", -1),
                ageRating: t(e.getProperty(a, "AgeRating", {})),
                genres: function(e) {
                    return (C()(e) ? e : (t = e,
                    [{
                        ID: -1,
                        Title: t
                    }])).map(n);
                    var t
                }(e.getProperty(a, "Genres", [])),
                _productType: function(t) {
                    var n = e.getDeepProperty(t, "CanWatch.ProductTypeId", -1);
                    return -1 === n && (n = e.toProductType(e.getProperty(t, "Type", -1))),
                    n
                }(a),
                duration: e.getProperty(a, "Duration", -1),
                actors: h(e.getProperty(a, "Staff", []), p.Actor),
                directors: h(e.getProperty(a, "Staff", []), p.Director),
                trailerIds: (E = e.getProperty(a, "Trailers", []),
                E.map(function(t) {
                    return e.getProperty(t, "ID")
                })),
                subtitles: e.getProperty(a, "Subtitles", []).map(v),
                closingCreditsStartTime: e.getProperty(a, "ClosingCreditsStartTime"),
                playbackAccess: e.getProperty(a, "PlaybackAccess", -1),
                commercializationType: e.toCommercializationType(e.getProperty(a, "CommercializationType", -1)),
                ybCommercializationType: e.getProperty(a, "CommercializationType", -1),
                subscriptions: e.stringToNumbersArray(e.getProperty(a, "Subscriptions", "")),
                year: e.getProperty(a, "Year", -1),
                ratingStars: e.getProperty(a, "Stars", -1),
                distributor: function(t) {
                    return {
                        title: e.getDeepProperty(t, "Distributor.Title", ""),
                        id: e.getDeepProperty(t, "Distributor.ID", "")
                    }
                }(a),
                producer: function(t) {
                    var n = e.getProperty(t, "Producer", {})
                      , a = e.getProperties(n, "ID", "Title")
                      , r = Fe()(a, 2)
                      , o = r[0]
                      , i = void 0 === o ? -1 : o
                      , c = r[1]
                      , l = void 0 === c ? "" : c;
                    return Object.assign({
                        id: i,
                        title: l
                    }, s(n))
                }(a),
                tags: e.getProperty(a, "Tags", []).map(r),
                movieAccessReason: e.getDeepProperty(a, "CanWatch.MovieAccessReason", u.MovieAccessReason.Unknown),
                canAcquire: e.getProperty(a, "CanAcquire", !1),
                goType: o(a, l.goSource.productModel),
                isAdult: e.getProperty(a, "RequiresPin"),
                availableForThisDeviceQualities: e.getProperty(a, "AFTDQualities", u.Quality.Unknown),
                isRecurring: e.getDeepProperty(a, "CanWatch.PricingModel.Isrecurring", !1),
                sourceProductId: e.getDeepProperty(a, "CanWatch.SourceProductId", 0),
                sourceProductType: e.getDeepProperty(a, "CanWatch.SourceProductType", 0),
                views: e.getProperty(a, "Views", 0),
                licenseStartISO: S(e.getProperty(a, "LicenseStart", 0)),
                licenseEnd: e.getProperty(a, "LicenseEnd", 0),
                licenseEndISO: S(e.getProperty(a, "LicenseEnd", 0)),
                transparentProvider: e.getProperty(a, "TransparentProvider"),
                defaultLanguagesOrder: e.getProperty(a, "DefaultLanguageOrders", "")
            }, s(a));
            c.setCommercializationFlags(T);
            var P = e.getProperty(a, "Medias", []).map(i);
            return T.isNetworkCATCHUP && !g.getUseVsppDashSync() && (P = P.filter(function(e) {
                return e.playType === f.SS
            })),
            T.medias = d.getFiltered(P, T.availableForThisDeviceQualities),
            T.audios = function(t) {
                var n = [];
                return t.forEach(function(e) {
                    return e.languages.forEach(function(e) {
                        var t = e.Title;
                        return n.push(t)
                    })
                }),
                n.filter(e.removeDuplicates)
            }(T.medias),
            T.audioCodes = function(t) {
                var n = [];
                return t.forEach(function(e) {
                    return e.languages.forEach(function(e) {
                        var t = e.IsoCode
                          , a = e.Code;
                        return n.push(t || a)
                    })
                }),
                n.filter(e.removeDuplicates)
            }(T.medias),
            T.canAccess = function(e) {
                return e.movieAccessReason > 0
            }(T),
            T.isFree = function(e) {
                return e.movieAccessReason === m.Free
            }(T),
            T.isRented = function(e) {
                return e.movieAccessReason === m.Free || e.expirationDate > 0 && !e.isRecurring
            }(T),
            T.isSubscribed = function(e) {
                return e.expirationDate > 0 && e.isRecurring
            }(T),
            T.canRent = function(e) {
                return (e.isTVOD || e.isSVOD) && e.expirationDate < 0 && e.canAcquire
            }(T),
            T.hasPlaybackRights = function(e) {
                return e.playbackAccess > 0 && (e.isSubscribed || e.isRented || e.isFree)
            }(T),
            T.isWatched = y(T, u.TagType.Watched),
            T.isCompleted = y(T, u.TagType.Completed),
            T.hasExpirationToWatch = function(e) {
                return e.expirationDate > 0 && !e.isRecurring && (e.movieAccessReason === m.Purchase || e.movieAccessReason === m.Rental) && !e.isNetworkCATCHUP
            }(T),
            T.subtitleCodes = (b = []).concat.apply(b, je()(T.subtitles.map(function(e) {
                return e.code
            }))),
            T.itemType = e.getItemTypeFromGoType(T.goType),
            T.resumeValue = 0,
            T._isTaggedWith = y,
            T
        }
    }
    function He(e, t) {
        "ngInject";
        return function(n) {
            var a = {
                id: t.getProperty(n, "Id", -1),
                channelId: t.getProperty(n, "ChannelId", -1),
                recordingChannelId: parseInt(t.getProperty(n, "ChannelReferenceId", -1), 10),
                channelName: t.getProperty(n, "ChannelName", ""),
                conflicted: t.getProperty(n, "Conflicted", !1),
                deleteTime: t.getProperty(n, "DeleteTime", 0),
                endTime: t.getProperty(n, "EndTime", 0),
                lastModified: t.getProperty(n, "LastModified", 0),
                parentId: t.getProperty(n, "ParentId", -1),
                programId: t.getProperty(n, "ProgramId", -1),
                programName: t.getProperty(n, "ProgramName", ""),
                recordingHierarchy: t.getProperty(n, "RecordingHierarchy", 0),
                recordingState: t.getProperty(n, "RecordingState", 0),
                scheduleId: t.getProperty(n, "ScheduleId", -1),
                seriesId: t.getProperty(n, "SeriesId", 0),
                startTime: t.getProperty(n, "StartTime", 0),
                type: t.getProperty(n, "Type", 1),
                isProtected: t.getProperty(n, "IsProtected", !1),
                ageRating: e({
                    Age: t.getProperty(n, "AgeRating", "")
                }),
                itemType: G.a.itemType.Recording,
                trackId: t.getProperty(n, "TrackId"),
                uxReference: t.getProperty(n, "UXReference")
            };
            return a.duration = a.endTime - a.startTime,
            a
        }
    }
    function Ge(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "ID", -1),
                title: e.getProperty(t, "Title", ""),
                type: e.getProperty(t, "Type", ""),
                values: e.getProperty(t, "Values", []),
                required: e.getProperty(t, "Required", !0),
                validationRegex: e.getProperty(t, "ValidationRegex", ""),
                field: e.getProperty(t, "Field", -1),
                position: e.getProperty(t, "Position", -1),
                validationMask: e.getProperty(t, "ValidationMask", ""),
                customFieldKey: e.getProperty(t, "CustomFieldKey", ""),
                canModify: e.getProperty(t, "CanModify", !1),
                parent: function(t) {
                    return {
                        parentId: e.getProperty(t, "ParentID", -1),
                        mandatory: e.getProperty(t, "Mandatory", !1),
                        visible: e.getProperty(t, "Visible", !1)
                    }
                }(e.getProperty(t, "Parent", [])),
                descriptionParent: e.getProperty(t, "DescriptionParent", ""),
                isBlocking: e.getProperty(t, "IsBlocking", !1),
                isBlockingMessage: e.getProperty(t, "IsBlockingMessage", ""),
                mandatory: e.getProperty(t, "Mandatory", !1),
                showKeyboard: e.getProperty(t, "ShowKeyboard", !1)
            }
        }
    }
    function We(e, t, n, a, r, o) {
        "ngInject";
        var i = o.goType;
        return function(c) {
            var s, l = e.getProperty(c, "Movie", {});
            switch (r(l, o.goSource.productModel)) {
            case i.Season:
                s = t(l);
                break;
            case i.Episode:
                s = n(l);
                break;
            default:
                s = a(l)
            }
            return s.rentedIn = e.getDeepProperty(l, "CanWatch.StartDate", 0),
            s
        }
    }
    function qe(e, t, n, a, r, i) {
        "ngInject";
        return function(c) {
            var s = Object.assign(t(c), {
                seriesId: e.getProperty(c, "SeriesId", -1),
                seasonNumber: e.getProperty(c, "OrderEpisode", -1),
                childrenCount: e.getProperty(c, "ChildrenCount", -1),
                trailers: function(e) {
                    return e.filter(function(e) {
                        return e.Type === a.ProductType.Movie
                    }).map(n).sort(function(e, t) {
                        return e.quality - t.quality
                    })
                }(e.getProperty(c, "Medias", [])),
                seriesName: e.getProperty(c, "SeriesName")
            })
              , l = r.getLogger("MODEL", "goModelSeason");
            return s.goType !== i.goType.Season && l.warning("Casting a content like a season, but content with id ".concat(s.id, " has goType ").concat(s.goType)),
            s.pid = o.caUtils.toPid(o.caTypes.CONTENT_TYPES.MOVIE, s.id),
            s
        }
    }
    function Ye(e, t, n, a, r) {
        "ngInject";
        return function(i) {
            var c = Object.assign(t(i), {
                seriesId: e.getProperty(i, "ID", -1),
                childrenCount: e.getProperty(i, "ChildrenCount", -1)
            })
              , s = a.getLogger("MODEL", "goModelSerie");
            return c.isFollowing = c._isTaggedWith(c, n.TagType.Follow),
            c.pid = o.caUtils.toPid(o.caTypes.CONTENT_TYPES.SERIE, c.id),
            c.goType !== r.goType.Serie && s.warning("Casting a content like a serie, but content with id ".concat(c.id, " has goType ").concat(c.goType)),
            c
        }
    }
    function ze(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getDeepProperty(t, "Person.ID"),
                name: e.getDeepProperty(t, "Person.Title")
            }
        }
    }
    function Qe(e) {
        "ngInject";
        return function(t) {
            return {
                type: e.getProperty(t, "TagType", e.getProperty(t, "Type", -1)),
                value: function(t) {
                    return JSON.parse(e.getProperty(t, "TagValue", e.getProperty(t, "Value")).toLowerCase())
                }(t),
                creationDate: e.getProperty(t, "CreationDate", -1)
            }
        }
    }
    function Ke(e, t, n, a, r, o, i) {
        "ngInject";
        return function(c) {
            var s = Object.assign({
                id: e.getProperty(c, "TaggedContentID", -1),
                productId: e.getDeepProperty(c, "TaggedContent.ID", -1),
                movieId: e.getDeepProperty(c, "TaggedContent.ID", -1),
                type: e.getDeepProperty(c, "TaggedContent.Type", ""),
                name: e.getDeepProperty(c, "TaggedContent.Title", ""),
                title: e.getDeepProperty(c, "TaggedContent.Title", ""),
                genre: e.getDeepProperty(c, "TaggedContent.Genres", []).map(t),
                resumeValue: e.getProperty(c, "ResumeValue"),
                duration: e.getDeepProperty(c, "TaggedContent.Duration"),
                seriesId: e.getDeepProperty(c, "TaggedContent.SeriesId"),
                seriesName: e.getDeepProperty(c, "TaggedContent.SeriesName"),
                episodeNumber: e.getDeepProperty(c, "TaggedContent.OrderEpisode", -1),
                seasonId: e.getDeepProperty(c, "TaggedContent.SeasonId", -1),
                seasonNumber: e.getDeepProperty(c, "TaggedContent.SeasonNumber", -1),
                tags: e.getProperty(c, "Tags", []).map(n),
                commercializationType: e.toCommercializationType(e.getDeepProperty(c, "TaggedContent.CommercializationType", -1)),
                subscriptions: e.stringToNumbersArray(e.getDeepProperty(c, "TaggedContent.Subscriptions", "")),
                isAdult: e.getDeepProperty(c, "TaggedContent.RequiresPin"),
                _productType: e.toProductType(e.getDeepProperty(c, "TaggedContent.Type", "")),
                goType: a(c.TaggedContent, i.goSource.productModel)
            }, o(c.TaggedContent));
            return r.setCommercializationFlags(s),
            s.itemType = e.getItemTypeFromGoType(s.goType),
            s
        }
    }
    function Xe(e, t) {
        "ngInject";
        var n = t.UserPinType
          , a = t.UserCreditCardStatus;
        function r(t, n) {
            return e.getProperty(t, "PinStatus", []).filter(function(e) {
                return e.Type === n
            }).map(function(e) {
                return {
                    enabled: e.Enabled,
                    firstUse: e.FirstUse
                }
            })[0]
        }
        return function(o) {
            return {
                id: e.getProperty(o, "ID", -1),
                firstName: e.getProperty(o, "FirstName", ""),
                lastName: e.getProperty(o, "LastName", ""),
                email: e.getProperty(o, "Email", ""),
                parentalPin: r(o, n.ParentalControl),
                purchasePin: r(o, n.PurchaseControl),
                minimumAgeRating: e.getProperty(o, "MinimumAgeRating", -1),
                timestamp: e.getProperty(o, "Timestamp", -1),
                dvrEnabled: e.getDeepProperty(o, "VideoServiceInfo.DvrEnabled"),
                creditCardStatus: e.getProperty(o, "CreditCardStatus", a.Unknown),
                mobileNumber: e.getProperty(o, "MobileNumber", ""),
                birthDate: e.getProperty(o, "BirthDate", 0),
                gender: e.getProperty(o, "Gender", t.Gender.Unknown),
                genderName: (i = e.getProperty(o, "Gender", t.Gender.Unknown),
                e.swap(t.Gender)[i]),
                customFields: function(t) {
                    return e.getProperty(t, "CustomFields", []).map(function(e) {
                        return {
                            key: e.Key,
                            value: e.Value
                        }
                    })
                }(o),
                type: e.getProperty(o, "Type", t.UserType.Unknown),
                commercialOffer: e.getProperty(o, "CommercialOffer", ""),
                canFilterSubscribedContents: e.getProperty(o, "CanFilterSubscribedContents", !1),
                subscriptionsFilter: e.getProperty(o, "SubscriptionsFilter", "")
            };
            var i
        }
    }
    function Je(e) {
        "ngInject";
        return function(t) {
            return {
                id: e.getProperty(t, "CatalogItemId", -1),
                catalogItemType: e.getProperty(t, "CatalogItemType"),
                endDate: e.getProperty(t, "EndDate"),
                isAdult: e.getProperty(t, "IsAdult"),
                startDate: e.getProperty(t, "PurchaseStartDate"),
                quality: e.getProperty(t, "Quality"),
                purchaseStatusId: e.getProperty(t, "StatusId"),
                deviceTypeId: e.getProperty(t, "DeviceTypeId")
            }
        }
    }
    Ve.$inject = ["goSvcUtils", "goModelAgeRating", "goModelGenre", "goModelStaff", "goModelTag", "goModelGoType", "goModelMedia", "goSvcCommercialSegmentation", "goModelImages", "goCnstEnumerated", "uaConstants", "goSvcMedias", "goSvcUniapiParameter"],
    He.$inject = ["goModelAgeRating", "goSvcUtils"],
    Ge.$inject = ["goSvcUtils"],
    We.$inject = ["goSvcUtils", "goModelSeason", "goModelEpisode", "goModelMovie", "goModelGoType", "goCnstEnumerated"],
    qe.$inject = ["goSvcUtils", "goModelProduct", "goModelMedia", "uaConstants", "goSvcLogger", "goCnstEnumerated"],
    Ye.$inject = ["goSvcUtils", "goModelProduct", "uaConstants", "goSvcLogger", "goCnstEnumerated"],
    ze.$inject = ["goSvcUtils"],
    Qe.$inject = ["goSvcUtils"],
    Ke.$inject = ["goSvcUtils", "goModelGenre", "goModelTag", "goModelGoType", "goSvcCommercialSegmentation", "goModelImages", "goCnstEnumerated"],
    Xe.$inject = ["goSvcUtils", "uaConstants"],
    Je.$inject = ["goSvcUtils"];
    var Ze = r.a.module("go.models", []).factory("goModelAbstractContent", q).factory("goModelAgeRating", Y).factory("goModelCaAbstractContent", z).factory("goModelCaChannel", Q).factory("goModelCaCommonProduct", K).factory("goModelCaContent", X).factory("goModelCaDetailedLiveProgram", J).factory("goModelCaEditorial", Z).factory("goModelCaEpisode", ee).factory("goModelCaExtensionChannel", te).factory("goModelCaGenre", ne).factory("goModelCaLiveChannel", re).factory("goModelCaLiveSchedule", oe).factory("goModelCaLive", ae).factory("goModelCaMedia", ie).factory("goModelCaMenuChannel", ce).factory("goModelCaPricingModel", le).factory("goModelCaRecommendation", de).factory("goModelCaRelation", ge).factory("goModelCaSchedule", pe).factory("goModelCaSeason", me).factory("goModelCaSerie", fe).factory("goModelCaSubscription", ve).factory("goModelCaSubtitle", ye).factory("goModelCaVod", Se).factory("goModelCaProviderIcon", ue).factory("goModelCreditCard", be).factory("goModelCurrentEpisode", function() {
        "ngInject";
        var e = o.caTypes.CONTENT_TYPES
          , t = e.EPISODE
          , n = e.SERIE
          , a = e.SEASON;
        return function(e) {
            var r = e.EpisodeId
              , i = e.SeriesId
              , c = e.SeasonId;
            return {
                episodeId: o.caUtils.toPid(t, r),
                seriesId: o.caUtils.toPid(n, i),
                seasonId: o.caUtils.toPid(a, c)
            }
        }
    }).factory("goModelDevice", Ee).factory("goModelEpisode", Te).factory("goModelExternalCatchupToken", Ce).factory("goModelExternalCatchupUrl", function() {
        return function(e) {
            return {
                url: e
            }
        }
    }).factory("goModelGenre", Pe).factory("goModelGoError", function() {
        return function(e) {
            return {
                data: "",
                status: 0,
                config: {},
                statusText: "",
                error: e
            }
        }
    }).factory("goModelGoType", Ie).factory("goModelInstanceCredit", Me).factory("goModelInterest", Ne).factory("goModelImages", Ae).factory("goModelLiveStreams", we).factory("goModelMedia", Le).factory("goModelMovie", $e).factory("goModelNetflixToken", Re).factory("goModelAmazonToken", De).factory("goModelNextEpisode", _e).factory("goModelParameters", function() {
        return function(e) {
            return e
        }
    }).factory("goModelPaymentMethod", Oe).factory("goModelPlayerMedia", Ue).factory("goModelPricingModel", ke).factory("goModelProduct", Ve).factory("goModelRecording", He).factory("goModelRegistrationField", Ge).factory("goModelRentedProduct", We).factory("goModelSeason", qe).factory("goModelSerie", Ye).factory("goModelStaff", ze).factory("goModelTag", Qe).factory("goModelTaggedProduct", Ke).factory("goModelUserRight", Je).factory("goModelUser", Xe).name;
    function et(e, t, n, a, r, o, i, c, s, l) {
        "ngInject";
        var u, d = l.adults.cookie;
        return {
            checkAdultAccess: function() {
                u || (u = (o.isLoggedIn ? e.when() : s.login()).then(g).catch(function(t) {
                    return !0 === t ? t : e.reject()
                }).finally(function() {
                    u = void 0
                }));
                return u
            },
            canAccess: function() {
                return i.get(d.key)
            },
            showMessageAndRedirect: function() {
                c.redirectToHome(),
                n(function() {
                    r.openError({
                        title: "popup.adults.title",
                        message: "popup.adults.withoutAccess",
                        accept: "common.accept"
                    })
                }, 1e3)
            }
        };
        function g() {
            return a.isParentalControlActive().then(function(n) {
                return n ? i.get(d.key) ? void 0 : r.openParentalPin({
                    title: "popup.adults.title",
                    info: "popup.adults.infoPin"
                }).result.then(function() {
                    i.createUserExpirationCookie(d.key, !0, d.expiration)
                }).then(function(t) {
                    return e.when(t)
                }) : r.openWarning({
                    title: "popup.adults.title",
                    message: "popup.adults.mandatoryPin",
                    accept: "common.configure",
                    cancel: "common.cancel"
                }).result.then(function(n) {
                    return n && t.path("settings/parental-control"),
                    e.reject(n)
                })
            })
        }
    }
    function tt(e) {
        "ngInject";
        var t = e.document.body;
        return {
            getAvailableSpaceDimensions: function() {
                return {
                    width: parseInt(getComputedStyle(t).width, 10) || e.innerWidth,
                    height: e.innerHeight - (parseInt(getComputedStyle(window.document.querySelector("body header")).height, 10) || 0)
                }
            },
            getMinWidth: function() {
                return parseInt(getComputedStyle(t)["min-width"], 10)
            }
        }
    }
    function nt(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m) {
        "ngInject";
        var f = g.UserCreditCardStatus.Pending
          , h = g.UserType.Telefonica
          , v = p.externalAuth.tasa.name
          , y = d.go.uniapi.login.cookie;
        return {
            checkRedirectionInPendingCard: function() {
                var t = n.profile.creditCardStatus;
                r.get("SupportedUserTypes") !== h && t === f && e.path("/registration/choose-subscription")
            },
            login: function(e) {
                return t.all([b(), S()]).then(function(n) {
                    var a = Fe()(n, 2)
                      , r = a[0]
                      , i = a[1];
                    return r ? function(e) {
                        var n = c.createTrustedDeviceId()
                          , a = {
                            deviceId: n.toString()
                        }
                          , r = s.encode(e ? Object.assign(a, {
                            url: e
                        }) : a);
                        return c.getOIDCAuthRequest(r, n).then(function(e) {
                            var n = e.authUrl
                              , a = e.nonce;
                            return u.trackEvent("login::redirectOIDC", {
                                NONCE: a
                            }),
                            l.redirect(n),
                            t(function() {
                                return null
                            })
                        }).catch(function() {
                            o.openError({
                                title: "auth.tasa.error.title",
                                message: "auth.tasa.error.generic",
                                accept: "common.close"
                            })
                        })
                    }(e) : i ? T() : o.openLogin().result
                })
            },
            logout: function() {
                return b().then(function(e) {
                    return e ? (n = s.encode(),
                    c.getOIDCLogoutRequest(n).then(function(e) {
                        return l.redirect(e),
                        t(function() {
                            return null
                        })
                    }).catch(function() {
                        o.openError({
                            title: "auth.tasa.error.logoutTitle",
                            message: "auth.tasa.error.logoutGeneric",
                            accept: "common.close"
                        })
                    })) : c.logout();
                    var n
                })
            },
            startSSOLoginFlowIfNeeded: function() {
                return S().then(function(n) {
                    var r = e.search().idp === v
                      , o = !L()(a.get(y.key));
                    return E(),
                    o && n && r ? T() : t.when()
                })
            },
            removeSingleSignOnParam: E,
            isTasaAuthEnabled: S,
            isMeuVivoAuthEnabled: function() {
                return t.all([i.getAuthType(), i.isExternalAuth(), i.getExternalAuthType()]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return -1 === n ? a && r === g.ExternalAuthType.OauthRop : n === g.AuthType.OauthRop
                })
            },
            isOidcAuthEnabled: b,
            isSSOAuthEnabled: function() {
                return i.isInAppAutoLogin()
            }
        };
        function S() {
            return t.all([i.getAuthType(), i.isExternalAuth(), i.getExternalAuthType()]).then(function(e) {
                var t = Fe()(e, 3)
                  , n = t[0]
                  , a = t[1]
                  , r = t[2];
                return -1 === n ? (a || m.forceTasaSSOEnabled) && r === g.ExternalAuthType.Saml : n === g.AuthType.Saml
            })
        }
        function b() {
            return i.getAuthType().then(function(e) {
                return e === g.AuthType.Oidc
            })
        }
        function E() {
            e.search("idp", void 0)
        }
        function T() {
            var e = s.encode();
            return c.getSignedSAMLRequest(e).then(function(e) {
                return l.redirect(e),
                t(function() {
                    return null
                })
            }).catch(function() {
                o.openError({
                    title: "auth.tasa.error.title",
                    message: "auth.tasa.error.generic",
                    accept: "common.close"
                })
            })
        }
    }
    function at(e, t, n, a, i, c, s, l, u, d, g, p, m, f, h, v, y, S, b, E, T, C, P, I, A, M) {
        "ngInject";
        var N, w = S.go.uniapi.login.cookie, L = T.browserCookie, $ = !1;
        return {
            login: function(e) {
                e && (v.token = void 0);
                return C.login()
            },
            run: function() {
                e.types = E,
                e.caTypes = o.caTypes,
                e.cwTypes = T.contentWiseTypes,
                e.imageSizes = T.imageSizes,
                t = S.go.uniapi.config,
                P.createExpirationCookie(),
                v[atob("Y29uc3VtZXJLZXk=")] = s.getSearchQuery()[0],
                v[atob("Y29uc3VtZXJTZWNyZXQ=")] = s.getSearchQuery()[1],
                v.instanceId = s.getProperty("instanceId"),
                v.baseUrl = s.getProperty("endpoint") + b.serviceEndpoint,
                v.deviceType = t.deviceType[b.deviceName],
                v.token = g.get(w.key),
                M.getUniapiTime(),
                l.setTitle(),
                d.setup(b.env),
                N = y.startSSOLoginFlowIfNeeded().then(i.loadSettings).then(C.checkAndSetUserProfile).then(c.setUp).then(R).then(function() {
                    return !I.isAuth && C.login()
                }).catch(function() {
                    return n.url("error")
                }).finally(function() {
                    var e;
                    e = g.get(L.key),
                    !p.os.type.desktop || e || p.isNavigationSupported || u.openBrowserWarning({
                        browserList: m.suggestedBrowsersByOs
                    }).result.then(function() {
                        g.createExpirationCookie(L.key, !0, L.expiration)
                    }),
                    $ = !0
                }),
                r.a.module("infinite-scroll").value("THROTTLE_MILLISECONDS", 250);
                var t;
                var a = e.$on("$locationChangeStart", f.clearAll);
                return e.$on("$destroy", a),
                N
            },
            isFinished: function(e) {
                return ($ ? t.when() : N).then(function() {
                    return function(e) {
                        return e === n.path() ? t.when() : t.reject()
                    }(e)
                })
            }
        };
        function R() {
            return A.showIfEnabled().then(function(e) {
                return e ? t.reject() : a.showIfEnabled()
            }).then(function(e) {
                return e ? t.reject() : h.check()
            }).catch(function() {
                return t.when()
            })
        }
    }
    function rt(e, t, n, a) {
        "ngInject";
        var r = n.boxLayout
          , o = a.container
          , i = r.baseWidth + r.margin
          , c = r.baseHeight + r.margin
          , s = e.Math;
        return {
            getOnScreenLimit: function(e) {
                var n = t.getAvailableSpaceDimensions()
                  , a = {
                    availableWidth: n.width,
                    availableHeight: n.height
                }
                  , r = a.availableHeight - o.topMargin
                  , l = e ? e + r : r
                  , u = s.floor(a.availableWidth / i)
                  , d = s.ceil(l / c) + (o.additionalRows || 0);
                return u * d
            }
        }
    }
    function ot(e, t, n, a) {
        "ngInject";
        var r = a.suggestedBrowsersInfo
          , o = a.suggestedBrowsers
          , i = a.suggestedBrowsersTransparentCatchup;
        function c(e) {
            var t = e.split(":");
            return {
                id: t[0],
                os: t[1]
            }
        }
        function s(a) {
            var o = n.go.i18n.iso;
            return a.map(c).filter(function(t) {
                return "*" === t.os || e.os.pc[t.os]
            }).filter(function(n) {
                return n.id !== e.browser.name || n.id === e.browser.name && e.browser.version < t.toNumber(r[n.id].version)
            }).map(function(e) {
                var t = r[e.id];
                return {
                    id: e.id,
                    name: t.name,
                    version: t.version,
                    url: t.url.replace("{{#iso}}", o.toLowerCase()).replace("{{#_iso_}}", o.replace("-", "_"))
                }
            })
        }
        return {
            suggestedBrowsersByOs: s(o),
            suggestedBrowsersForTransparentCatchup: s(i)
        }
    }
    function it(e, t, n, a) {
        "ngInject";
        var r = t("date")
          , i = o.caTypes.CHANNEL_CONTENT_TYPE;
        function c(e, t) {
            return e.setMinutes(function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a.networkCatchupCacheInvalidation.defaultRange;
                if (f()(e) || e < 0 || e > 59)
                    return;
                var n = Math.floor(e / t);
                return t * n
            }(e.getMinutes(), t)),
            r(e, a.networkCatchupCacheInvalidation.dateFormat)
        }
        function s(t, r) {
            return t && function(e) {
                return !e || e !== i.VOD
            }(r) ? n.getInvalidateCacheMinutes().then(function(e) {
                var n, r, o = (n = e,
                r = a.networkCatchupCacheInvalidation,
                n >= 10 && !(60 % n) ? n : r.defaultRange);
                return c(t, o)
            }) : e.resolve()
        }
        return {
            getInvalidationCacheDatetime: s,
            getNowInvalidationCacheDatetime: function(e) {
                return s(new Date, e)
            }
        }
    }
    function ct(e, t) {
        "ngInject";
        var n = o.caTypes.ROUTES
          , a = o.caTypes.CONTENT_TYPES
          , r = o.caTypes.RELATIONS
          , i = o.caTypes.ATTRIBUTES;
        return {
            getCommonProductInfo: function(t) {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    ca_gvpid: t,
                    limit: 1,
                    contentTypes: [a.EPISODE, a.SEASON, a.SERIE].join(","),
                    includeRelations: [r.EPISODE, r.SEASON, r.SERIE].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaCommonProduct")
                    },
                    cache: e.get("goMdlCachesSvcStatic")
                })
            },
            getSerie: function() {
                return o.caInterface.api.rest(o.caUtils.contentRoute(), {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    fields: ["producerName", "pid", "title", "year", "description", "distributor", "shortDescription", "duration", "year", "ageRatingpid", "childrenCount", "images.videoFrame", "images.landscapeCover", "images.banner", "images.cover", "images.portraitArt", "commercializationType"].join(","),
                    relatedContents: !0,
                    includeAttributes: i.REQUIRES_PIN,
                    includeRelations: [r.GENRE, r.ACTOR, r.DIRECTOR, r.PRODUCT_DEPENDENCIES, r.PROVIDER].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaSerie")
                    },
                    cache: e.get("goMdlCachesSvcStatic")
                })
            },
            getSerieSeasons: function() {
                return o.caInterface.api.rest(o.caUtils.contentChildrenRoute(), {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    fields: ["pid", "title", "seasonNumber", "childrenCount", "commercializationType", "availableUntil"].join(","),
                    includeRelations: [r.EPISODE, r.MEDIA].join(","),
                    includeAttributes: i.DEVICE_TYPES_QUALITIES
                }, {
                    response: {
                        formatter: e.get("goModelCaSeason")
                    },
                    cache: e.get("goMdlCachesSvcStatic")
                })
            },
            getEpisodes: function() {
                return o.caInterface.api.rest(o.caUtils.contentChildrenRoute(), {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    fields: ["pid", "title", "distributor", "distributorId", "producerName", "description", "seasonNumber", "episodeNumber", "seasonId", "seriesId", "availableUntil", "childrenCount", "commercializationType", "year", "duration", "ageRatingpid", "closingCreditsStartTime", "images.cover", "images.videoFrame", "images.landscapeCover", "images.banner", "images.portraitArt"].join(","),
                    includeRelations: [r.GENRE, r.PRODUCT_DEPENDENCIES].join(","),
                    includeAttributes: i.DEVICE_TYPES_QUALITIES
                }, {
                    response: {
                        formatter: e.get("goModelCaEpisode")
                    },
                    cache: e.get("goMdlCachesSvcStatic")
                })
            },
            getEpisodesRelations: function(t) {
                return o.caInterface.api.rest(n.RELATED_CONTENTS, {
                    sourcePids: t.join(","),
                    contentTypes: [a.MEDIA, a.PERSON, a.SUBTITLE].join(","),
                    relationTypes: [r.MEDIA, r.ACTOR, r.DIRECTOR, r.SUBTITLE].join(","),
                    fields: ["pid", "distributor", "publicurl", "url", "quality", "streamingtype", "drmType", "title", "languageCode", "languageList", "isoLanguageCode", "isoLanguageList", "shortDescription"].join(","),
                    includeAttributes: i.AUTO
                }, {
                    response: {
                        formatter: e.get("goModelCaRelation")
                    },
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            }
        }
    }
    function st(e, t, n, a, r) {
        "ngInject";
        var i = o.caTypes.ROUTES
          , c = o.caTypes.CONTENT_TYPES
          , s = o.caTypes.RESPONSE_STRATEGY
          , l = o.caTypes.ATTRIBUTES
          , u = o.caTypes.RELATIONS
          , d = a.PlaybackType
          , g = "".concat(o.caTypes.DEVICE_TYPES.PC, "_").concat(d.PlaybackRight, "|").concat(o.caTypes.DEVICE_TYPES.PC, "_").concat(d.NonPlayback)
          , p = 200;
        function m(e) {
            return o.caInterface.api.rest(i.CONTENTS, {
                pids: e.join(","),
                fields: ["Pid", "quality", "streamingtype", "DRMtype", "PublicUrl"].join(","),
                includeAttributes: l.AUTO
            }, {
                response: {
                    formatter: t.get("goModelLiveStreams")
                },
                cache: t.get("goMdlCachesSvcStatic")
            })
        }
        return {
            schedules: function(e) {
                var a = {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    fields: ["Pid", "Title", "ChannelName", "ChannelNumber", "CallLetter", "Start", "End", "LiveChannelPid", "LiveProgramPid", "EpgSerieId", "images.videoFrame", "images.banner"].join(","),
                    includeRelations: u.GENRE,
                    orderBy: o.caUtils.orderByAsc("START_TIME")
                };
                function r(e) {
                    var n = {
                        response: {
                            formatter: t.get("goModelCaSchedule")
                        },
                        cache: t.get("goMdlCachesSvcStatic")
                    };
                    return Object.assign(n, e)
                }
                return n.isEmptyObject(e) ? o.caInterface.api.rest(i.SCHEDULES, a, r()) : o.caInterface.api.restCW(i.SCHEDULES, e.useCaseLayout, a, r(e.requestConfig))
            },
            pagedSchedules: function() {
                return o.caInterface.api.rest(i.PAGED_SCHEDULES, {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    fields: ["LiveChannelPid", "images.logo", "images.videoFrame", "images.banner", "LiveProgramPid", "Start", "End"].join(","),
                    includeAttributes: l.PROGRAM_TYPE_ID,
                    includeRelations: u.GENRE
                }, {
                    response: {
                        formatter: t.get("goModelCaSchedule"),
                        strategy: s.CONFIG
                    },
                    cache: r.browser.pc.edge ? void 0 : "goMdlCachesSvcStatic"
                })
            },
            schedule: function() {
                return o.caInterface.api.rest(o.caUtils.contentRoute(), {
                    fields: ["Pid", "Title", "ChannelName", "ChannelNumber", "CallLetter", "Start", "End", "LiveChannelPid", "LiveProgramPid", "EpgSerieId", "images.videoFrame", "images.banner"].join(","),
                    includeRelations: [o.caTypes.RELATIONS.PRODUCT_DEPENDENCIES, u.GENRE].join(",")
                }, {
                    response: {
                        formatter: t.get("goModelCaSchedule"),
                        strategy: o.caTypes.RESPONSE_STRATEGY.DATA
                    },
                    cache: t.get("goMdlCachesSvcStatic")
                })
            },
            channels: function() {
                return o.caInterface.api.rest(i.CONTENTS_ALL, {
                    ca_deviceTypes: n.getCaDeviceTypesWithoutNull(),
                    ca_deviceTypes_isPlayback: g,
                    contentTypes: c.LIVE_CHANNEL,
                    ca_active: !0,
                    includeAttributes: [l.CHANNEL_MAP_NUMBER, l.DEVICE_TYPES_QUALITIES, l.DEVICE_TYPES_IS_PLAYBACK, l.DEVICE_TYPES_IS_START_OVER_ENABLED, l.DEVICE_TYPES_IS_PVR_PLAYBACK, l.DEVICE_TYPES_IS_PVR_MANAGEABLE].join(","),
                    includeRelations: [o.caTypes.RELATIONS.PRODUCT_DEPENDENCIES, o.caTypes.RELATIONS.MEDIA].join(","),
                    fields: ["Pid", "Name", "ChannelNumber", "Dvr", "EpgLiveChannelReferenceId", "CallLetter", "ProviderChannel", "LXDChannel", "AdvancedCDNServices", "DefaultLanguageOrders", "images.logo", "images.icon"].join(","),
                    orderBy: "contentOrder"
                }, {
                    response: {
                        formatter: t.get("goModelCaLiveChannel")
                    },
                    cache: t.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            channelsByPids: function(e) {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS, {
                    pids: e.join(","),
                    ca_deviceTypes: n.getCaDeviceTypesWithoutNull(),
                    fields: ["Pid", "Name", "ChannelNumber", "Dvr", "EpgLiveChannelReferenceId", "DefaultLanguageOrders", "CallLetter", "images.logo", "images.icon"].join(","),
                    orderBy: "contentOrder"
                }, {
                    response: {
                        formatter: t.get("goModelCaLiveChannel")
                    },
                    cache: t.get("goMdlCachesSvcStatic")
                })
            },
            programSchedules: function() {
                return o.caInterface.api.rest(o.caUtils.contentSchedulesRoute(), {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    fields: ["Pid", "Name", "ShortDescription", "Description", "EpgSerieId", "AgeRatingPid", "Start", "LiveChannelPid", "ProgramId", "EpgNetworkDvr", "SeasonNumber", "images.videoFrame", "images.banner"].join(","),
                    includeRelations: [u.GENRE].join(","),
                    includeAttributes: l.CPVR_DISABLE
                }, {
                    cache: t.get("goMdlCachesSvcStatic")
                })
            },
            liveSchedule: function() {
                return o.caInterface.api.rest(i.SCHEDULES, {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    fields: ["Pid", "ChannelId", "Title", "CallLetter", "Start", "End", "EpgNetworkDvr", "ProgramId", "EpgSerieId", "ChannelId", "images.videoFrame", "images.banner"].join(","),
                    includeRelations: u.GENRE
                }, {
                    response: {
                        formatter: t.get("goModelCaLiveSchedule")
                    }
                })
            },
            streams: function(t) {
                var n = Math.ceil(t.length / p);
                if (n > 1) {
                    for (var a = [], r = 0; r < n; r++)
                        a.push(m(t.slice(p * r, p * (r + 1))).get());
                    return e.all(a).then(function(e) {
                        return e.reduce(function(e, t) {
                            return e.concat(t)
                        })
                    })
                }
                return m(t).get()
            }
        }
    }
    function lt(e) {
        "ngInject";
        return {
            pricingModels: function() {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS_ALL, {
                    contentTypes: o.caTypes.CONTENT_TYPES.GENERIC,
                    fields: ["Pid", "PricingModelPrice", "RecurrenceType", "IsRecurring", "Quality", "RecurrenceDays", "AvailableUntil"].join(","),
                    includeAttributes: o.caTypes.ATTRIBUTES.USER_TYPES
                }, {
                    response: {
                        formatter: e.get("goModelCaPricingModel")
                    },
                    cache: e.get("goMdlCachesSvcUser")
                })
            },
            contentPricingModels: function(t) {
                return o.caInterface.api.rest(o.caTypes.ROUTES.RELATED_CONTENTS, {
                    sourcePids: t,
                    contentTypes: o.caTypes.CONTENT_TYPES.GENERIC,
                    limit: 1e3,
                    fields: ["Pid", "PricingModelPrice", "IsRecurring"].join(","),
                    includeAttributes: o.caTypes.ATTRIBUTES.USER_TYPES
                }, {
                    response: {
                        formatter: e.get("goModelCaPricingModel")
                    },
                    cache: e.get("goMdlCachesSvcUser")
                })
            }
        }
    }
    function ut(e, t) {
        "ngInject";
        var n = o.caTypes.ROUTES
          , a = o.caTypes.CONTENT_TYPES
          , r = o.caTypes.ATTRIBUTES;
        return {
            allChannels: function() {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    contentTypes: a.CHANNEL,
                    ca_isCatalog: !0,
                    includeAttributes: [r.REQUIRES_PIN, r.EXTERNAL_URLS].join(","),
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    fields: ["pid", "title", "titleInMenu", "description", "anchorExtensionPosition", "IsSpecialChannel", "parentChannelId", "channelType", "vodDefaultOrder", "liveDefaultOrder", "uxReferenceLayout", "uxReferenceSearch", "nextLevel", "showSubscribedFilter", "images.logo", "images.banner", "images.icon"].join(","),
                    orderBy: ["parentChannelId", "contentOrder", "pid"].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaChannel")
                    },
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            allExtensionsChannels: function() {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    contentTypes: a.CHANNEL,
                    ca_isExtension: !0,
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    fields: ["pid", "title", "titleInMenu", "parentChannelId", "extensionType", "contentOrder", "uxReferencePage"].join(","),
                    orderBy: ["parentChannelId", o.caUtils.orderByAsc("contentOrder")].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaExtensionChannel")
                    },
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            extensions: function(a) {
                return o.caInterface.api.restCW(n.PAGE, "rec_page", {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    includeAttributes: r.REQUIRES_PIN,
                    includeRelations: [o.caTypes.RELATIONS.PRODUCT_DEPENDENCIES, o.caTypes.RELATIONS.GENRE, o.caTypes.RELATIONS.PROVIDER].join(","),
                    offset: 0,
                    limit: 40,
                    ca_RequiresPin: !1,
                    fields: ["pid", "title", "callLetter", "channelName", "channelId", "commercializationType", "releaseDate", "start", "end", "Distributor", "Duration", "images.cover", "images.videoFrame", "images.landscapeCover", "images.banner", "images.portraitArt"].join(",")
                }, Object.assign({
                    cache: e.get("goMdlCachesSvcStatic")
                }, a.requestConfig))
            },
            allGenres: function() {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    contentTypes: a.GENRE
                }, {
                    response: {
                        formatter: e.get("goModelCaGenre")
                    },
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            allInstanceServices: function() {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    contentTypes: a.CHANNEL,
                    ca_isservicetype: !0
                }, {
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            allMenuChannels: function() {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    contentTypes: a.CHANNEL,
                    ca_ismenu: !0,
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    includeAttributes: "ca_deviceTypes",
                    includeRelations: o.caTypes.RELATIONS.CHILD,
                    fields: ["title", "menuType", "nextLevel"].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaMenuChannel")
                    },
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            allProvidersLogos: function() {
                return o.caInterface.api.rest(n.CONTENTS_ALL, {
                    contentTypes: a.COMPANY,
                    fields: ["pid", "images.icon", "images.logo"].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaProviderIcon")
                    },
                    cache: e.get("goMdlCachesSvcStatic"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            }
        }
    }
    et.$inject = ["$q", "$location", "$timeout", "goSvcUniapiPin", "goMdlPopUpsSvcManager", "goSvcUserStatus", "goSvcCookies", "goSvcUtils", "goSvcAuthentication", "goCnstEnumerated"],
    tt.$inject = ["$window"],
    nt.$inject = ["$location", "$q", "goSvcUserStatus", "goSvcCookies", "goSvcUniapiSettings", "goMdlPopUpsSvcManager", "goSvcUniapiParameter", "goSvcUniapiAuthentication", "goSvcJsonWebToken", "goSvcUtils", "goMdlAnalyticsSvcManager", "goCnstConfig", "uaConstants", "goCnstEnumerated", "goCnstSetup"],
    at.$inject = ["$rootScope", "$q", "$location", "goSvcLanding", "goSvcUniapiSettings", "goSvcGoogleAnalytics", "goSvcUniapi", "goSvcMetadata", "goMdlPopUpsSvcManager", "goMdlAnalyticsSvcManager", "goSvcCookies", "goSvcFeature", "goSvcBrowser", "goSvcPromiseQueue", "goSvcLiveDetail", "uaScope", "goSvcAuthentication", "goCnstConfig", "goCnstApp", "uaConstants", "goCnstEnumerated", "goSvcUniapiAuthentication", "goMdlAuthenticationSvcSSO", "goSvcUserStatus", "goSvcPanic", "goSvcTime"],
    rt.$inject = ["$window", "goSvcAppLayout", "goCnstEnumerated", "goMdlThematicAreaCnstMain"],
    ot.$inject = ["goSvcFeature", "goSvcUtils", "goCnstConfig", "goCnstEnumerated"],
    it.$inject = ["$q", "$filter", "goSvcUniapiParameter", "goCnstEnumerated"],
    ct.$inject = ["$injector", "goSvcUtils"],
    st.$inject = ["$q", "$injector", "goSvcUtils", "uaConstants", "goSvcFeature"],
    lt.$inject = ["$injector"],
    ut.$inject = ["$injector", "goSvcUtils"];
    var dt = n(68)
      , gt = n.n(dt);
    function pt(e, t, n) {
        "ngInject";
        var a = o.caTypes.ATTRIBUTES
          , r = o.caTypes.RELATIONS
          , i = o.caTypes.ROUTES
          , c = o.caTypes.CONTENT_TYPES;
        return {
            allSubscriptions: function() {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS_ALL, {
                    contentTypes: o.caTypes.CONTENT_TYPES.SUBSCRIPTION,
                    includeRelations: r.PRICING_MODEL,
                    includeAttributes: [a.INCOMPATIBLE, a.PURCHASE_TYPE, a.PURCHASE_STATUS, a.USER_TYPES, a.IS_VISIBLE, a.HAS_LIVE_CHANNEL].join(","),
                    ca_type: "Normal",
                    ca_userTypes: t.getUserType(),
                    ca_status: "active",
                    fields: ["pid", "title", "RequiresPin", "IsOtt", "ShortDescription", "Description", "images.banner", "images.cover", "images.logo", "images.portraitArt", "UxReferenceLayout", "VodDefaultOrder"].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaSubscription")
                    },
                    cache: e.get("goMdlCachesSvcNavigation"),
                    interceptor: {
                        uaenNoLimit: {
                            strategy: "conservative"
                        }
                    }
                })
            },
            subscriptionChildren: function() {
                return o.caInterface.api.rest(o.caUtils.contentRoute(), {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    includeRelations: [r.CHILD, r.PRODUCT_DEPENDENCIES].join(",")
                }, {
                    cache: "goMdlCachesSvcNavigation"
                })
            },
            subscriptionsAndServiceRelation: function() {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS_ALL, {
                    contentTypes: o.caTypes.CONTENT_TYPES.SUBSCRIPTION,
                    includeRelations: r.PRODUCT_DEPENDENCIES,
                    ca_isservice: !0
                }, {
                    cache: "goMdlCachesSvcNavigation"
                })
            },
            allServices: function() {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS_ALL, {
                    contentTypes: o.caTypes.CONTENT_TYPES.CHANNEL,
                    ca_isservicetype: !0
                }, {
                    cache: e.get("goMdlCachesSvcNavigation")
                })
            },
            externalURLs: function(t) {
                return o.caInterface.api.rest(i.CONTENTS_CHILDREN, {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    pids: t.join(","),
                    contentTypes: c.LINK,
                    fields: "Url"
                }, {
                    cache: e.get("goMdlCachesSvcNavigation")
                })
            },
            related: function(t) {
                var i = {
                    ca_deviceTypes: n.getCaDeviceTypes(),
                    contentTypes: "".concat(c.MOVIE, ",").concat(c.SERIE),
                    includeAttributes: a.REQUIRES_PIN,
                    includeRelations: "".concat(r.GENRE, ",").concat(r.PRODUCT_DEPENDENCIES),
                    ca_RequiresPin: !1,
                    fields: ["pid", "title", "commercializationType", "duration", "images.url", "images.cover", "images.landscapeCover", "images.videoFrame", "images.portraitArt", "releaseDate"].join(","),
                    limit: 15
                };
                function s(t) {
                    var n = {
                        response: {
                            formatter: e.get("goModelCaAbstractContent")
                        },
                        cache: e.get("goMdlCachesSvcNavigation")
                    };
                    return Object.assign(n, t)
                }
                return gt()(t) ? o.caInterface.api.rest(o.caUtils.contentChildrenRoute(), i, s()) : o.caInterface.api.restCW(o.caUtils.contentChildrenRoute(), t.useCaseLayout, i, s(t.requestConfig))
            }
        }
    }
    function mt(e, t) {
        "ngInject";
        var n = o.caTypes.RELATIONS
          , a = {
            ca_deviceTypes: t.getCaDeviceTypes(),
            includeAttributes: o.caTypes.ATTRIBUTES.REQUIRES_PIN,
            includeRelations: [n.PRODUCT_DEPENDENCIES, n.GENRE, n.PROVIDER].join(","),
            fields: ["pid", "title", "callLetter", "channelName", "duration", "start", "end", "epgChannelId", "channelId", "programId", "commercializationType", "distributor", "releaseDate", "images.videoFrame", "images.cover", "images.landscapeCover", "images.banner", "images.portraitArt"].join(",")
        };
        return {
            content: function(n) {
                function r(t) {
                    var n = {
                        response: {
                            formatter: e.get("goModelCaAbstractContent"),
                            strategy: o.caTypes.RESPONSE_STRATEGY.COUNT
                        },
                        cache: e.get("goMdlCachesSvcStatic")
                    };
                    return Object.assign(n, t)
                }
                return t.isEmptyObject(n) ? o.caInterface.api.rest(o.caUtils.contentChildrenRoute(), a, r()) : o.caInterface.api.restCW(o.caUtils.contentChildrenRoute(), n.useCaseLayout, a, r(n.requestConfig))
            },
            contentSearch: function(n) {
                function r(t) {
                    var n = {
                        response: {
                            formatter: e.get("goModelCaAbstractContent"),
                            strategy: o.caTypes.RESPONSE_STRATEGY.COUNT
                        },
                        cache: void 0
                    };
                    return Object.assign(n, t)
                }
                return t.isEmptyObject(n) ? o.caInterface.api.rest(o.caTypes.ROUTES.SEARCH, a, r()) : o.caInterface.api.restCW(o.caTypes.ROUTES.SEARCH, n.useCaseLayout, a, r(n.requestConfig))
            }
        }
    }
    pt.$inject = ["$injector", "goSvcUser", "goSvcUtils"],
    mt.$inject = ["$injector", "goSvcUtils"];
    var ft = n(356)
      , ht = n(33)
      , vt = n.n(ht);
    function yt(e, t, n, a, r, i, c, s, l, u, d) {
        "ngInject";
        var g = d.catalog.orderBy
          , p = o.caTypes.CHANNEL_CONTENT_TYPE
          , m = o.caTypes.NEXT_LEVEL_TYPE.Carousel
          , f = d.catalog.types
          , h = f.vod
          , v = f.live
          , y = f.l7d
          , S = f.vodAndLive
          , b = f.vodAndL7d
          , E = f.liveAndL7d
          , T = f.all
          , C = {
            ca_RequiresPin: !0
        };
        return {
            getCategory: P,
            getTypes: function() {
                return n.all([L(), I()]).then(N)
            },
            getGenres: function() {
                return P().then(function(e) {
                    var t = e.id
                      , a = e.isAdult
                      , r = a ? C : {};
                    return n.all([i.getChildren(t, r), A()])
                }).then(N)
            },
            getSortings: function() {
                var e = s.getDefaultOrderingsIds().then(function(e) {
                    return e.map(function(e) {
                        return g.filter(function(t) {
                            var n = t.id;
                            return n === e
                        })[0]
                    })
                });
                return n.all([e, M()]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n.map(function(e) {
                        return e.selected = e.id === a,
                        e
                    })
                })
            },
            getFilters: function() {
                var e = A().catch(se.noop);
                return n.all([M().then(function(e) {
                    return g.filter(function(t) {
                        var n = t.id;
                        return n === e
                    })[0]
                }), I(), e]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return {
                        sorting: n,
                        type: a,
                        genre: r
                    }
                })
            },
            getType: I,
            getGenre: A,
            getSorting: M,
            isShowSubscribedOnly: function() {
                var t = e.showSubscribedOnly;
                return Object(he.isUndefined)(t) ? u.getShowOnlySubscribedByDefault().then(function(e) {
                    return e
                }) : n.resolve("true" === t)
            },
            setSelectedItem: N,
            cleanUrlFiltersOnPathChange: function(e, n) {
                var a = new URL(e).pathname
                  , r = new URL(n).pathname;
                a !== r && t.search(Object.assign({}, t.search(), {
                    type: null,
                    sort: null,
                    showSubscribedOnly: null
                }))
            }
        };
        function P() {
            var e = a.decodeParamId("category");
            return e ? i.getChannel(e, C) : D()
        }
        function I(e) {
            return n.when(e || L()).then($)
        }
        function A() {
            var e = a.decodeParamId("genre");
            return e ? i.getChannel(e, C) : P().then(function(e) {
                var t = e.id;
                return i.getFirstChildren(t, C)
            })
        }
        function M() {
            var t = a.smartDecodeParamId();
            return (t ? i.getChannel(t, C) : D()).then(function(e) {
                return e.nextLevel === m ? A() : n.when(e)
            }).then(function(t) {
                return i.getChannel(t.parentChannelId, C).then(function(n) {
                    return function(t, n) {
                        return s.getChannelOrderKey(parseInt(e.sort, 10)).then(function(e) {
                            return R(t, e)
                        }).then(function(e) {
                            return R(n, e)
                        }).then(function(e) {
                            return t = e,
                            vt()(t) ? t : s.getSelectedOrderKey();
                            var t
                        })
                    }(t, n)
                })
            })
        }
        function N(e) {
            var t = Fe()(e, 2)
              , n = t[0]
              , a = t[1];
            return a ? n.map(function(e) {
                return e.selected = e.title === a.title,
                e
            }) : n
        }
        function w(e) {
            return c.isAvailableInTheInstance().then(function(t) {
                var a = {};
                a[p.VOD] = h,
                a[p.LIVE] = v,
                a[p.L7D] = y,
                a[p.VOD_L7D] = b.concat(h, y),
                t ? (a[p.VOD_LIVE] = S.concat(h, v),
                a[p.L7D_LIVE] = E.concat(v, y),
                a[p.VOD_L7D_LIVE] = T.concat(h, v, y)) : (a[p.VOD_LIVE] = h,
                a[p.L7D_LIVE] = y,
                a[p.VOD_L7D_LIVE] = b.concat(h, y));
                var r = a[e.contentType];
                return r ? n.when(r) : n.reject()
            })
        }
        function L() {
            return P().then(function(e) {
                return e.isCatchup ? function(e) {
                    return A().then(w).catch(function() {
                        return w(e)
                    })
                }(e) : w(e)
            })
        }
        function $(t) {
            return t.filter(function(t) {
                return t.title === e.type
            })[0] || function(e) {
                return e[0]
            }(t)
        }
        function R(e, t) {
            var n = e.contentType === p.LIVE ? e.defaultSortLIVE : e.defaultSortVOD;
            return vt()(t) ? t : s.getChannelOrderKey(n)
        }
        function D() {
            return i.getRoot().then(function(e) {
                return r.getProperty(e, "id")
            }).then(i.getFirstChildren)
        }
    }
    function St(e, t, n, a) {
        "ngInject";
        return {
            segmentSingleData: function(t) {
                return e.all([this.addCanUpgradeInformation(t), this.addIsPurchasedInformation(t), this.addNetworkCatchupRights(t), this.addProviderLogos(t), this.addGenres(t)]).then(function() {
                    return t
                })
            },
            segmentData: function(t) {
                var n = this;
                return C()(t) ? e.all(t.map(function(e) {
                    return n.segmentSingleData(e)
                })) : this.segmentSingleData(t)
            },
            segmentResponse: function(e) {
                var t = e.data || [];
                return this.segmentData(t).then(function(t) {
                    return Object.assign(e, {
                        data: t
                    })
                })
            },
            setCommercializationFlags: function(e) {
                var n, a = e.commercializationType;
                se.isDefined(a) && (n = vt()(a) ? t.CommercializationType : o.caTypes.COMMERCIALIZATION_TYPES,
                e.isCATCHUP = a === n.CATCHUP,
                e.isSVOD = a === n.SVOD,
                e.isTVOD = a === n.TVOD,
                e.isFreeVOD = a === n.FreeVOD || a === n.FREE_VOD,
                e.isExternalCATCHUP = a === n.ExternalCATCHUP || a === n.EXTERNAL_CATCHUP,
                e.isNetworkCATCHUP = a === n.NetworkCatchup || a === n.NETWORK_CATCHUP,
                e.isTransparentCATCHUP = a === n.TransparentCatchup || a === n.TRANSPARENT_CATCHUP,
                e.isUnknown = !(e.isCATCHUP || e.isSVOD || e.isTVOD || e.isFreeVOD || e.isExternalCATCHUP || e.isNetworkCATCHUP || e.isTransparentCATCHUP),
                e.isAnyCatchup = e.isCATCHUP || e.isExternalCATCHUP || e.isNetworkCATCHUP || e.isTransparentCATCHUP)
            },
            addIsPurchasedInformation: function(e) {
                return n.isPurchased(e).then(function(t) {
                    return Object.assign(e, {
                        isPurchased: t
                    })
                })
            },
            addNetworkCatchupRights: function(e) {
                return n.isL7dSubscribed(e).then(function(t) {
                    return Object.assign(e, {
                        hasNetworkCatchupRights: t
                    })
                })
            },
            addCanUpgradeInformation: function(e) {
                return n.isSubscribable(e).then(function(t) {
                    return Object.assign(e, {
                        canUpgrade: t
                    })
                })
            },
            addProviderLogos: function(e) {
                return a.getLogo(e).then(function(t) {
                    return Object.assign(e, {
                        logo: t
                    })
                })
            },
            addGenres: function(t) {
                var n = t.genrePids || [];
                if (n.length)
                    return a.getGenres(n).then(function(e) {
                        return Object.assign(t, {
                            genres: e
                        })
                    });
                t.genres || (t.genres = []);
                return e.when(t)
            }
        }
    }
    function bt(e, t, n, a, r) {
        "ngInject";
        var o = a.cookies
          , i = o.userCookiesKey
          , c = o.userCookieExpiration;
        return t.$watch("isAnonymousLoggedIn", function(e) {
            e && (u().forEach(l),
            l(i))
        }),
        {
            get: function(a) {
                var r, o = function(e) {
                    var t = e;
                    try {
                        t = JSON.parse(e)
                    } catch (e) {}
                    return t
                }(e.get(a)), i = n.getProperty(o, "value", o), c = n.getProperty(o, "uid");
                (t.isLoggedIn && t.profile.id === c || !c) && (r = i);
                return r
            },
            createSessionCookie: function(t, n) {
                B()(n) ? e.putObject(t, n) : e.put(t, n)
            },
            createExpirationCookie: s,
            createUserExpirationCookie: function(e, n, a) {
                s(e, function(e) {
                    return JSON.stringify({
                        value: e,
                        uid: t.profile.id
                    })
                }(n), a),
                function(e) {
                    var t = u();
                    t.push(e),
                    s(i, JSON.stringify(t), c)
                }(e)
            },
            expire: l
        };
        function s(t, n) {
            var a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : o.expiration
              , i = r.get("goSvcTime");
            e.put(t, n, {
                expires: new Date(i.getTime(!0) + 1e3 * a)
            })
        }
        function l(t) {
            e.remove(t)
        }
        function u() {
            return JSON.parse(e.get(i) || "[]")
        }
    }
    function Et(e, t, n, a, r, i, c, s, l, u, d, g, p, m, h, v, y, S, b, E, T, C, P, I, A, M, N, w, L) {
        "ngInject";
        var $ = o.caTypes.CONTENT_TYPES.LIVE_CHANNEL
          , R = o.caTypes.CONTENT_TYPES
          , D = [w.PlayType.SS, w.PlayType.DASHAVC]
          , _ = L.goType
          , O = t.Math;
        return {
            trackVodEvent: function(e) {
                y.trackEvent("detail::vod", {
                    CONTENTID: e.id,
                    CONTENTPRODUCTTYPE: E.toProductTypeFromGoType(e.goType)
                })
            },
            getContentWiseParams: function(e) {
                var t = e.contentWiseParams || r.getParams(e.id);
                return t.id === e.id || _.Episode === e.goType && t.id && t.id === e.seriesId ? t : r.getDefaultParams()
            },
            playMovie: function(e) {
                return e.contentWiseParams = this.getContentWiseParams(e),
                a.start(),
                e.goType === _.Episode ? a.trackPlayEpisode(e) : a.trackPlayMovie(e),
                i.playVod({
                    movie: e,
                    shouldResume: !1
                })
            },
            resumeMovie: function(e) {
                return e.contentWiseParams = this.getContentWiseParams(e),
                a.start(),
                e.goType === _.Episode ? a.trackPlayEpisode(e) : a.trackPlayMovie(e),
                i.playVod({
                    movie: e,
                    shouldResume: !0
                })
            },
            getResumeData: function(e) {
                return s.get(w.TagType.Watched).then(function(t) {
                    var n = t.filter(function(t) {
                        var n = t.id;
                        return n === e
                    })[0];
                    return n ? n.resumeValue : void 0
                })
            },
            isPlayMovieButtonVisible: function(t) {
                if (!t || T.isExpired(t.licenseEnd))
                    return e.when(!1);
                var a = t.playableMedias || [];
                return t.isExternalCATCHUP || 0 === a.length ? e.when(!1) : c.hasPlaybackRights(t).then(function(e) {
                    var a = n.isAnonymousLoggedIn && !t.isTVOD;
                    return e || a
                })
            },
            isPlayEpisodeButtonVisible: function(t) {
                if (!t || T.isExpired(t.licenseEnd))
                    return e.when(!1);
                var a = t.playableMedias || []
                  , r = o.caUtils.toPid(R.SERIE, t.seriesId);
                return t.isExternalCATCHUP || 0 === a.length ? e.when(!1) : n.isAnonymousLoggedIn && !t.isTVOD ? e.when(!0) : P.getSeason(r, t).then(function(n) {
                    return e.all([c.hasPlaybackRights(n), c.hasPlaybackRights(t)])
                }).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n || a
                })
            },
            isPlayButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return t.goType === _.Episode ? this.isPlayEpisodeButtonVisible(t) : this.isPlayMovieButtonVisible(t)
            },
            checkVisibilityForPlayLiveButtons: function(t, a) {
                return e.all([A.getChannelById(t.liveChannelId), this.getLiveProgram(t)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , r = t[0]
                      , o = t[1]
                      , i = a ? o.isAirProgram : !o.isAirProgram;
                    return i && r.isPlayback && (n.isAnonymousLoggedIn || c.isSubscribed(r))
                })
            },
            isPlayLiveButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return this.checkVisibilityForPlayLiveButtons(t, !0)
            },
            isPlayLiveChannelOnNowButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return this.checkVisibilityForPlayLiveButtons(t, !1)
            },
            isRestartMovieButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return (t.playableMedias || []).length > 0 && !T.isExpired(t.licenseEnd) ? e.all([s.isWatched(t), s.isCompleted(t), c.hasPlaybackRights(t)]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return n && !a && r
                }) : e.when(!1)
            },
            isRestartSerieButtonVisible: function(t) {
                var n = this;
                if (!t)
                    return e.when(!1);
                var a = o.caUtils.toPid(R.SERIE, t.seriesId);
                return T.isExpired(t.licenseEnd) ? e.when(!1) : P.getSeason(a, t).then(function(a) {
                    return e.all([n.isRestartMovieButtonVisible(a), n.isRestartMovieButtonVisible(t)])
                }).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n || a
                })
            },
            isRestartVodButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return t.goType === _.Episode ? this.isRestartSerieButtonVisible(t) : this.isRestartMovieButtonVisible(t)
            },
            isRestartLiveButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return n.isLoggedIn ? e.all([this.isPlayLiveButtonVisible(t), A.getChannelById(t.liveChannelId)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return M.isRestartButtonEnabled(a).then(function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        return n && e
                    })
                }) : e.when(!1)
            },
            isPlayExternalCatchupButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return t.isExternalCATCHUP ? n.isLoggedIn ? c.hasPlaybackRights(t) : e.when(!0) : e.when(!1)
            },
            hasResumeInformation: function(t) {
                return e.all([s.isWatched(t), s.isCompleted(t)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && !a
                })
            },
            checkAdultAccess: function(t) {
                return t.isAdult ? l.checkAdultAccess().then(function(n) {
                    return n ? e(function() {
                        return null
                    }) : t
                }).catch(function() {
                    return l.showMessageAndRedirect(),
                    e(function() {
                        return null
                    })
                }) : e.when()
            },
            getMovie: function(e) {
                return u.GetMovie({
                    movieId: e,
                    playType: D
                }).then(function(e) {
                    return g("goModelMovie")(e)
                }).then(function(e) {
                    return d.segmentData(e)
                })
            },
            getEpisode: function(e) {
                return u.GetMovie({
                    movieId: e,
                    playType: D
                }).then(function(e) {
                    return g("goModelEpisode")(e)
                }).then(function(e) {
                    return d.segmentData(e)
                })
            },
            getSeason: function(e) {
                return u.GetMovie({
                    movieId: e,
                    playType: D
                }).then(function(e) {
                    return g("goModelSeason")(e)
                }).then(function(e) {
                    return d.segmentData(e)
                })
            },
            getSerie: function(e) {
                return u.GetMovie({
                    movieId: e,
                    playType: D
                }).then(function(e) {
                    return g("goModelSerie")(e)
                }).then(function(e) {
                    return d.segmentData(e)
                })
            },
            getAvailablePricingModels: function(e) {
                var t = E.toProductTypeFromGoType(e.goType);
                return p.getAvailablePricingModels(t, e.id).then(function(e) {
                    return e.filter(function(e) {
                        var t = e.isRecurring;
                        return !t
                    }).sort(function(e, t) {
                        return e.quality - t.quality
                    })
                })
            },
            getAvailablePaymentMethod: function(e) {
                var t = E.toProductTypeFromGoType(e.goType);
                return p.getAvailablePaymentMethods(t, e.id).then(function(e) {
                    return e[0]
                })
            },
            isPurchaseButtonVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return n.isAnonymousLoggedIn && t.isTVOD ? e.when(!0) : t.isTVOD ? e.all([c.isPurchasable(t), this.getAvailablePricingModels(t), this.getAvailablePaymentMethod(t), b.isBlockTvod()]).then(function(e) {
                    var t = Fe()(e, 4)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2]
                      , o = t[3];
                    return n && 1 === a.length && se.isDefined(r) && !o
                }) : e.when(!1)
            },
            isPurchaseDropdownVisible: function(t) {
                if (!t)
                    return e.when(!1);
                return n.isLoggedIn && t.isTVOD ? e.all([c.isPurchasable(t), this.getAvailablePricingModels(t), this.getAvailablePaymentMethod(t), b.isBlockTvod()]).then(function(e) {
                    var n = Fe()(e, 4)
                      , a = n[0]
                      , r = n[1]
                      , o = n[2]
                      , i = n[3];
                    return a && r.length > N.getDropdownMinimumLength(t) && se.isDefined(o) && !i
                }) : e.when(!1)
            },
            isEpisodePurchaseDropdownVisible: function(t) {
                var n = this
                  , a = o.caUtils.toPid(R.SERIE, t.seriesId);
                return P.getSeason(a, t).then(function(a) {
                    return e.all([c.hasPlaybackRights(a), n.isPurchaseDropdownVisible(t)])
                }).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return !n && a
                })
            },
            isPurchaseErrorBarVisible: function(t) {
                return t.isTVOD && n.isLoggedIn ? t.goType === _.Episode ? this.isSeriePurchaseErrorBarVisible(t) : this.isMoviePurchaseErrorBarVisible(t) : e.when(!1)
            },
            isSeriePurchaseErrorBarVisible: function(t) {
                var n = this
                  , a = o.caUtils.toPid(R.SERIE, t.seriesId);
                return P.getSeason(a, t).then(function(a) {
                    return e.all([n.isMoviePurchaseErrorBarVisible(a), n.isMoviePurchaseErrorBarVisible(t)])
                }).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && a
                })
            },
            isMoviePurchaseErrorBarVisible: function(t) {
                return e.all([this.getAvailablePricingModels(t), this.getAvailablePaymentMethod(t)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return 0 === n.length || f()(a)
                })
            },
            isBlockTvodBarVisible: function(t) {
                return t.isTVOD ? b.isBlockTvod() : e.when(!1)
            },
            getMovieExpirationDate: function(e) {
                return c.getRight(e).then(function(e) {
                    return e && e.endDate
                })
            },
            getSerieExpirationDate: function(t) {
                var n = this
                  , a = o.caUtils.toPid(R.SERIE, t.seriesId);
                return P.getSeason(a, t).then(function(a) {
                    return e.all([n.getMovieExpirationDate(a), n.getMovieExpirationDate(t)])
                }).then(function(e) {
                    return O.min.apply(O, je()(e.filter(function(e) {
                        return e
                    })))
                })
            },
            isMovieExpirationBarVisible: function(t) {
                var n = this;
                return c.hasPlaybackRights(t).then(function(a) {
                    return a ? n.getMovieExpirationDate(t).then(function(e) {
                        return e < t.licenseEnd
                    }) : e.when(!1)
                })
            },
            isSerieExpirationBarVisible: function(t) {
                var n = this
                  , a = o.caUtils.toPid(R.SERIE, t.seriesId);
                return P.getSeason(a, t).then(function(a) {
                    return e.all([n.isMovieExpirationBarVisible(a), n.isMovieExpirationBarVisible(t)])
                }).then(function(t) {
                    var n = Fe()(t, 2)
                      , a = n[0]
                      , r = n[1];
                    return e.when(a || r)
                })
            },
            isProductInsideRange: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 15;
                return T.getDiffDaysFromNow(e) > -t
            },
            getExpirationDate: function(e) {
                return e.goType === _.Episode ? this.getSerieExpirationDate(e) : this.getMovieExpirationDate(e)
            },
            isExpirationBarVisible: function(t) {
                if (!t.isTVOD)
                    return e.when(!1);
                return t.goType === _.Episode ? this.isSerieExpirationBarVisible(t) : this.isMovieExpirationBarVisible(t)
            },
            isCatalogExpirationBarVisible: function(t) {
                var n = this;
                if (!t.licenseEnd || t.licenseEnd < 0)
                    return e.when(!1);
                return c.hasPlaybackRights(t).then(function(e) {
                    return e && t.isTVOD ? n.getMovieExpirationDate(t).then(function(e) {
                        return t.licenseEnd < e
                    }) : n.isProductInsideRange(t.licenseEnd)
                })
            },
            isPlaybackErrorBarVisible: function(t) {
                return t.goType === _.LiveProgram ? e.all([this.isPlayLiveButtonVisible(t), this.isPlayLiveChannelOnNowButtonVisible(t), this.isRestartLiveButtonVisible(t)]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return !n && !a && !r
                }) : c.hasPlaybackRights(t).then(function(e) {
                    var n = t.playableMedias.length > 0;
                    return e && !n && !t.isExternalCATCHUP
                })
            },
            getRecording: function(t) {
                return n.isLoggedIn && t.goType === _.LiveProgram ? C.getRecording(t.id, t.epgProgramId, t.liveChannelId, t.startTime).catch(se.noop) : e.when(void 0)
            },
            isRecordingBarVisible: function(e) {
                return this.getRecording(e).then(function(e) {
                    return se.isDefined(e)
                })
            },
            isRecordingSeason: function(e) {
                return this.getRecording(e).then(function(e) {
                    return se.isDefined(e) && e.type === w.RecordingScheduleType.EntireSeries
                })
            },
            isRecordingBarConflicted: function(e) {
                return this.getRecording(e).then(function(e) {
                    return se.isDefined(e) && e.conflicted
                })
            },
            tryPreload: function(e) {
                e.isAnyCatchup || c.hasPlaybackRights(e).then(function(t) {
                    t && m.vod(e)
                })
            },
            getLiveSchedule: function(e) {
                return h.getScheduleByPid(e)
            },
            getLiveProgram: function(e) {
                return v.getDetailsFromSchedule(e).then(function(e) {
                    var t = e.liveProgram;
                    return t
                })
            },
            playLiveChannel: function(e) {
                var t = this;
                return A.getChannelById(e.liveChannelId).then(function(n) {
                    return y.trackEvent("liveDetail::live"),
                    e.contentWiseParams = t.getContentWiseParams(e),
                    a.start(),
                    a.trackLiveDetailPlay(),
                    i.playLiveChannel(n, e)
                })
            },
            playLiveChannelFromBeginning: function(e) {
                var t = this;
                return A.getChannelById(e.liveChannelId).then(function(n) {
                    return y.trackEvent("liveDetail::restart", {
                        CHANNELID: n.id,
                        CHANNELNAME: n.title,
                        PROGRAMID: e.id,
                        PROGRAMNAME: e.programName
                    }),
                    e.contentWiseParams = t.getContentWiseParams(e),
                    a.start(),
                    a.trackLiveDetailPlay(),
                    i.playLiveChannelFromBeginning(n, e)
                })
            },
            playLiveChannelOnNow: function(e) {
                var t = this
                  , n = T.getTime() + 1
                  , a = o.caUtils.toPid($, e.liveChannelId);
                return S.liveSchedule().get({
                    startTime: n,
                    endTime: n,
                    liveChannelPids: a
                }).then(function(e) {
                    return h.getScheduleByPid(e[0].pid)
                }).then(function(e) {
                    return t.playLiveChannel(e)
                })
            },
            playLiveChannelWithoutSchedule: function(e) {
                var t = e.liveChannelId || e.productId;
                return A.getChannelById(t).then(function(e) {
                    a.start(),
                    a.trackLiveDetailPlay(),
                    i.playLiveChannel(e, {})
                })
            },
            getCompatibleSubscriptions: function(t) {
                return (t.goType === _.LiveProgram ? A.getChannelById(t.liveChannelId).then(function(e) {
                    var t = e.subscriptions;
                    return t
                }) : e.when(t.subscriptions)).then(I.getCompatibleIds)
            },
            isSubscribeButtonVisible: function(t) {
                var n = this;
                return (t.goType === _.LiveProgram ? A.getChannelById(t.liveChannelId) : e.when(t)).then(function(t) {
                    return e.all([c.isSubscribable(t), n.getCompatibleSubscriptions(t)]).then(function(e) {
                        var t = Fe()(e, 2)
                          , n = t[0]
                          , a = t[1];
                        return n && 1 === a.length
                    })
                })
            },
            isSubscribeDropdownVisible: function(t) {
                var n = this;
                return (t.goType === _.LiveProgram ? A.getChannelById(t.liveChannelId) : e.when(t)).then(function(t) {
                    return e.all([c.isSubscribable(t), n.getCompatibleSubscriptions(t)]).then(function(e) {
                        var t = Fe()(e, 2)
                          , n = t[0]
                          , a = t[1];
                        return n && a.length > 1
                    })
                })
            },
            getSubscribeButtonData: function(e) {
                return this.getCompatibleSubscriptions(e).then(function(e) {
                    return e[0]
                })
            },
            isYellowTriangle: function(e) {
                return c.isPurchasable(e)
            },
            isOrangeTriangle: function(e) {
                return e.goType === _.LiveProgram ? A.getChannelById(e.liveChannelId).then(function(e) {
                    return c.isSubscribable(e)
                }) : c.isSubscribable(e)
            },
            isSubscribeOnlyBarVisible: function(t) {
                var n = this;
                return (t.goType === _.LiveProgram ? A.getChannelById(t.liveChannelId) : e.when(t)).then(function(t) {
                    return e.all([c.isSubscribable(t), n.getCompatibleSubscriptions(t)]).then(function(e) {
                        var t = Fe()(e, 2)
                          , n = t[0]
                          , a = t[1];
                        return n && a.length > 0
                    })
                })
            },
            isSubscribeErrorBarVisible: function(t) {
                var n = this;
                return (t.goType === _.LiveProgram ? A.getChannelById(t.liveChannelId) : e.when(t)).then(function(t) {
                    return e.all([c.isSubscribable(t), n.getCompatibleSubscriptions(t)]).then(function(e) {
                        var t = Fe()(e, 2)
                          , n = t[0]
                          , a = t[1];
                        return n && 0 === a.length
                    })
                })
            }
        }
    }
    yt.$inject = ["$routeParams", "$location", "$q", "goSvcSlug", "goSvcUtils", "goSvcLibrary", "goSvcUniapiLive", "goSvcOrderBy", "goSvcRights", "goSvcUniapiParameter", "goCnstEnumerated"],
    St.$inject = ["$q", "uaConstants", "goSvcRights", "goSvcProduct"],
    bt.$inject = ["$cookies", "goSvcUserStatus", "goSvcUtils", "goCnstEnumerated", "$injector"],
    Et.$inject = ["$q", "$window", "goSvcUserStatus", "goMdlAnalyticsSvcPerformance", "goMdlAnalyticsSvcContentWise", "goSvcPlayback", "goSvcRights", "goSvcTags", "goSvcAdultAccess", "uasMovieService", "goSvcCommercialSegmentation", "goSvcCast", "goSvcUniapiPurchase", "goMdlPlayerSvcPreload", "goSvcSchedules", "goMdlEpgSvcLive", "goMdlAnalyticsSvcManager", "goSvcCaLive", "goSvcUser", "goSvcUtils", "goSvcTime", "goSvcUniapiPvr", "goMdlDetailsSvcSeries", "goSvcSubscription", "goSvcLiveChannels", "goMdlPlayerSvcRestart", "goMdlDetailsSvcUtils", "uaConstants", "goCnstEnumerated"];
    var Tt = n(127)
      , Ct = n(128);
    function Pt(e, t) {
        "ngInject";
        var n = G.a.features
          , a = Object(Tt.a)().getResult()
          , r = a.browser.name || "unknown"
          , o = parseInt(a.browser.major) || 0
          , i = a.os.name || "unknown"
          , c = a.os.version || "unknown"
          , s = /Android/.test(i)
          , l = /iOS/.test(i)
          , u = /Windows\sPhone/.test(i)
          , d = /BlackBerry/.test(i)
          , g = s || l || u || d;
        function p(e) {
            function t(e, t) {
                return !(!L()(e) || !L()(t)) && (e.toLowerCase() === t.toLowerCase() || "!" === e.charAt(0) && e.substring(1).toLowerCase() !== t.toLowerCase() || "*" === e)
            }
            var n, a, s, l, u, d = (l = e.split(":"),
            u = l[1].split("-"),
            {
                browser: l[0],
                minBrowserVersion: u[0],
                maxBrowserVersion: u[1] || u[0],
                os: l[2],
                osVersion: l[3]
            });
            return t(d.browser, r) && t(d.os, i) && t(d.osVersion, c) && (a = d.maxBrowserVersion,
            (s = o) >= ("*" === (n = d.minBrowserVersion) ? 0 : n) && s <= ("*" === a ? 1e4 : a))
        }
        function m(t) {
            var n, a = [], r = !0, o = !1;
            return D()(t, function(t, i) {
                p(i) && (a.push(e("translate")(t.message || t)),
                r = !1 !== t.ableToReproduce && r,
                o = t.hideSuggestions,
                n = t.title)
            }),
            {
                title: n,
                messages: a,
                isPlaybackAllowed: r,
                hideSuggestions: o
            }
        }
        var f, h = m(n.playbackUnsupportedBrowsers), v = m(n.transparentCatchupUnsupportedBrowsers), y = {
            title: h.title,
            messages: h.messages,
            isPlaybackAllowed: h.isPlaybackAllowed,
            hideBrowserSuggestions: h.hideSuggestions,
            transparentCatchupMessages: v.messages,
            transparentCatchupPlaybackAllowed: v.isPlaybackAllowed,
            isNavigationSupported: (f = n.navigationSupportedBrowsers || [],
            G.a.allowedBots.some(function(e) {
                return new RegExp(e).test(a.ua)
            }) || f.some(p)),
            isHttpsRequiredInPlayer: function() {
                var e = t.player.html5SecureOrigin || [];
                return 0 === window.location.protocol.indexOf("https") || e.some(p)
            }(),
            isWidevineBrowser: !g && (/Chrome/.test(r) || /Firefox/.test(r))
        };
        return Object.assign(y, Object(Ct.a)()),
        y.isDashSupported = y.browser.pc.chrome || y.browser.pc.firefox,
        y
    }
    Pt.$inject = ["$filter", "goCnstSetup"];
    var It = n(355);
    var At = n(27)
      , Mt = n.n(At);
    function Nt(e, t, n, a) {
        "ngInject";
        var r = n.externalAuth.common
          , o = r.tokenExpiration
          , i = r.localStorageKey;
        return {
            encode: l,
            decode: u,
            verify: function(e, t) {
                return c(e),
                l(u(e), t) === e
            }
        };
        function c(e) {
            if (!L()(e) || -1 === e.indexOf("."))
                throw new Error("Token is invalid")
        }
        function s(e) {
            return Mt.a.enc.Base64.stringify(e).replace(/=+$/, "").replace(/\+/g, "-").replace(/\//g, "_")
        }
        function l(n, r) {
            var c = Object.assign({}, {
                url: e.url(),
                expiration: a.getTime(!0) + o
            }, n)
              , l = r || function() {
                var e = Mt.a.HmacSHA256(a.getTime(!0).toString(), Mt.a.lib.WordArray.random(16)).toString();
                return t.setLocalItem(i, e),
                e
            }()
              , u = s(Mt.a.enc.Utf8.parse(JSON.stringify({
                alg: "HS256",
                typ: "HWT"
            })))
              , d = s(Mt.a.enc.Utf8.parse(JSON.stringify(c)))
              , g = [u, d].join(".");
            return [u, d, s(Mt.a.HmacSHA256(g, l))].join(".")
        }
        function u(e) {
            c(e);
            var t, n, a = e.split(".")[1];
            return t = a,
            n = Mt.a.enc.Base64.parse(t).toString(Mt.a.enc.Utf8),
            JSON.parse(n)
        }
    }
    function wt(e, t, n, a, r, o) {
        "ngInject";
        var i = r.servicesTypes.l7dServiceTypeName;
        return {
            activate: function() {
                return o.trackEvent("settings::activateL7d"),
                t.acceptL7dAgreement().then(function(t) {
                    return a.openSuccess({
                        title: "l7d.popup.title",
                        message: "l7d.popup.".concat(t),
                        accept: "common.accept"
                    }).result.catch(function() {
                        return e.when()
                    })
                }
                .bind(null, "activationOk")).catch(function(t) {
                    return a.openError({
                        title: "l7d.popup.title",
                        message: "l7d.popup.".concat(t),
                        accept: "common.accept"
                    }).result.then(function() {
                        return e.reject()
                    })
                }
                .bind(null, "activationError"))
            },
            checkContract: function() {
                return t.hasToAcceptL7dAgreement().then(function(e) {
                    return e && a.openL7dActivation().result
                })
            },
            checkInstanceAvailability: function() {
                return n.allInstanceServices().get({}).then(function(e) {
                    return !!e.filter(function(e) {
                        return e.Title === i
                    }).length
                })
            }
        }
    }
    function Lt(e, t, n, a, r) {
        "ngInject";
        var o = r.go.landing.cookie
          , i = r.go.landing.route
          , c = null;
        return {
            showIfEnabled: function() {
                return t.path() === i && !n.get(o.key) && s().enabled ? (n.createExpirationCookie(o.key, !0, o.expiration),
                t.path("/landing"),
                e.when(!0)) : e.when()
            },
            get: s
        };
        function s() {
            return c || (e = a.getAll() || {},
            c = {
                enabled: !!e.ExternalLandingPage,
                url: e.ExternalLandingPage,
                height: e.ExternalLandingPageHeight || 0
            });
            var e
        }
    }
    function $t(e, t, n, a, r, i, c, s, l, u, d) {
        "ngInject";
        var g = o.caTypes.MENU_TYPE
          , p = o.caTypes.CONTENT_TYPES
          , m = o.caTypes.CHANNEL_CONTENT_TYPE
          , f = o.caTypes.COMMERCIALIZATION_TYPES
          , h = [p.MOVIE, p.SERIE].join(",")
          , v = f.NETWORK_CATCHUP
          , y = [f.CATCHUP, f.EXTERNAL_CATCHUP, f.FREE_VOD, f.SVOD, f.TRANSPARENT_CATCHUP, f.TVOD, f.UNKNOWN].join("|")
          , S = p.LIVE_SCHEDULE
          , b = i.contentWiseTypes.EXTENSION;
        return {
            getRoot: function() {
                return $().then(E)
            },
            getChannel: E,
            getChildren: T,
            getTvod: function() {
                return a.getTvodChannelId().then(E)
            },
            getCatchup: function() {
                return a.getCatchupChannelId().then(E)
            },
            getChannelsTree: function() {
                return $().then(function(e) {
                    return T(e)
                }).then(function(e) {
                    return R(e, w)
                })
            },
            getFirstChildren: function(t, n) {
                return T(t, n).then(function(t) {
                    return t[0] || e.reject()
                })
            },
            getHomeChannels: function() {
                return C({
                    ca_RequiresPin: !1,
                    menuType: g.Categories
                })
            },
            getHeaderChannels: function() {
                return C({
                    ca_RequiresPin: !0,
                    menuType: g.TopMenu
                })
            },
            extendFromChannelContentType: function(e, t) {
                var n, a;
                switch (t) {
                case m.LIVE:
                    n = S;
                    break;
                case m.VOD:
                    n = h,
                    a = y;
                    break;
                case m.L7D:
                    n = h,
                    a = v;
                    break;
                case m.VOD_L7D:
                    n = h;
                    break;
                case m.VOD_LIVE:
                case m.L7D_LIVE:
                default:
                    n = "".concat(h, ",").concat(S)
                }
                Object.assign(e || {}, {
                    contentTypes: n,
                    ca_commercializationType: a
                })
            },
            getPersonalExtensionContents: function(t) {
                return e.all([a.getHomeCarouselContents(), l.GetPersonalChannelContents({
                    extensionId: t
                })]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1]
                      , r = d.getDeepProperty(a, "data.Content", []);
                    return Object(he.flatten)(Object(he.map)(r, "Movies")).splice(0, n)
                }).then(function(e) {
                    return e.map(u)
                })
            }
        };
        function E(t, n) {
            return D(n).then(function(n) {
                var a = n.find(function(e) {
                    return e.id === parseInt(t, 10)
                });
                return a ? e.when(a) : e.reject()
            })
        }
        function T(e, t) {
            return D(t).then(function(t) {
                return t.filter(function(t) {
                    return t.parentChannelId === e
                })
            })
        }
        function C(n) {
            var i = n.ca_RequiresPin
              , l = n.menuType
              , u = l === g.TopMenu ? P : I;
            return e.all([D({
                ca_RequiresPin: i
            }), function(n) {
                if (n === g.TopMenu || s.isAnonymousLoggedIn || a.isPanicModeActiveSync())
                    return e.when([]);
                return t.allExtensionsChannels().get().then(function(n) {
                    var o = []
                      , i = n.filter(function(e) {
                        if (1 !== e.extensionType)
                            return !0;
                        o.push(e)
                    });
                    return function(n, o) {
                        return a.isCWEnabled().then(function() {
                            return e.all(n.map(function(e) {
                                return r.getConfig(b, e.customUxrPage).then(function(e) {
                                    return function(e, n) {
                                        var r = {
                                            px_skip_compose: !1
                                        };
                                        return a.getHomeCarouselContents().then(function(a) {
                                            return t.extensions(e).get(Object.assign({}, r, {
                                                limit: a,
                                                ca_commercialOffer: n
                                            }, e.requestParams))
                                        })
                                    }(e, o)
                                }).then(function(t) {
                                    return function(e, t) {
                                        return t.map(function(t, n) {
                                            var a = t.SectionTitle
                                              , r = t.List;
                                            return Object.assign({}, e, {
                                                titleInMenu: a,
                                                id: "".concat(e.id, "_").concat(n),
                                                pid: "".concat(e.pid, "_").concat(n),
                                                items: r.map(c)
                                            })
                                        })
                                    }(e, t)
                                })
                            }))
                        }).then(he.flatten).catch(function() {
                            return e.when([])
                        })
                    }(i, s.isLoggedIn ? s.profile.commercialOffer : null).then(function(e) {
                        return o.concat(e).sort(function(e, t) {
                            return e.parentChannelId - t.parentChannelId || e.order - t.order
                        })
                    })
                })
            }(l), t.allMenuChannels().get().catch(function() {
                return e.when([])
            })]).then(function(t) {
                var n, a = Fe()(t, 3), r = a[0], c = a[1], s = a[2].filter(function(e) {
                    return e.menuType === l
                }).sort(function(e) {
                    return e.isPC ? -1 : 1
                });
                if (s.length) {
                    var d = s[0].childPids.map(function(e) {
                        return r.find(function(t) {
                            var n = t.pid;
                            return e === n
                        })
                    }).filter(se.isDefined);
                    n = d.length ? e.when(d) : u(i)
                } else
                    n = u(i);
                return n.then(function(e) {
                    return function(e, t) {
                        var n = Object.assign([], e);
                        return Object(he.toPairs)(Object(he.groupBy)(t, "parentChannelId")).forEach(function(e) {
                            var t, a = Fe()(e, 2), r = a[0], i = a[1];
                            n.some(function(e, n) {
                                var a = e.id
                                  , i = e.position;
                                if (r === "".concat(a))
                                    return t = i === o.caTypes.ANCHOR_EXTENSION_POSITION.Top ? n : n + 1,
                                    !0
                            }),
                            t >= 0 && n.splice(t, 0, i)
                        }),
                        Object(he.flatten)(n)
                    }(e, c)
                })
            })
        }
        function P(t) {
            return $().then(function(e) {
                return T(e, {
                    ca_RequiresPin: t
                })
            }).then(function(t) {
                var n = t.findIndex(function(e) {
                    return e.isCatchup
                });
                if (-1 !== n) {
                    var a = t[n];
                    t.splice(n, 1),
                    t.unshift(a)
                }
                return e.when(t)
            })
        }
        function I() {
            return $().then(function(e) {
                return T(e, {
                    ca_RequiresPin: !1
                })
            })
        }
        function A(e) {
            return a.getCatchupChannelId().then(function(t) {
                if (t) {
                    var n = e.find(function(e) {
                        return e.id === t
                    });
                    n && (n.isRootCatchup = !0,
                    n.isCatchup = !0,
                    function e(t, n) {
                        t.forEach(function(a) {
                            a.parentChannelId === n.id && (a.isCatchup = !0,
                            a.parentChannelTitle = n.title,
                            n.isRootCatchup && (a.isRootCatchupChildren = !0),
                            e(t, a))
                        })
                    }(e, n))
                }
                return e
            })
        }
        function M(e) {
            return a.getTvodChannelId().then(function(t) {
                if (t) {
                    var n = e.find(function(e) {
                        return e.id === t
                    });
                    n && (n.isTvod = !0)
                }
                return e
            })
        }
        function N(e) {
            return $().then(function(t) {
                var n = e.find(function(e) {
                    return e.id === t
                });
                return n && (n.isRoot = !0),
                e.forEach(function(e) {
                    e.isRootChildren = e.parentChannelId === t
                }),
                e
            })
        }
        function w(e) {
            return T(e.id).then(function(t) {
                return e.channels = t,
                R(t, w)
            })
        }
        function L(e) {
            return e.forEach(function(t) {
                t.hasChildren = e.some(function(e) {
                    return e.parentChannelId === t.id
                })
            }),
            e
        }
        function $() {
            return n.getAsync("RootChannelId")
        }
        function R(t, n) {
            return e.all(t.map(function(t) {
                return n(t).catch(function() {
                    return e.when()
                })
            })).then(function() {
                return t
            })
        }
        function D() {
            var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).ca_RequiresPin
              , n = s.isLoggedIn ? s.profile.commercialOffer : null;
            return t.allChannels().get({
                ca_commercialOffer: n
            }).then(L).then(A).then(M).then(N).then(function(t) {
                return function(e, t) {
                    return t ? a.isAdultsEnabled().then(function(t) {
                        return t ? e : e.filter(function(e) {
                            return !e.isAdult
                        })
                    }) : e.filter(function(e) {
                        return !e.isAdult
                    })
                }(t, e)
            })
        }
    }
    function Rt(e, t) {
        "ngInject";
        return {
            getLinks: function() {
                return e.all([t.getAsync("GooglePlayUrl"), t.getAsync("AppleStoreUrl")]).then(function(e) {
                    return {
                        android: e[0] || "",
                        ios: e[1] || ""
                    }
                })
            }
        }
    }
    Nt.$inject = ["$location", "goSvcWebStorage", "goCnstEnumerated", "goSvcTime"],
    wt.$inject = ["$q", "goSvcUser", "goSvcCaShared", "goMdlPopUpsSvcManager", "goCnstEnumerated", "goMdlAnalyticsSvcManager"],
    Lt.$inject = ["$q", "$location", "goSvcCookies", "goSvcUniapiSettings", "goCnstConfig"],
    $t.$inject = ["$q", "goSvcCaShared", "goSvcUniapiSettings", "goSvcUniapiParameter", "goMdlAnalyticsSvcContentWise", "goCnstEnumerated", "goModelCaAbstractContent", "goSvcUserStatus", "uasChannelService", "goModelAbstractContent", "goSvcUtils"],
    Rt.$inject = ["$q", "goSvcUniapiSettings"];
    var Dt = n(28)
      , _t = n.n(Dt);
    function Ot(e, t, n, a, r, o, i) {
        "ngInject";
        var c = i.PlaybackType.PlaybackRight
          , s = i.PlaybackType.NonPlayback;
        return {
            getAllChannels: function() {
                return n.isLoggedIn ? this.getAllUserChannels() : this.getAllAnonymousChannels()
            },
            getChannelTypeByProperty: function(e, t, n) {
                return e[c].find(function(e) {
                    return e[t] === n
                }) || e[s].find(function(e) {
                    return e[t] === n
                })
            },
            getChannelById: function(e) {
                var t = this;
                return this.getAllAnonymousChannels().then(function(n) {
                    return t.getChannelTypeByProperty(n, "id", e)
                })
            },
            getUserChannelById: function(t) {
                var a = this;
                return n.isLoggedIn ? this.getAllUserChannels().then(function(e) {
                    return a.getChannelTypeByProperty(e, "id", t)
                }) : e.reject()
            },
            getChannelByCallLetter: function(e) {
                var t = this;
                return this.getAllAnonymousChannels().then(function(n) {
                    return t.getChannelTypeByProperty(n, "callLetter", e)
                })
            },
            checkPlaybackChannelsExistance: l,
            adaptAnonymousChannelsReturn: u,
            getAllAnonymousChannels: function() {
                return t.channels().get().then(u).then(l).then(p)
            },
            filterByUserRights: d,
            filterByChannelMaps: g,
            addStreamsToChannels: p,
            getAllUserChannels: function() {
                return e.all([this.getAllAnonymousChannels(), a.getUserRights()]).then(d).then(g).then(l)
            }
        };
        function l(t) {
            return t[c].length ? e.when(t) : e.reject()
        }
        function u(e) {
            var t, n = (t = {},
            _t()(t, c, []),
            _t()(t, s, []),
            t);
            return e.forEach(function(e) {
                var t = e.isPlayback ? c : s;
                n[t].push(e)
            }),
            n
        }
        function d(e) {
            var t = Fe()(e, 2)
              , n = t[0]
              , a = t[1];
            return D()(n, function(e, t) {
                n[t] = e.filter(function(e) {
                    return a.some(function(t) {
                        return e.subscriptions.some(function(e) {
                            return t.id === e
                        })
                    })
                })
            }),
            n
        }
        function g(t) {
            return r.getChannelMappingSync() && n.isLoggedIn ? a.getUserChannelMapId().then(function(e) {
                return D()(t, function(n, a) {
                    t[a] = n.filter(function(t) {
                        return -1 !== t.channelMaps.indexOf(e)
                    }).map(function(t) {
                        return t.channelNumber = t.channelMapNumber.get(e),
                        t
                    })
                }),
                t
            }) : e.when(t)
        }
        function p(e) {
            var n = e[c]
              , a = n.map(function(e) {
                return e.mediaPids
            }).reduce(function(e, t) {
                return e.concat(t)
            });
            return t.streams(a).then(function(t) {
                return n.forEach(function(e) {
                    e.mediaPids.forEach(function(n) {
                        var a = t.find(function(e) {
                            return e.pid === n
                        });
                        a && e.urlList.push(a)
                    })
                }),
                n.forEach(function(e) {
                    e.urlList = o.getFiltered(e.urlList, e.maxQuality)
                }),
                e
            })
        }
    }
    function Ut(e, t, n, a, r, i, c, s) {
        "ngInject";
        var l = r.$on("$routeUpdate", function() {
            return d()
        })
          , u = r.$on("$routeChangeSuccess", function() {
            return a(d)
        });
        return r.$on("$destroy", function() {
            l && l(),
            u && u()
        }),
        {
            check: d,
            redirect: function(e, n) {
                t.url("".concat(c.routes.live, "/").concat(s.encodeId(o.caUtils.getId(e), n)))
            },
            openPopup: function(n) {
                e.current.$$route.reloadOnSearch = !1,
                t.search("lid", n)
            },
            closePopup: function() {
                t.search("lid", null),
                t.search("ref", null)
            }
        };
        function d() {
            var r = t.search().lid
              , o = e.current;
            r && i.openLiveDetails({
                liveDetailPid: r
            }).result.catch(function(e) {
                o.$$route.reloadOnSearch = !1,
                e && n.history.back()
            }).finally(function() {
                a(function() {
                    o && o.$$route && (o.$$route.reloadOnSearch = !0)
                })
            })
        }
    }
    Ot.$inject = ["$q", "goSvcCaLive", "goSvcUserStatus", "goSvcUser", "goSvcUniapiParameter", "goSvcMedias", "uaConstants"],
    Ut.$inject = ["$route", "$location", "$window", "$timeout", "$rootScope", "goMdlPopUpsSvcManager", "goCnstEnumerated", "goSvcSlug"];
    var kt = n(18)
      , xt = n.n(kt);
    function jt(e, t) {
        "ngInject";
        var n = t.PlayType
          , a = t.DRMType
          , r = t.Quality;
        return {
            getFiltered: function(t) {
                var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : r.Unknown
                  , i = t.filter(function(e) {
                    var t = e.quality
                      , n = e.isAuto;
                    return t >= o && !n
                }).filter(function(t) {
                    var r = e.browser.pc.edge
                      , o = t.playType === n.SS
                      , i = t.playType === n.DASHAVC
                      , c = t.drmType === a.Widevine
                      , s = t.drmType === a.PlayReady
                      , l = t.drmType === a.Dash;
                    return r ? o && s || i && (s || l) : o && s || i && (c || l)
                }).reduce(function(e, t) {
                    var n = e.some(function(e) {
                        var n = e.playType
                          , a = e.drmType
                          , r = e.quality;
                        return n === t.playType && a === t.drmType && r === t.quality
                    });
                    return n ? e : je()(e).concat([t])
                }, []).sort(function(e, t) {
                    return t.quality - e.quality
                });
                return i.some(function(e) {
                    return e.drmType === a.Widevine || e.drmType === a.Dash
                }) ? i.filter(function(e) {
                    return e.playType === n.DASHAVC
                }) : i
            }
        }
    }
    function Bt(e, t, n, a, o, i, c, s, l, u, d) {
        "ngInject";
        var g, p = 1024, m = l.imageSizes.logo.logo, f = l.imageSizes.banner.bannerBig, h = "seoMetadata.title.default", v = "".concat(a.protocol(), "://").concat(t.location.host).concat(u.basePath), y = o("translate");
        function S(t) {
            e.metaCanonical = t ? v + t : void 0
        }
        function b(e, t) {
            g = e || h,
            E(t)
        }
        function E(e) {
            var n = {
                defaultTitle: y("seoMetadata.title.default")
            };
            t.document.title = y(g, r.a.merge(n, e))
        }
        function T(t, n) {
            var a = {
                defaultTitle: y("seoMetadata.title.default")
            };
            e.metaDescription = t ? y(t, r.a.merge(a, n)) : y("seoMetadata.description.default", a)
        }
        function C(t, n, a, r, o, i, c) {
            e.socialMeta = {
                type: t,
                title: n,
                image: r || v + l.sharingLogo,
                imageType: r && -1 === r.indexOf(".png") ? "image/jpeg" : "image/png",
                imageWidth: r ? o : p,
                imageHeight: r ? i : p,
                description: a,
                url: c ? v + c : v,
                locale: d.go.i18n.iso2,
                siteName: y("seoMetadata.title.default")
            }
        }
        function P(t, n, o, i, c, s, l, u, d) {
            var g = {
                defaultTitle: y("seoMetadata.title.default")
            };
            b(t, n),
            T(o, i),
            S(c),
            s ? C(s, y(t, r.a.merge(g, n)), y(o, r.a.merge(g, i)), l, u, d, c) : (e.socialMeta || (e.socialMeta = {}),
            Object.assign(e.socialMeta, {
                title: y(t, r.a.merge(g, n)),
                description: y(o, r.a.merge(g, i)),
                url: v + (c || a.path())
            }))
        }
        function I() {
            var t, a = {
                defaultTitle: y("seoMetadata.title.default")
            };
            b(c.getDeepProperty(n, "current.page.title") || null),
            function() {
                var t = c.getDeepProperty(n, "current.page.description")
                  , a = {
                    defaultTitle: y("seoMetadata.title.default")
                };
                e.metaDescription = y(t || "seoMetadata.description.default", a)
            }(),
            t = c.getDeepProperty(n, "current.page.canonical"),
            e.metaCanonical = t ? v + t : void 0,
            C("website", y(c.getDeepProperty(n, "current.page.title"), a), y(c.getDeepProperty(n, "current.page.description"), a), v + l.sharingLogo, p, p, c.getDeepProperty(n, "current.page.canonical"))
        }
        var A = e.$on("$routeChangeSuccess", function() {
            I(),
            A()
        })
          , M = e.$on("$locationChangeSuccess", I);
        return {
            destroy: function() {
                M()
            },
            getDescription: function() {
                return e.metaDescription
            },
            getCanonical: function() {
                return e.metaCanonical
            },
            getTitle: function() {
                return t.document.title
            },
            setDescription: T,
            setMetadata: P,
            setTitle: b,
            setCanonical: S,
            updateMetadata: I,
            updateTitle: E,
            setChannelMetadata: function(e) {
                var t, n, a, r, i, c, s = o("goFltrDetailsLink")(e);
                e.isRootCatchup ? (i = "seoMetadata.title.thematicArea.rootCatchup",
                c = "seoMetadata.description.thematicArea.rootCatchup") : e.isRootCatchupChildren && e.hasChildren ? (i = "seoMetadata.title.thematicArea.catchupChannelPage",
                c = "seoMetadata.description.thematicArea.catchupChannelPage",
                r = {
                    channel: e.title
                }) : e.isRootCatchupChildren && !e.hasChildren ? (i = "seoMetadata.title.thematicArea.contentsWithoutGenre",
                c = "seoMetadata.description.thematicArea.contentsWithoutGenre",
                r = {
                    category: e.title
                }) : (i = "seoMetadata.title.thematicArea.contents",
                c = "seoMetadata.description.thematicArea.contents",
                r = {
                    genre: e.title,
                    category: e.parentChannelTitle
                }),
                e.logo ? (t = e.logo,
                n = m.width,
                a = m.height) : e.banner ? (t = e.banner,
                a = 80) : e.parentChannelLogo ? (t = e.parentChannelLogo,
                n = m.width,
                a = m.height) : e.parentChannelBanner && (t = e.parentChannelBanner,
                a = 80),
                P(i, r, c, r, s, "product.group", t, n, a)
            },
            setDetailMetadata: function(e) {
                var t, n, a, r, o, i = s.encodeId(e.id, e.name), c = e.goType === l.goType.Movie, u = e.goType === l.goType.Serie, d = "".concat(l.routes.serie, "/"), g = "".concat(l.routes.movie, "/"), p = "".concat(l.routes.live, "/"), m = {
                    name: e.name
                }, f = e.mainImage.url, h = e.mainImage.width, v = e.mainImage.height;
                c ? (t = "seoMetadata.title.detail.default",
                n = "seoMetadata.description.detail.default",
                a = {
                    name: e.name,
                    description: e.description
                },
                r = g + i,
                o = "video.movie") : u ? (t = "seoMetadata.title.detail.default",
                n = "seoMetadata.description.detail.serie",
                a = {
                    name: e.name,
                    description: e.description
                },
                r = d + i,
                o = "video.tv_show") : (t = "seoMetadata.title.detail.live",
                n = "seoMetadata.description.detail.default",
                a = {
                    name: e.name,
                    description: e.description
                },
                r = p + i,
                o = "video.other"),
                P(t, m, n, a, r, o, f, h, v)
            },
            setMetadataSearch: function(e) {
                P("seoMetadata.title.search", {
                    search: e
                }, "seoMetadata.description.search", {
                    search: e
                })
            },
            setTemporalMetadata: function(e, t) {
                var n = s.decode(i[e]);
                if (n) {
                    var a = function(e) {
                        var t = e.replace(/-([a-z])/g, function(e) {
                            return " ".concat(e[1].toUpperCase())
                        });
                        return t.charAt(0).toUpperCase() + t.slice(1)
                    }(n.slug);
                    t({
                        id: n.id,
                        name: a,
                        title: a,
                        description: ""
                    })
                }
            },
            setMetadataSubscription: function(e) {
                P("seoMetadata.title.detail.subscription", {
                    name: e.title
                }, "seoMetadata.description.detail.subscription", {
                    name: e.title,
                    description: e.description
                }, a.path(), "video.other", e.bannerBig || e.logoBig, e.bannerBig ? f.width : l.imageSizes.logo.logoSubscription.width, e.bannerBig ? f.height : void 0)
            }
        }
    }
    function Ft(e, t, n, a, r, i, c, s, l, u, d) {
        "ngInject";
        var g = u.netflix
          , p = "".concat(u.routes.subscription, "/")
          , m = o.caTypes.CONTENT_TYPES;
        return {
            isNetflixContent: function(e) {
                return h(e) || f(e) || v(e)
            },
            redirect: function n(o) {
                var u = r.getNetflixBillingEnabledSync();
                t.isAnonymousLoggedIn ? s.login().then(n.bind(null, o)).catch(se.noop) : u ? function(t) {
                    i.getNetflixToken(g.channel, g.expirationTime, (n = r.getNetflixSubscriptionIdSync(),
                    o = "".concat(e.location.protocol, "//").concat(e.location.host).concat(d.basePath),
                    s = p + c.encodeId(n, "netflix"),
                    "".concat(o).concat(s, "?error=true"))).then(function(e) {
                        var n = e.token
                          , o = e.isCarrierBilling;
                        if (n && o) {
                            var i = r.getNetflixEndpointSync();
                            a.trackEvent("netflix::registration"),
                            l.windowAssign(i + g.partnerURL + n)
                        } else
                            o ? y() : S(t)
                    }).catch(function() {
                        return y()
                    });
                    var n, o, s
                }(o) : S(o)
            }
        };
        function f(e) {
            var t = r.getNetflixChannelsSync()
              , n = e.catalogItemPid || e.pid
              , a = e.pid && o.caUtils.getType(e.pid) === m.CHANNEL
              , i = e.pid && n && o.caUtils.getType(e.pid) === m.LINK && o.caUtils.getType(n) === m.CHANNEL
              , c = t.indexOf(n) >= 0;
            return (a || i) && c
        }
        function h(e) {
            return e.pid && o.caUtils.getType(e.pid) === o.caTypes.CONTENT_TYPES.LINK && e.url && e.url.indexOf("netflix.com") >= 0
        }
        function v(e) {
            var t = r.getNetflixSubscriptionIdSync()
              , n = e.catalogItemPid || e.pid
              , a = n && o.caUtils.getId(n)
              , i = e.pid && o.caUtils.getType(e.pid) === m.SUBSCRIPTION
              , c = e.pid && n && o.caUtils.getType(e.pid) === m.LINK && o.caUtils.getType(n) === m.SUBSCRIPTION;
            return (i || c) && a === t
        }
        function y() {
            n.openError({
                title: "netflix.error.title",
                message: "netflix.error.message",
                accept: "common.accept"
            })
        }
        function S(e) {
            var t;
            h(e) ? t = function(e) {
                var t, n = r.getNetflixMQSOTitleSync();
                return n && (t = [e.url, n].join("")),
                t
            }(e) : (f(e) || v(e)) && (t = function() {
                var e, t = r.getNetflixEndpointSync(), n = r.getNetflixMQSOChannelSync();
                return t && n && (e = [t, n].join("")),
                e
            }()),
            t ? (a.trackEvent("netflix::registration"),
            l.windowAssign(t)) : y()
        }
    }
    function Vt(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f, h) {
        "ngInject";
        var v, y = u.getLogger("CONTROLLER", "goMdlCatchupCtrlMain");
        return {
            amazonCatchupFlow: M,
            isAmazonChannel: S,
            getAmazonActivationImages: function() {
                return m.getAmazonServiceType().then(function(e) {
                    return e && f(e)
                })
            },
            launchActivationAfterPurchase: function() {
                return a.getAmazonHardBundleActivationUrl().then(function(e) {
                    return e ? C(e) : M()
                })
            },
            isAmazonContent: function(e) {
                return ((e.producer ? e.producer.title : e.producerName) || "").toLowerCase() === o.amazon.producer.toLowerCase()
            },
            launchExternalRedirection: E,
            showErrorPopUp: I
        };
        function S(e) {
            return a.getAmazonChannelPidSync() === (e.catalogItemPid || e.pid)
        }
        function b(t) {
            return t ? h.sendBatch().catch(function() {}).then(function() {
                return g.redirect(t, null, {
                    target: "_blank"
                })
            }) : e.reject()
        }
        function E(t) {
            return (S(t) ? e.resolve(p.getPcExternalUrl(t.externalUrls)) : (n = t.id,
            c.GetExtCatchUpURL({
                movieId: n,
                urlType: 0
            }).then(s("goModelExternalCatchupUrl")).catch(function() {
                return ""
            })).then(function(e) {
                return e.url
            })).then(function(t) {
                return t ? e.resolve(t) : a.getAmazonDefaultRedirectUrl()
            }).then(b);
            var n
        }
        function T(e, t) {
            return a.getAmazonHardBundleActivationUrl().then(function(n) {
                return n ? C(n) : t ? b(e) : function(e) {
                    d.path("amazon/activation").search({
                        url: e
                    })
                }(e)
            })
        }
        function C(e) {
            return (v && v.close(),
            l.openInfo({
                message: "popup.catchup.amazon.description",
                accept: "popup.catchup.amazon.button"
            })).result.then(function() {
                return b(e)
            }).catch(function() {})
        }
        function P() {
            return i.GetAmazonToken().then(function(e) {
                return s("goModelAmazonToken")(e)
            })
        }
        function I(e) {
            y.error("Error redirecting to catchup content", e || ""),
            v && v.close(),
            l.openError({
                title: "popup.catchup.error.title",
                message: "popup.catchup.error.description",
                accept: "common.accept"
            })
        }
        function A() {
            y.debug("Redirected to catchup content.")
        }
        function M(i, c) {
            return (t.isLoggedIn ? e.when() : r.login()).then(function() {
                return v = l.openRedirect({
                    message: "popup.catchup.amazon.loading"
                }),
                a.isAmazonHardBundledEnabled().then(function(t) {
                    return t ? e.when() : e.reject()
                }).then(P).then(function(t) {
                    var a = t.url;
                    switch (t.action) {
                    case o.amazon.redirect:
                        return function(e, t) {
                            return t ? g.redirectToHome() : e ? (n.trackEvent("amazon::redirect"),
                            E(e)) : void 0
                        }(i, c);
                    case o.amazon.activate:
                        return T(a, c);
                    default:
                        return c ? g.redirectToHome() : e.reject()
                    }
                }).then(A).catch(I).finally(function() {
                    v && v.close()
                })
            })
        }
    }
    function Ht(e, t, n, a) {
        "ngInject";
        var r = [o.caTypes.SORT_TYPES.PERSONAL, o.caTypes.SORT_TYPES.DEFAULT];
        return {
            getSearchDefaultOrderingsIds: function() {
                return b().then(function(e) {
                    return e.push(o.caTypes.SORT_TYPES.DEFAULT),
                    e
                }).then(h).then(function(e) {
                    return e.map(function(e) {
                        return s(e)
                    })
                })
            },
            getChannelOrder: v,
            getChannelOrderKey: function(e) {
                return v(e).then(function(e) {
                    return l(e)
                })
            },
            getSelectedOrder: y,
            getSelectedOrderKey: function(e) {
                return y(e).then(l)
            },
            getSearchSelectedOrder: S,
            getSearchSelectedOrderKey: function(e) {
                return S(e).then(l)
            },
            getDefaultOrderingsIds: function() {
                return b().then(h).then(function(e) {
                    return e.map(function(e) {
                        return s(e)
                    })
                })
            }
        };
        function i(e) {
            return e === o.caTypes.SORT_TYPES.PERSONAL
        }
        function c(e) {
            return e[Object.keys(e)[0]]
        }
        function s(e) {
            return parseInt(Object.keys(e)[0], 10)
        }
        function l(e) {
            return a.getDefaultOrderings().then(function(t) {
                var n;
                return t.some(function(t) {
                    if (e === c(t))
                        return n = s(t),
                        !0
                }),
                n
            })
        }
        function u(t) {
            return a.getDefaultOrderings().then(d).then(function(n) {
                return vt()(t) && n[t] ? n[t] : e.reject()
            })
        }
        function d(e) {
            var n = []
              , a = []
              , r = [];
            return e.forEach(function(e) {
                var t = parseInt(Object.keys(e)[0], 10);
                n.push(t),
                a.push(e[t])
            }),
            r.length = t.Math.max.apply(null, n) + 1,
            n.forEach(function(e, t) {
                r[e] = a[t]
            }),
            r
        }
        function g(e) {
            return (e ? h(e) : a.getDefaultOrderings()).then(function(e) {
                return c(e[0])
            })
        }
        function p() {
            return u(o.caTypes.SORT_TYPES.PERSONAL).catch(f)
        }
        function m(e, t) {
            return u(e).catch(function() {
                return t ? g() : ""
            })
        }
        function f() {
            return ""
        }
        function h(e) {
            return a.getDefaultOrderings().then(function(t) {
                return t.filter(function(t) {
                    return -1 === e.indexOf(s(t))
                })
            })
        }
        function v(e) {
            return a.isCWEnabled().then(function() {
                return i(e) ? n.isLoggedIn ? p() : "" : m(e)
            }).catch(function() {
                return i(e) ? "" : m(e)
            })
        }
        function y(e) {
            return a.isCWEnabled().then(function() {
                return (i(e) ? n.isLoggedIn ? p() : m(o.caTypes.SORT_TYPES.DEFAULT) : m(e)).then(function(e) {
                    return e || g(n.isAnonymousLoggedIn && [o.caTypes.SORT_TYPES.PERSONAL])
                })
            }).catch(function() {
                return m(i(e) ? o.caTypes.SORT_TYPES.DEFAULT : e).then(function(e) {
                    return e || g([o.caTypes.SORT_TYPES.PERSONAL])
                })
            })
        }
        function S(e) {
            return a.isCWEnabled().then(function() {
                var t = n.isLoggedIn && !e;
                return (t ? p() : m()).then(function(e) {
                    var n = t ? [o.caTypes.SORT_TYPES.DEFAULT] : r;
                    return e || g(n)
                })
            }).catch(function() {
                return m().then(function(e) {
                    return e || g(r)
                })
            })
        }
        function b() {
            return a.isCWEnabled().then(function() {
                return n.isAnonymousLoggedIn ? [o.caTypes.SORT_TYPES.PERSONAL] : []
            }).catch(function() {
                return [o.caTypes.SORT_TYPES.PERSONAL]
            })
        }
    }
    function Gt(e, t, n, a, r) {
        "ngInject";
        var o = r.panic
          , i = o.searchId
          , c = o.path;
        return {
            showIfEnabled: function() {
                return n.getPanicScheduleId().then(a.getScheduleByPid).then(function(n) {
                    return n && !o.urlWhitelist.some(function(e) {
                        return t.path().startsWith(e)
                    }) ? (t.path(c).search({}).search(i, n.pid),
                    e.when(!0)) : e.when()
                }).catch(function() {
                    return e.when()
                })
            }
        }
    }
    function Wt(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f, h, v, y, S, b, E, T) {
        "ngInject";
        var C, P = "player-container", I = "https", A = y.features, M = y.goPlayingType, N = y.goEvents, w = y.transparentProviders, L = v.StatusCode, $ = {}, R = [L.TransparentCatchupGeneric, L.TransparentCatchupConfiguration, L.TransparentCatchupToolboxAuthentication, L.TransparentCatchupHBOAuthorization, L.TransparentCatchupFoxAuthorization, L.TransparentCatchupFoxEntitlement, L.TransparentCatchupStartupException, L.TransparentCatchupStartPlaybackException], D = !1, _ = !1;
        return t.$on(N.PLAY_LIVE, function() {
            var e = p.get("channel")
              , t = p.get("product");
            x(!0),
            U(e, t)
        }),
        t.$on(N.PLAY_FABRIX_LIVE, function() {
            var e = p.get("channel")
              , t = p.get("product");
            a.checkFirefoxMac().then(function() {
                x(!0),
                k(e, t)
            })
        }),
        {
            playVod: O,
            playTrailer: function(t) {
                return D ? e.reject() : J().then(Y).then(X).then(function() {
                    return G(t)
                }).then(function() {
                    if (p.reset(),
                    p.set("playingType", M.trailer),
                    p.set("product", t),
                    te(),
                    !(C = W()).rendered)
                        return e.reject();
                    a.playTrailer(C)
                }).finally(Z)
            },
            playRecording: function(t) {
                var n = t.recording
                  , r = t.channel
                  , o = t.shouldResume
                  , i = void 0 !== o && o;
                return D ? e.reject() : J().then(Y).then(X).then(function() {
                    return V(n)
                }).then(q).then(function() {
                    return G(n, !0)
                }).then(function() {
                    p.reset(),
                    p.set("playingType", M.recording),
                    p.set("product", n),
                    p.set("channel", r)
                }).then(m.init).then(function() {
                    return ee(n)
                }).then(function() {
                    return C = W(),
                    te(),
                    C.rendered ? e.when() : e.reject()
                }).then(function() {
                    return p.set("isPlaybackResume", i),
                    a.playRecording(C)
                }).finally(Z)
            },
            playLiveChannel: U,
            playFabrixLive: k,
            playLiveChannelFromBeginning: function(t, n) {
                return D ? e.reject() : J().then(Y).then(X).then(i.checkContract).then(function() {
                    return B(t)
                }).then(function() {
                    return z(t)
                }).then(G).then(function() {
                    p.reset(),
                    p.set("product", n),
                    p.set("channel", t)
                }).then(m.init).then(function() {
                    return te(),
                    (C = W()).rendered ? a.playFromBeginning(C, t) : e.reject()
                }).finally(Z)
            },
            stop: x
        };
        function O(n) {
            var c = n.movie
              , s = n.serie
              , u = n.shouldResume
              , d = void 0 !== u && u;
            return D ? e.reject() : J().then(Y).then(X).then(function() {
                return (t = c).isTransparentCATCHUP && t.transparentProvider !== w.FOX_QP && t.transparentProvider !== w.HBO ? o.openError({
                    title: "player.error.title",
                    message: "player.error.general",
                    accept: "common.accept"
                }).result.then(e.reject, e.reject) : e.when();
                var t
            }).then(function() {
                return c.isTransparentCATCHUP && l.transparentCatchupMessages.length > 0 ? o.openPlaybackMessages({
                    isTransparentCatchup: !0
                }).result.then(e.reject, e.reject) : e.when()
            }).then(function() {
                return function(n) {
                    return r.isLoggedIn || n.isFree ? e.when() : j().then(function() {
                        var a = e.defer();
                        return function(e, n) {
                            var a = t.$on(N.CONTENT_UPDATED, function(t, r) {
                                a(),
                                S.hasPlaybackRights(r).then(function(t) {
                                    t ? (Object.assign(e, r),
                                    n.resolve()) : n.reject()
                                })
                            })
                        }(n, a),
                        a.promise
                    })
                }(c)
            }).then(function() {
                return function(t) {
                    return t.isNetworkCATCHUP ? a.checkFirefoxMac() : e.when()
                }(c)
            }).then(function() {
                return function(t) {
                    return t.isNetworkCATCHUP ? i.checkContract() : e.when()
                }(c)
            }).then(function() {
                return V(c)
            }).then(q).then(function() {
                return G(c)
            }).then(function() {
                p.reset(),
                p.set("playingType", M.vod),
                p.set("product", c)
            }).then(m.init).then(function() {
                return ee(c)
            }).then(function() {
                return $[b.EVENTS.BINGE_WATCHING_NEXT] = t.$on(b.EVENTS.BINGE_WATCHING_NEXT, function(e, t) {
                    var n = t.nextEpisode;
                    n && (E.trackEvent("player::nextEpisode"),
                    T.checkAndTagCompleted(),
                    _ = !1,
                    x(!0),
                    O({
                        movie: n
                    }).then().catch(x))
                }),
                $[b.EVENTS.SET_BINGE_WATCHING] = t.$on(b.EVENTS.SET_BINGE_WATCHING, function(e, t) {
                    _ = t
                }),
                te(),
                (C = W()).rendered ? e.when() : e.reject()
            }).then(function() {
                return p.set("isPlaybackResume", d),
                s && function(e) {
                    g.isFollowed(e).then(function(t) {
                        t && g.tag(e, v.TagType.Follow, !0)
                    })
                }(s),
                a.playVod(C)
            }).finally(Z)
        }
        function U(t, n) {
            return D ? e.reject() : J().then(Y).then(X).then(function() {
                return B(t)
            }).then(function() {
                return z(t)
            }).then(function() {
                p.reset(),
                p.set("playingType", M.live),
                p.set("product", n),
                p.set("channel", t)
            }).then(m.init).then(function() {
                if (te(),
                !(C = W()).rendered)
                    return e.reject();
                a.playLiveChannel(C)
            }).finally(Z)
        }
        function k(t, n) {
            return D ? e.reject() : J().then(Y).then(X).then(function() {
                return B(t)
            }).then(z).then(G).then(function() {
                p.reset(),
                p.set("playingType", M.fabrixLive),
                p.set("product", n),
                p.set("channel", t)
            }).then(m.init).then(function() {
                return te(),
                (C = W()).rendered ? e.when(C) : e.reject()
            }).then(a.playLiveFabrix).finally(Z)
        }
        function x(e) {
            Object.keys($).forEach(function(e) {
                $[e] && $[e](),
                $[e] = null
            }),
            a.destroy(e),
            D = !1
        }
        function j() {
            return h.login()
        }
        function B(t) {
            return r.isAnonymousLoggedIn ? j().then(function() {
                return F(t)
            }) : t.urlList.length ? e.when(t) : F(t)
        }
        function F(t) {
            return f.getUserChannelById(t.id).then(function() {
                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return t.urlList = n.urlList || [],
                e.when(t)
            })
        }
        function V(t) {
            return t.isFree ? e.when() : d.isParentalPinNeeded(t).then(function(n) {
                return n ? function(e) {
                    return c.trackDialogPinStart(e.id, e.movieType || e.sourceProductType),
                    o.openParentalPin().result.finally(function() {
                        c.trackDialogPinEnd(e.id, e.movieType || e.sourceProductType)
                    })
                }(t) : e.when()
            })
        }
        function H() {
            var t, n = l.isPlaybackAllowed ? e.when : e.reject;
            return t = u.get(A.cookie.key),
            (!l.isPlaybackAllowed || !t) && l.os.type.desktop && l.messages.length > 0 ? o.openPlaybackMessages().result.then(n, n) : e.when()
        }
        function G(t, n) {
            return !l.isPlaybackAllowed || !n && t && !t.availableForThisDeviceQualities ? o.openWarning({
                title: "popup.availabilityRestriction.title",
                message: "popup.availabilityRestriction.message"
            }).result.then(e.reject, e.reject) : e.when()
        }
        function W() {
            var e = a.getPopUpInstance();
            return e || o.openPlayer({
                id: P
            })
        }
        function q() {
            return o.isBrowserNavigation() ? e.reject() : e.when()
        }
        function Y() {
            return o.setBrowserNavigation(!1),
            e.when()
        }
        function z(t) {
            return r.isAnonymousLoggedIn || t.urlList && t.urlList.length > 0 ? e.when() : (S.isSubscribed(t).then(function(e) {
                e ? o.openError({
                    title: "player.error.title",
                    message: "player.error.general",
                    accept: "common.accept"
                }) : o.openInfo({
                    title: "player.error.channelNonSubscribedTitle",
                    message: "player.error.channelNonSubscribed",
                    accept: "common.accept"
                })
            }),
            e.reject())
        }
        function Q() {
            return l.browser.pc.chrome && n.protocol() !== I ? o.openInfo({
                title: "player.error.httpWarningTitle",
                message: "player.error.httpWarning",
                accept: "common.accept"
            }).result.catch(function() {
                return e.when()
            }) : e.when()
        }
        function K() {
            return l.isWidevineBrowser ? navigator.requestMediaKeySystemAccess("com.widevine.alpha", [{
                audioCapabilities: [{
                    contentType: 'audio/mp4; codecs="mp4a.40.5"',
                    robustness: ""
                }],
                videoCapabilities: [{
                    contentType: 'video/mp4; codecs="avc1.4D401E"',
                    robustness: ""
                }]
            }]).then(function(e) {
                return e.createMediaKeys()
            }).catch(function() {
                var t = l.browser.pc.chrome ? "player.error.widevineChrome" : "player.error.widevineFirefox";
                return o.openWarning({
                    title: "player.error.title",
                    message: t,
                    accept: "common.accept"
                }),
                e.reject()
            }) : e.when()
        }
        function X() {
            return (l.os.type.mobile ? o.openSmartBanner().result.then(e.reject, e.reject) : e.when()).then(H).then(q).then(Q).then(K)
        }
        function J() {
            return D = !D,
            e.when()
        }
        function Z() {
            D = !1
        }
        function ee(t) {
            return s.init(t).catch(function(t) {
                var n = t && t.error.code || 0
                  , a = R.indexOf(n) >= 0 ? t.error.message : "player.error.general";
                return o.openError({
                    title: "player.error.title",
                    message: a,
                    accept: "common.accept"
                }),
                e.reject()
            })
        }
        function te() {
            $[b.EVENTS.ENDED] = t.$on(b.EVENTS.ENDED, function() {
                !_ && x()
            })
        }
    }
    function qt(e, t, n, a, r, o, i, c, s) {
        "ngInject";
        var l = [n.PlayType.SS, n.PlayType.DASHAVC];
        return {
            getParams: function(e) {
                var t = e.isNetworkCATCHUP
                  , n = e.isCATCHUP || e.isTVOD || e.isSVOD || e.isFreeVOD || e.isTransparentCATCHUP
                  , o = t && r.getBingeWatchingPercentageL7DSync() || n && r.getBingeWatchingPercentageVODSync();
                if (e.goType === a.goType.Episode && (t || n) && (e.closingCreditsStartTime || o) && r.isBingeWatchingEnabledSync()) {
                    var i = r.getBingeWatchingCountdownSync()
                      , c = e.closingCreditsStartTime ? e.closingCreditsStartTime : Math.round(e.duration * o / 100);
                    return {
                        getNextEpisode: d,
                        getAutoplayUserPreference: u,
                        startTime: c,
                        countdown: i
                    }
                }
                return
            },
            getAutoplayUserPreference: u,
            getNextEpisode: d
        };
        function u() {
            return t.getUserPreference(a.bingeWatching.autoplay).then(function(e) {
                return "" !== e ? JSON.parse(e) : r.isAutoplayEnabledByInstanceSync()
            })
        }
        function d(t) {
            var n = t.seriesId
              , a = t.seasonId
              , r = t.episodeNumber;
            return e.getSeasonEpisodes({
                seriesId: n,
                seasonId: a
            }).then(function(e) {
                var t = r + 1
                  , n = e.find(function(e) {
                    return e.episodeNumber === t
                });
                if (n)
                    return o.hasPlaybackRights(n).then(function(e) {
                        return e ? i.GetMovie({
                            movieId: n.id,
                            playType: l
                        }).then(function(e) {
                            return c("goModelEpisode")(e)
                        }).then(function(e) {
                            return s.segmentData(e)
                        }) : void 0
                    })
            })
        }
    }
    function Yt(e, t, n, a) {
        "ngInject";
        return {
            getAllGenres: function() {
                return t.allGenres().get().catch(function() {
                    return e.when([])
                })
            },
            getGenres: function(e) {
                return this.getAllGenres().then(function(t) {
                    return t.filter(function(t) {
                        return e.includes(t.pid)
                    })
                })
            },
            getLogo: function(r) {
                var o = r.providerPids
                  , i = r.distributor
                  , c = r.isNetworkCATCHUP
                  , s = r.isAnyCatchup
                  , l = r.channelImage
                  , u = (o || [])[0];
                return c ? i ? n.getChannelByCallLetter(i.title || i).then(function(e) {
                    var t = e.logo;
                    return t
                }).catch(function() {
                    return e.when()
                }) : e.when() : l && s ? e.when(l) : t.allProvidersLogos().get().catch(function() {
                    return e.when([])
                }).then(function(e) {
                    return e.find(function(e) {
                        var t = e.pid;
                        return u === t
                    })
                }).then(function(e) {
                    return a.getDeepProperty(e, "images.logo")
                })
            }
        }
    }
    function zt(e, t, n) {
        "ngInject";
        var a = 8
          , r = t.getProperty("endpoint") + n.serviceEndpoint
          , i = o.caInterface.getContentapiPath()
          , c = ["AuthenticationService.svc/(?:Login|Renew)", "all.+contentTypes=(?:CHA|GEN)", "UserService.svc/GetUserTimestamp", "ConfigurationService.svc/GetInstanceSettings", "InstanceParameterService.svc/GetFutSettings", "InstanceParameterService.svc/GetKeyValues", "TimeService.svc/GetTime"]
          , s = []
          , l = 0;
        function u(e, t) {
            l++,
            e.resolve(t)
        }
        function d(e) {
            return function(e) {
                return -1 !== e.indexOf(r) || -1 !== e.indexOf(i)
            }(e) && !function(e) {
                return c.some(function(t) {
                    return new RegExp(t).test(e)
                })
            }(e)
        }
        function g(e) {
            var t;
            e.config && d(e.config.url) && --l < a && s.length && u((t = s.shift()).deferred, t.config)
        }
        return {
            request: function(t) {
                var n = e.defer();
                return d(t.url) ? l < a ? u(n, t) : s.push({
                    deferred: n,
                    config: t
                }) : n.resolve(t),
                n.promise
            },
            response: function(e) {
                return g(e),
                e
            },
            responseError: function(t) {
                return g(t),
                e.reject(t)
            },
            clearAll: function() {
                s = []
            }
        }
    }
    function Qt(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        "ngInject";
        var p = n("translate")
          , m = n("date")
          , f = u.goEvents;
        return {
            purchase: function(e, t, n) {
                var a = this;
                return h("init", e, n),
                this.checkIfPurchasePinIsEnabled().then(function(r) {
                    if (r)
                        return a.checkPurchasePin(e, n).then(function(r) {
                            if (r)
                                return a.requestPurchase(e, t, n, r).then(function(t) {
                                    return h("success", e, n),
                                    a.showSuccess(t)
                                })
                        })
                }).catch(function(t) {
                    return h("error", e, n),
                    a.showError(t)
                })
            },
            checkIfPurchasePinIsEnabled: function() {
                return r.isPurchasePinEnabled().then(function(n) {
                    return n || o.openWarning({
                        title: "popup.firstUse.purchase.title",
                        message: "popup.firstUse.purchase.description",
                        accept: "common.configure",
                        cancel: "common.cancel"
                    }).result.then(function(n) {
                        if (n)
                            return t.path("settings/purchase-pin"),
                            e(function() {
                                return null
                            })
                    }).catch(se.noop)
                })
            },
            checkPurchasePin: function(e, t) {
                return o.openPurchasePin({
                    movie: e,
                    price: t
                }).result.catch(se.noop)
            },
            requestPurchase: function(e, t, n, a) {
                return c.createPurchase(e, n, t, a)
            },
            showSuccess: function(e) {
                var t = s(i.getDeepProperty(e, "data.Content.Product", {})).expirationDate;
                return l.removeAll(),
                o.openSuccess({
                    title: p("popup.purchase.success.title"),
                    message: m(new Date(i.toTimestamp(t)), p("popup.purchase.success.description")),
                    accept: p("common.accept")
                }).result.catch(se.noop).finally(function() {
                    return a.$emit(f.PURCHASE_SUCCESS),
                    t
                })
            },
            showError: function(e) {
                var t = i.getProperty(e, "error");
                return o.openError({
                    title: p("popup.purchase.error.title"),
                    message: t && t.message || p("popup.purchase.error.message"),
                    accept: "common.accept"
                }).result
            }
        };
        function h(e, t, n) {
            d.sendEvent({
                event: "purchase",
                status: e,
                idProduct: t.id,
                typeProduct: t.goType,
                priceModelId: n.id,
                priceValue: n.value,
                userId: Mt.a.MD5(g.profile.id.toString()).toString()
            })
        }
    }
    function Kt(e, t, n, a, r, o, i, c, s, l, u, d) {
        "ngInject";
        var g = l.go.uniapi.config
          , p = e("translate");
        return {
            launchRegistration: function() {
                var e = n.get("RegistrationPhone");
                a.isInAppAutoLogin().then(function(e) {
                    return e ? (t = u.encode(),
                    c.buildSSORequest(t)) : a.getRegistrationUrl();
                    var t
                }).then(function(t) {
                    var n;
                    n = t,
                    new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%@_.~+&:]*)*(\\?[;&a-z\\d%@_.,~+&:=-]*)?(\\#[-a-z\\d_]*)?$","i").test(n) ? s.windowAssign(t) : e ? function(e) {
                        r.openInfo({
                            message: p("userRegistration.registrationCallPhone", {
                                registrationPhone: e
                            }),
                            accept: "common.accept"
                        })
                    }(e) : f()
                }).catch(m)
            },
            getRegistrationFields: function() {
                return i.GetRegistrationFields({
                    forModifyUser: !1
                }).then(o("goModelRegistrationField")).then(function(e) {
                    return e.sort(function(e, t) {
                        return e.position - t.position
                    })
                })
            },
            changePasswordExternal: function() {
                return a.getExternalAuthPasswordChangeUrl().then(h)
            },
            recoverPasswordExternal: function() {
                return a.getExternalAuthPasswordRecovery().then(h)
            },
            changePasswordHash: function(e) {
                var t = e.userName
                  , n = e.hash
                  , a = e.newPassword;
                return i.ChangePasswordHash({
                    userName: t,
                    hash: n,
                    newPassword: a,
                    instanceId: g.instanceIds[d.env],
                    deviceType: g.deviceType.PC
                })
            }
        };
        function m() {
            r.openError({
                title: "common.error.title",
                message: "userRegistration.registrationLoadingError",
                accept: "common.accept"
            })
        }
        function f() {
            return r.openInfo({
                message: "userRegistration.registrationCallCenter",
                accept: "common.accept"
            })
        }
        function h(e) {
            if (!e)
                return f().result;
            s.redirect(e, void 0, {
                target: "_blank"
            })
        }
    }
    function Xt(e, t) {
        var n = 250
          , a = {}
          , r = {};
        return {
            addHandler: function(o, i) {
                var c = (s = o,
                s.toString().replace(/\s/g, ""));
                var s;
                return a[c] = {
                    listener: function(e, a) {
                        return function() {
                            clearTimeout(r[a]),
                            r[a] = t(e, n, !1)
                        }
                    }(o, c),
                    useCapture: i
                },
                e.addEventListener("resize", a[c].listener, i),
                c
            },
            removeHandler: function(t) {
                e.removeEventListener("resize", a[t].listener, a[t].useCapture),
                delete r[t],
                delete a[t]
            }
        }
    }
    function Jt(e, t, n, a, r) {
        "ngInject";
        var o = r.goType;
        return {
            isPurchased: function(e) {
                var n = B()(e) ? e.productId || e.id : e
                  , a = B()(e) && e.goType === o.Episode ? e.seasonId : "";
                return t.getUserRights().then(function(e) {
                    return e.some(function(e) {
                        var t = e.id;
                        return n === t || a === t
                    })
                })
            },
            isL7dSubscribed: function(n) {
                return n.isNetworkCATCHUP ? e.all([t.isL7dContracted(), this.isSubscribed(n)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && a
                }) : e.when(!1)
            },
            isSubscribed: i,
            isPurchasable: function(t) {
                return t.isTVOD ? e.all([this.isPurchased(t), this.isL7dSubscribed(t), this.isSubscribed(t)]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return !n && !a && !r
                }) : t.goType === o.Subscription && t.userRight ? e.when(f()(t.userRight.purchaseStatusId) && t.isCompatible && t.isOtt) : e.when(!1)
            },
            isNotCompatiblePurchase: function(t) {
                return f()(t.userRight.purchaseStatusId) ? this.isPurchasable(t).then(function(t) {
                    return e.when(!t)
                }) : e.when(!1)
            },
            isSubscribable: function(t) {
                var a = t.goType === o.VodChannel;
                return t.isTVOD || a || n.isAnonymousLoggedIn ? e.when(!1) : t.goType === o.LiveChannel || t.goType === o.LiveProgram ? i(t).then(function(e) {
                    return !e
                }) : e.all([this.isPurchased(t), this.isL7dSubscribed(t), this.isSubscribed(t)]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return !n && !a && !r
                })
            },
            getPurchasedQuality: function(e) {
                var n = B()(e) ? e.productId || e.id : e;
                return t.getUserRights().then(function(e) {
                    return e.find(function(e) {
                        var t = e.id;
                        return n === t
                    }).map(function(e) {
                        var t = e.quality;
                        return t
                    })
                })
            },
            getRight: function(e) {
                var n, a;
                B()(e) ? (n = e.productId || e.id,
                a = e.subscriptions || []) : (n = e,
                a = []);
                return t.getUserRights().then(function(e) {
                    var t = e.find(function(e) {
                        var t = e.id;
                        return n === t
                    });
                    return !t && a.length && (t = e.find(function(e) {
                        var t = e.id;
                        return a.some(function(e) {
                            return e === t
                        })
                    })),
                    t
                })
            },
            hasPlaybackRights: function(t) {
                return e.all([this.isPurchased(t), this.isSubscribed(t), this.isL7dSubscribed(t)]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return n || a || r
                })
            },
            canFilterSubscribedContent: function() {
                return n.isLoggedIn && n.profile.canFilterSubscribedContents
            }
        };
        function i(n) {
            var r = n && n.subscriptions || [];
            if (n.goType === o.LiveChannel || n.goType === o.LiveProgram) {
                var i = n.goType === o.LiveProgram ? n.liveChannelId : n.productId || n.id;
                return a.getUserChannelById(i).then(function(e) {
                    return !f()(e)
                }).catch(function() {
                    return !1
                })
            }
            return 0 === r.length ? e.when(!1) : t.getUserRights().then(function(e) {
                return e.some(function(e) {
                    var t = e.id;
                    return r.some(function(e) {
                        return e === t
                    })
                })
            })
        }
    }
    function Zt(e, t, n, a, r, i, c, s, l) {
        "ngInject";
        var u, d = s.PlaybackType.PlaybackRight, g = s.PlaybackType.NonPlayback, p = c.go.strategy, m = 2, f = o.caTypes.CONTENT_TYPES, h = {};
        return {
            getSchedules: function(n, a, r) {
                return function(e, t) {
                    h[e] = {},
                    u = t
                }(a, r),
                function n(a, r, o) {
                    var i = a[r]
                      , c = h[r]
                      , s = p[r].channelsChunk;
                    !function(t, n) {
                        var a = h[n]
                          , r = {};
                        a.chunks = a.chunks || e.Math.ceil(t.length / p[n].channelsChunk),
                        a.totalChunks = a.totalChunks || a.chunks,
                        r.distances = p[n].hourlyIntervals.slice(),
                        r.interval = v(r.distances),
                        a[a.chunks] = r
                    }(i, r);
                    var l = c[c.chunks]
                      , d = (c.totalChunks - c.chunks) * s
                      , g = i.slice(d, d + s);
                    return c.chunks ? b(g, l.interval, c.chunks).then(function() {
                        return u === o && --c.chunks ? n(a, r, o) : a
                    }) : t.when(a)
                }(n, a, r)
            },
            getCurrentSchedules: function(e, t, a, o) {
                var s = v([c.go.hourlyBasis])
                  , l = {
                    liveChannelPids: y(e[t].slice(0, a)),
                    startTime: r.toServerTime(s.startTime),
                    endTime: r.toServerTime(s.endTime)
                };
                return i.getConfig(o).then(function(e) {
                    return Object.assign(l, e.requestParams),
                    n.schedules(e).get(l)
                }).then(E)
            },
            getScheduleByPid: function(e) {
                return e ? n.schedule().get({
                    contentPid: e
                }).then(function(e) {
                    return e[0]
                }) : t.reject()
            },
            invalidateOngoingRequest: function() {
                u = null
            }
        };
        function v(e, t) {
            var n = t && t.endTime || l.getTime(!0);
            return a.getTimeInterval(n, e.shift())
        }
        function y(e) {
            var t = f.LIVE_CHANNEL;
            return e.map(function(e) {
                return e.pid || t + e.id
            }).join(",")
        }
        function S(e, t, n) {
            var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : m
              , o = r.toServerTime(l.getTime(!0))
              , i = t.filter(function(t) {
                if (t.schedules = t.schedules || [],
                e.some(function(e) {
                    var n, r;
                    return t.id === e.liveChannelId && o < e.endTime && (n = t.schedules,
                    r = e,
                    !n.length || n[0].id !== r.id) && t.schedules.push(e),
                    t.isLoaded = t.schedules.length === a,
                    t.isLoaded
                }),
                t.schedules.length < a)
                    return t
            });
            return i.length && function(e, t) {
                var n = e[0].isPlayback ? d : g
                  , a = h[n][t];
                r.getProperty(a, "distances", []).length ? b(e, v(a.distances, a.interval), t) : e.forEach(function(e) {
                    e.isLoaded = !0
                })
            }(i, n),
            t
        }
        function b(e, a, o, c, s) {
            var l = {
                liveChannelPids: y(e),
                startTime: r.toServerTime(a.startTime),
                endTime: r.toServerTime(a.endTime)
            };
            return i.getConfig(s).then(function(e) {
                return Object.assign(l, e.requestParams),
                n.schedules(e).get(l).catch(function() {
                    return t.when([])
                })
            }).then(function(t) {
                return S(t, e, o, c)
            })
        }
        function E(e) {
            var t = r.toServerTime(l.getTime(!0));
            return e.filter(function(e) {
                return t < e.endTime
            })
        }
    }
    function en(e, t, n) {
        "ngInject";
        var a = n.siaErrors;
        return {
            redirectToSIA: function(n) {
                return e.manageCreditCard(n).then(function(e) {
                    t.redirect(e.formUrl, e.Params, {
                        method: "POST"
                    })
                })
            },
            getSIAErrorMessage: function(e) {
                var t = "common.SIA.errors.default";
                return D()(a, function(n, a) {
                    -1 !== n.indexOf(e) && (t = "common.SIA.errors." + a)
                }),
                t
            }
        }
    }
    function tn(e, t, n) {
        "ngInject";
        var a = t.slug.space
          , r = t.slug.charMap
          , o = new RegExp("\\".concat(a, "{2,}"),"gmi")
          , i = new RegExp("(^\\".concat(a, ")|(\\").concat(a, "$)"),"gmi")
          , c = /^(.*)\-(\d+)/;
        return {
            encode: s,
            encodeId: function(e, t) {
                return s("".concat(t, " ").concat(parseInt(e, 10)))
            },
            decode: l,
            decodeId: u,
            decodeParamId: d,
            smartDecodeParamId: function() {
                return 1 === e.url().indexOf(t.routes.catchup) && d("genre") || d("category")
            }
        };
        function s(e) {
            var n = "";
            return (e ? e.split("") : []).forEach(function(t, a) {
                var o = e.charCodeAt(a);
                o < r.length && (n += r[o])
            }),
            n = n.replace(o, a).replace(i, t.slug.blank).toLowerCase()
        }
        function l(e) {
            var t = String(e).match(c)
              , n = null;
            return t && (n = {
                id: parseInt(t[2], 10),
                slug: t[1]
            }),
            n
        }
        function u(e) {
            var t = l(e);
            return t ? t.id : isNaN(e) ? e : parseInt(e)
        }
        function d(e) {
            return u(n.current.params[e])
        }
    }
    function nn(e, t, n, a, r, o, i) {
        "ngInject";
        var c = r.socialShare
          , s = c.window.width
          , l = c.window.height
          , u = c.url.facebook
          , d = c.url.twitter
          , g = "".concat(t.protocol(), "://").concat(e.location.host).concat(o.basePath);
        function p(e) {
            return e ? g + e : n.getCanonical()
        }
        function m(e) {
            return e || n.getTitle()
        }
        function f(t) {
            var n = screen.height / 2 - s / 2
              , a = screen.width / 2 - l / 2;
            e.open(t, "sharer", "top=".concat(n, ",left=").concat(a, ", toolbar=0,status=0,width=").concat(s, ",height=").concat(l))
        }
        return {
            shareFacebook: function(e, t, n, o) {
                var c;
                e = e && (e.startsWith(r.routes.live) || e.startsWith(r.routes.epg)) ? "".concat(r.routes.epgNow, "?lid=").concat(i.decodeParamId("lid"), "&ref=facebook") : e,
                c = "".concat(u, "?u=").concat(encodeURIComponent(p(e)), "&title=").concat(encodeURIComponent(m(t))),
                n && (c += "&picture=".concat(encodeURIComponent(n))),
                o && (c += "&description=".concat(encodeURIComponent(o))),
                a.trackEvent("share::facebook", {
                    url: p(e)
                }),
                f(c)
            },
            shareTwitter: function(e, t) {
                e = e && (e.startsWith(r.routes.live) || e.startsWith(r.routes.epg)) ? "".concat(r.routes.epgNow, "?lid=").concat(i.decodeParamId("lid"), "&ref=twitter") : e,
                a.trackEvent("share::twitter", {
                    url: p(e)
                }),
                f("".concat(d, "?text=").concat(encodeURIComponent(m(t)), "&url=").concat(encodeURIComponent(p(e))))
            }
        }
    }
    function an(e, t, n, a, r, i, c, s, l, u, d, g, p, m, f, h) {
        "ngInject";
        var v = n("goFltrPricingModelText")
          , y = g.UserType
          , S = g.CatalogItemType
          , b = m.goEvents.PURCHASE_SUCCESS;
        return {
            getLiveChannels: function(e) {
                return i.subscriptionChildren().get({
                    contentPid: e.pid
                }).then(function(e) {
                    return e[0].Relations.ChildPids.filter(function(e) {
                        return o.caUtils.isType(e, o.caTypes.CONTENT_TYPES.LIVE_CHANNEL)
                    })
                }).then(function(e) {
                    return s.channelsByPids(e).get()
                })
            },
            isPortalEnabled: function() {
                var e = a.getDeepProperty(r, "profile.type", y.Unknown)
                  , n = e === y.NonTelefonica && u.isSIAEnabled()
                  , o = e === y.Telefonica && u.isSubscriptionPortalEnabled();
                return n || o || t.when(!1)
            },
            getCompatible: w,
            get: function(e) {
                return M().then(function(t) {
                    return t.filter(function(t) {
                        var n = t.subscriptionId;
                        return n === e
                    })[0]
                })
            },
            getPurchased: function() {
                return this.getPurchasedUnfiltered().then(I).then(P)
            },
            getPurchasedUnfiltered: N,
            getPurchasable: function() {
                return w().then(function(e) {
                    var n = e.map(function(e) {
                        return p.isPurchasable(e)
                    });
                    return t.all(n).then(function(t) {
                        return e.filter(function(e, n) {
                            return t[n]
                        })
                    })
                })
            },
            getCompatibleIds: function(e) {
                return w().then(function(t) {
                    return t.filter(function(t) {
                        var n = t.subscriptionId;
                        return -1 !== e.indexOf(n)
                    })
                })
            },
            cancel: function(t, n) {
                return d.cancelProduct(t.subscriptionId, g.ProductType.Subscription, n).then(function() {
                    c.clearUserServicesCache(),
                    e.$emit(b)
                })
            },
            purchase: function(t, n) {
                var a = {
                    type: g.PaymentType.Billing
                }
                  , r = t.getPricingModelsByUserType()[0];
                return d.createPurchase(t, r, a, n).then(function() {
                    c.clearUserServicesCache(),
                    e.$emit(b)
                })
            },
            splitPricingModel: function(e) {
                var t, n = v(e), a = n.lastIndexOf("/");
                t = a >= 0 ? {
                    price: n.substr(0, a),
                    recurrence: n.substr(a)
                } : {
                    price: n,
                    recurrence: ""
                };
                return t
            },
            getRelated: function(e) {
                var n = e.pid
                  , r = e.uxReferenceLayout
                  , o = e.vodDefaultOrder;
                return t.all([f.getConfig(m.contentWiseTypes.SUBSCRIPTION_RELATED, r), h.getSelectedOrder(o)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , a = t[0]
                      , r = t[1];
                    return i.related(a).get(Object.assign({
                        contentPid: n,
                        px_sub: n,
                        orderBy: r
                    }, a.requestParams))
                }).then(function(e) {
                    return function(e, t) {
                        return e.forEach(function(e, n) {
                            e.analyticsData = {
                                name: "detail::recommendation",
                                contentWise: f.createObj(e.id, e.trackId, t),
                                data: {
                                    CONTENTID: e.id,
                                    CONTENTNAME: e.name,
                                    CONTENTPOSITION: n,
                                    CONTENTPRODUCTTYPE: a.toProductTypeFromGoType(e.goType)
                                }
                            }
                        }),
                        e
                    }(e, r)
                })
            },
            isCancellationEnabled: function(e) {
                return e.isPurchasedFromDevice() ? u.isCancellationEnabled().then(function(e) {
                    return e
                }) : t.when(!1)
            },
            isAmazonSubscription: function(e) {
                var n = e.pid;
                return t.all([i.subscriptionChildren().get({
                    contentPid: n
                }), i.subscriptionsAndServiceRelation().get(), i.allServices().get()]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2]
                      , o = n[0].Relations.ProductDependenciesPids
                      , i = a.filter(function(e) {
                        return o.some(function(t) {
                            return e.Pid === t
                        })
                    })
                      , c = r.filter(function(e) {
                        return i.some(function(t) {
                            return e.Pid === t.Relations.ProductDependenciesPids[0]
                        })
                    })
                      , s = c.some(function(e) {
                        return e.Title.toLowerCase() === m.amazon.service.toLowerCase()
                    });
                    return s
                }).catch(function() {
                    return !1
                })
            }
        };
        function E(e) {
            if (0 === e.length)
                return t.when(e);
            var n = e.map(function(e) {
                return e.pid
            });
            return i.externalURLs(n).get().then(function(t) {
                return e.forEach(function(e) {
                    t.forEach(function(t) {
                        e.pid === t.Pid && t.List.length && (e.url = t.List[0].Url)
                    })
                }),
                e
            })
        }
        function T(e) {
            return r.isLoggedIn ? N().then(function(t) {
                var n = t.reduce(function(e, t) {
                    return e.concat(t.incompatible)
                }, []);
                return e.map(function(e) {
                    return e.setCompatible(-1 === n.indexOf(e.subscriptionId)),
                    e
                })
            }) : e.map(function(e) {
                return e.setCompatible(!0),
                e
            })
        }
        function C(e) {
            return r.isLoggedIn ? c.getUserRights().then(function(t) {
                return e.forEach(function(e) {
                    t.forEach(function(t) {
                        e.subscriptionId !== t.id || t.catalogItemType !== S.Subscription && t.catalogItemType !== S.VodSubscription && t.catalogItemType !== S.LiveSubscription || e.setUserRight(t)
                    })
                }),
                e
            }) : e
        }
        function P(e) {
            return e.filter(function(e) {
                return e.isVisible
            })
        }
        function I(e) {
            return e.filter(function(e) {
                return e.isOtt
            })
        }
        function A(e) {
            return l.pricingModels().get().then(function(t) {
                return e.forEach(function(e) {
                    return e.setPricingModels(t)
                }),
                e
            })
        }
        function M() {
            return i.allSubscriptions().get(function(e) {
                return e.sort(function(e, t) {
                    return e.title > t.title ? 1 : t.title > e.title ? -1 : 0
                })
            }).then(I).then(P).then(A).then(E).then(C).then(T)
        }
        function N() {
            return r.isAnonymousLoggedIn ? t.when([]) : i.allSubscriptions().get().then(E).then(C).then(function(e) {
                var n = e.map(function(e) {
                    return p.isPurchased(e)
                });
                return t.all(n).then(function(t) {
                    return e.filter(function(e, n) {
                        return t[n]
                    })
                })
            })
        }
        function w() {
            return M().then(function(e) {
                return e.filter(function(e) {
                    return e.isCompatible
                })
            })
        }
    }
    function rn(e, t, n, a, r, o, i, c, s, l, d, g, p, m) {
        "ngInject";
        var f = p.TagType
          , h = p.AdultFilterType
          , v = p.ProductType;
        return {
            isWatched: function(e) {
                return this.is(e, f.Watched)
            },
            isCompleted: function(e) {
                return this.is(e, f.Completed)
            },
            isFavorite: function(e) {
                return this.is(e, f.Favorite)
            },
            isFollowed: function(e) {
                return this.is(e, f.Follow)
            },
            is: function(e, n) {
                return o.isAnonymousLoggedIn ? t.when(!1) : this.get(n).then(function(t) {
                    return t.some(function(t) {
                        var n = t.id;
                        return n === e.id
                    })
                })
            },
            get: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : h.All;
                return n.GetUserTags({
                    tagType: e,
                    adultFilter: t
                }).then(function(e) {
                    return a("goModelTaggedProduct")(e)
                })
            },
            getTaggedProducts: function(e) {
                return this.get(e, h.NonAdultOnly).then(function(e) {
                    return c.segmentData(e)
                })
            },
            tag: function(e, t, a) {
                var o = e.productId
                  , i = s.fromGoTypeToProductType(e.goType);
                return n.TagProduct({
                    productId: o,
                    productType: i,
                    tagType: t,
                    tagValue: a
                }).then(function() {
                    return r.removeAll()
                })
            },
            untag: function(e, t) {
                var a = e.goType === m.goType.Episode && t === f.Follow
                  , o = a ? e.seriesId : e.productId
                  , i = a ? v.Serie : s.fromGoTypeToProductType(e.goType);
                function c() {
                    return n.UntagProduct({
                        productId: o,
                        productType: i,
                        tagType: t
                    }).then(function() {
                        return r.removeAll()
                    })
                }
                return t === f.Watched ? n.UntagProduct({
                    productId: o,
                    productType: i,
                    tagType: f.Completed
                }).then(c) : c()
            },
            setMovieResumeData: function(t, n) {
                var a = Object(u.b)(g.getSelectedTextLanguage())
                  , o = Object(u.b)(g.getSelectedAudioLanguage())
                  , i = g.getLastCurrentTime();
                (o || i > 0) && l.SetMovieResumeData({
                    movieId: t.productId,
                    time: n ? -1 : parseInt(i, 10),
                    subtitleId: d.getSubtitleId(a) || -1,
                    audioCode: o
                }).then(function() {
                    r.removeAll(),
                    e.$emit(m.goEvents.RESUME_UPDATED)
                })
            },
            setItemResumeData: function(t, n) {
                var a = t.id
                  , o = t.itemType
                  , i = Object(u.b)(g.getSelectedTextLanguage())
                  , c = Object(u.b)(g.getSelectedAudioLanguage())
                  , s = g.getLastCurrentTime();
                (c || s > 0) && l.SetItemResumeData({
                    itemId: a,
                    itemType: o,
                    time: n ? -1 : parseInt(s, 10),
                    audioCode: c,
                    subtitleCode: i
                }).then(function() {
                    r.removeAll(),
                    e.$emit(m.goEvents.RESUME_UPDATED)
                })
            },
            toggleFavorite: function(e) {
                return this.toggleStatus(e, f.Favorite)
            },
            toggleFollow: function(e) {
                return this.toggleStatus(e, f.Follow)
            },
            toggleStatus: function(e, t) {
                var n = this;
                return o.isAnonymousLoggedIn ? i.login().catch(se.noop) : this.get(t).then(function(a) {
                    var r = a.some(function(t) {
                        var n = t.id;
                        return n === e.id
                    });
                    return r ? n.untag(e, t) : n.tag(e, t, !0)
                })
            }
        }
    }
    function on(e, t) {
        "ngInject";
        return {
            getPcMatchingUrl: n,
            getPcExternalUrl: function(e) {
                if (!e)
                    return;
                return C()(e) ? e.map(n).find(function(e) {
                    return !!e
                }) : this.getPcMatchingUrl(e)
            },
            openLinkInNewTab: function(t, n) {
                t.preventDefault(),
                e.open(n)
            }
        };
        function n(e) {
            var n = e.match(new RegExp("^".concat(t.go.uniapi.config.deviceType.PC, "_(.+)$")));
            return C()(n) && n[1]
        }
    }
    function cn(e, t) {
        "ngInject";
        return {
            execEvery: function(n, a, r, o) {
                var i = t.defer()
                  , c = i.promise
                  , s = r || 100
                  , l = "boolean" != typeof o || o;
                return e(function t(n, a, r, o, i, c) {
                    return a < r ? function() {
                        n(a),
                        e(t(n, ++a, r, o, i, c), o, c)
                    }
                    : i.resolve
                }(n, 0, a, r, i, l), s, l),
                c
            }
        }
    }
    function sn(e, t, n, a, r) {
        "ngInject";
        var o, i = r.getLogger("SERVICE", "goSvcTime"), c = 60, s = 60 * c, l = 24 * s, u = a.go.uniapi.config.discretTimeInterval, d = e.Math;
        return {
            getTime: g,
            getDiscretizedTime: function(e) {
                var t = new Date(g(!0))
                  , a = u / c;
                t.setSeconds(0),
                t.setMinutes(d.floor(t.getMinutes() / a) * a);
                var r = t.getTime();
                e || (r = n.toServerTime(r));
                return r
            },
            getDiffDaysFromNow: function(e) {
                var t = this.getTime()
                  , a = new Date(n.toTimestamp(t)).setHours(0, 0, 0, 0)
                  , r = new Date(n.toTimestamp(e)).setHours(0, 0, 0, 0)
                  , o = a - r;
                return d.floor(d.ceil(o / 1e3) / l)
            },
            getDiffHoursFromNow: function(e) {
                var t = this.getTime()
                  , a = new Date(n.toTimestamp(t))
                  , r = new Date(n.toTimestamp(e))
                  , o = a - r;
                return d.floor(d.ceil(o / 1e3) / s)
            },
            getUniapiTime: function() {
                return t.GetTime().then(function(e) {
                    return o = e.data.Content - n.toServerTime(Date.now()),
                    i.debug("Local machine delay respect server is: ", o),
                    e.data.Content
                })
            },
            isExpired: function(e) {
                return g() > e
            }
        };
        function g(e) {
            var t = Date.now()
              , a = o || 0;
            return e ? a = n.toTimestamp(a) : t = n.toServerTime(t),
            t + a
        }
    }
    function ln(e) {
        "ngInject";
        var t = e.go.hourlyBasis
          , n = [24];
        return function() {
            for (; n[0]; )
                n.unshift(n[0] - t)
        }(),
        {
            getTimeInterval: function(e, t) {
                var r, o = new Date(e), i = o.getHours();
                return n.some(function(e, t) {
                    var c = i < e;
                    return c && (r = a(o, n[t - 1])),
                    c
                }),
                {
                    startTime: r,
                    endTime: a(o, new Date(r).getHours() + t)
                }
            }
        };
        function a(e, t) {
            return e.setHours(t, 0, 0)
        }
    }
    function un(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s = i.go.uniapi.login.cookie
          , l = i.go.uniapi.login.trustedDevice
          , u = {
            Renew: "Renew",
            LoginAnonymous: "LoginAnonymous"
        }
          , d = {
            Authentication: "AuthenticationService"
        }
          , g = 3600
          , p = /^Login(?!Anonymous)/
          , m = r.getLogger("SERVICE", "goSvcTokenCookieInterceptor");
        return {
            response: function(r) {
                !function(e) {
                    var t = h(e)
                      , a = p.test(t)
                      , r = t === u.Renew && !!n.get(s.key);
                    return f(e) && (a || r)
                }(r) ? function(e) {
                    return f(e) && h(e) === u.LoginAnonymous
                }(r) && (m.debug("LoginAnonymous method detected"),
                m.debug("Expiring cookie on entry", s.key),
                n.expire(s.key),
                n.expire(l.key)) : (m.debug("Login or Renew method detected"),
                function(r) {
                    var i = a.getDeepProperty(r, "data.Content", {})
                      , u = i.Token
                      , d = i.Expiration;
                    if (u) {
                        t.remember || "true" === o.getLocalItem("remember") ? (h = u,
                        m.debug("Creating expiration cookie on entry", s.key),
                        n.createExpirationCookie(s.key, h, s.expiration)) : function(e) {
                            m.debug("Creating session cookie on entry", s.key),
                            n.createSessionCookie(s.key, e)
                        }(u);
                        var p = c.get("goSvcTime")
                          , f = d - g - e.Math.trunc(p.getTime());
                        n.createExpirationCookie(l.key, !0, f)
                    }
                    var h
                }(r));
                return r
            }
        };
        function f(e) {
            return a.getDeepProperty(e, "config.uniapi.service", "") === d.Authentication
        }
        function h(e) {
            return a.getDeepProperty(e, "config.uniapi.method", "")
        }
    }
    function dn(e, t) {
        "ngInject";
        var n = {
            Renew: "Renew"
        }
          , a = {
            Authentication: "AuthenticationService"
        };
        return {
            response: function(r) {
                if (function(t) {
                    var r = function(t) {
                        return e.getDeepProperty(t, "config.uniapi.method", "")
                    }(t) === n.Renew;
                    return function(t) {
                        return e.getDeepProperty(t, "config.uniapi.service", "") === a.Authentication
                    }(t) && r
                }(r)) {
                    var o = t.get("goSvcUniapiParameter");
                    o.cleanFutSettingsError()
                }
                return r
            }
        }
    }
    jt.$inject = ["goSvcFeature", "uaConstants"],
    Bt.$inject = ["$rootScope", "$window", "$route", "$location", "$filter", "$routeParams", "goSvcUtils", "goSvcSlug", "goCnstEnumerated", "goCnstApp", "goCnstConfig"],
    Ft.$inject = ["$window", "goSvcUserStatus", "goMdlPopUpsSvcManager", "goMdlAnalyticsSvcManager", "goSvcUniapiParameter", "goSvcUniapiAuthentication", "goSvcSlug", "goSvcAuthentication", "goSvcUtils", "goCnstEnumerated", "goCnstApp"],
    Vt.$inject = ["$q", "goSvcUserStatus", "goMdlAnalyticsSvcManager", "goSvcUniapiParameter", "goSvcAuthentication", "goCnstEnumerated", "uasAuthenticationService", "uasMovieService", "goSvcCast", "goMdlPopUpsSvcManager", "goSvcLogger", "$location", "goSvcUtils", "goSvcThirdParty", "goSvcUser", "goModelImages", "goMdlAnalyticsSvcUniapi"],
    Ht.$inject = ["$q", "$window", "goSvcUserStatus", "goSvcUniapiParameter"],
    Gt.$inject = ["$q", "$location", "goSvcUniapiParameter", "goSvcSchedules", "goCnstEnumerated"],
    Wt.$inject = ["$q", "$rootScope", "$location", "goMdlPlayerSvcManager", "goSvcUserStatus", "goMdlPopUpsSvcManager", "goSvcL7d", "goMdlAnalyticsSvcPerformance", "goMdlPlayerSvcResume", "goSvcFeature", "goSvcCookies", "goSvcUniapiPin", "goSvcTags", "goMdlPlayerSvcStatus", "goMdlPlayerSvcAnalytics", "goSvcLiveChannels", "goSvcAuthentication", "uaConstants", "goCnstEnumerated", "goSvcRights", "ngSpMainCnst", "goMdlAnalyticsSvcPlayer", "goMdlPlayerSvcTag"],
    qt.$inject = ["goMdlDetailsSvcSeries", "goSvcUser", "uaConstants", "goCnstEnumerated", "goSvcUniapiParameter", "goSvcRights", "uasMovieService", "goSvcCast", "goSvcCommercialSegmentation"],
    Yt.$inject = ["$q", "goSvcCaShared", "goSvcLiveChannels", "goSvcUtils"],
    zt.$inject = ["$q", "goSvcUniapi", "goCnstApp"],
    Qt.$inject = ["$q", "$location", "$filter", "$rootScope", "goSvcUniapiPin", "goMdlPopUpsSvcManager", "goSvcUtils", "goSvcUniapiPurchase", "goModelProduct", "goMdlCachesSvcGetMovie", "goCnstEnumerated", "goSvcGoogleTagManager", "goSvcUserStatus"],
    Kt.$inject = ["$filter", "$q", "goSvcUniapiSettings", "goSvcUniapiParameter", "goMdlPopUpsSvcManager", "goSvcCast", "uasRegistrationService", "goSvcUniapiAuthentication", "goSvcUtils", "goCnstConfig", "goSvcJsonWebToken", "goCnstApp"],
    Xt.$inject = ["$window", "$timeout"],
    Jt.$inject = ["$q", "goSvcUser", "goSvcUserStatus", "goSvcLiveChannels", "goCnstEnumerated"],
    Zt.$inject = ["$window", "$q", "goSvcCaLive", "goSvcTimeDiscretizer", "goSvcUtils", "goMdlAnalyticsSvcContentWise", "goCnstConfig", "uaConstants", "goSvcTime"],
    en.$inject = ["goSvcUniapiPurchase", "goSvcUtils", "goCnstEnumerated"],
    tn.$inject = ["$location", "goCnstEnumerated", "$route"],
    nn.$inject = ["$window", "$location", "goSvcMetadata", "goMdlAnalyticsSvcManager", "goCnstEnumerated", "goCnstApp", "goSvcSlug"],
    an.$inject = ["$rootScope", "$q", "$filter", "goSvcUtils", "goSvcUserStatus", "goSvcCaSubscriptions", "goSvcUser", "goSvcCaLive", "goSvcCaPurchase", "goSvcUniapiParameter", "goSvcUniapiPurchase", "uaConstants", "goSvcRights", "goCnstEnumerated", "goMdlAnalyticsSvcContentWise", "goSvcOrderBy"],
    rn.$inject = ["$rootScope", "$q", "uasUserService", "goSvcCast", "goMdlCachesSvcGetUserTags", "goSvcUserStatus", "goSvcAuthentication", "goSvcCommercialSegmentation", "goSvcUtilsModel", "uasPlaybackService", "goMdlPlayerSvcCc", "ngSpManagerSvc", "uaConstants", "goCnstEnumerated"],
    on.$inject = ["$window", "goCnstConfig"],
    cn.$inject = ["$timeout", "$q"],
    sn.$inject = ["$window", "uasTimeService", "goSvcUtils", "goCnstConfig", "goSvcLogger"],
    ln.$inject = ["goCnstConfig"],
    un.$inject = ["$window", "goSvcUserStatus", "goSvcCookies", "goSvcUtils", "goSvcLogger", "goSvcWebStorage", "goCnstConfig", "$injector"],
    dn.$inject = ["goSvcUtils", "$injector"];
    var gn = n(176)
      , pn = n(354)
      , mn = n.n(pn)
      , fn = n(167);
    function hn(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f, h, v, y, S, b) {
        "ngInject";
        var E = S.trustedDeviceKey
          , T = S.externalAuth.sso.params.path
          , C = S.externalAuth.oidc
          , P = C.name
          , I = C.nonce
          , A = C.params
          , M = A.path
          , N = A.logout
          , w = A.payloadDevice
          , L = y.go.uniapi.login.trustedDevice
          , $ = i.getLogger("SERVICE", "goSvcUniapiAuthentication");
        return {
            getNetflixToken: function(e, t, n) {
                return g.GetNetflixToken({
                    channel: e,
                    expirationTime: t,
                    tokenErrorUrl: n
                }).then(s("goModelNetflixToken"))
            },
            getSessionToken: F,
            getSignedSAMLRequest: function(e) {
                return $.debug("Creating signed login link with relayState:", e),
                g.GetSignedSAMLRequest({
                    deviceRelayState: e
                }).then(function(e) {
                    return p.getDeepProperty(e, "data.Content")
                })
            },
            getOIDCAuthRequest: function(e, n) {
                return $.debug("Building OIDC URL"),
                g.BuildOIDCAuthRequest({
                    payloadDevice: e,
                    deviceCallbackUrl: "".concat(t.document.querySelector("base").href).concat(M),
                    deviceId: n
                }).then(function(e) {
                    var t = p.getDeepProperty(e, "data.Content");
                    return f.setLocalItem("".concat(P, ".").concat(I), t.nonce),
                    t
                })
            },
            getOIDCLogoutRequest: function(e) {
                return g.BuildOIDCLogoutRequest({
                    payloadDevice: e,
                    deviceCallbackUrl: "".concat(t.document.querySelector("base").href).concat(N),
                    deviceId: f.getLocalItem(E)
                }).then(function(e) {
                    var t = p.getDeepProperty(e, "data.Content");
                    return f.removeLocalItem("".concat(P, ".").concat(I)),
                    t.LogoutUrl
                })
            },
            buildSSORequest: function(e) {
                return $.debug("Created signed login link with payloadDevice:", e),
                g.BuildSSORequest({
                    payloadDevice: e,
                    deviceCallbackUrl: "".concat(t.location.href).concat(T.substr(1))
                }).then(function(e) {
                    return p.getDeepProperty(e, "data.Content")
                })
            },
            getUser: V,
            login: function(t) {
                return t ? (a = (n = t).userName,
                r = n.userPass,
                a && r ? (h.sendBatch(),
                g.LoginUserPassword({
                    userName: a,
                    password: r
                }).then(R).then(x).then(D)) : e.reject()) : F() && 0 === F().indexOf("AU_") ? H() : O();
                var n, a, r
            },
            logout: B,
            recoverPasswordHash: function(e, t) {
                return g.RecoverPasswordHash({
                    userName: e,
                    hash: t
                })
            },
            recoverPasswordLink: function(e) {
                return g.RecoverPasswordLink({
                    userName: e
                })
            },
            removeDeviceIdFromLocalStorage: function(e) {
                f.getLocalItem(E) === e && f.removeLocalItem(E)
            },
            checkAndSetUserProfile: function() {
                return F() ? H() : e.when()
            },
            createTrustedDeviceId: k,
            setUserInfo: H
        };
        function R(e) {
            return V().then(function(t) {
                return c.profile = t,
                e
            })
        }
        function D(e) {
            return $.debug("User logged in."),
            c.isLoggedIn = !0,
            c.isAnonymousLoggedIn = !1,
            e
        }
        function _(e) {
            return $.debug("User anonymous logged in."),
            c.isLoggedIn = !1,
            c.isAnonymousLoggedIn = !0,
            c.profile = null,
            f.removeLocalItem("remember"),
            e
        }
        function O() {
            return g.LoginAnonymous().then(_)
        }
        function U(t) {
            return g.LoginTrustedDevice({
                deviceId: t
            }).then(function() {
                f.setLocalItem(E, t)
            }).catch(function(t) {
                return f.removeLocalItem(E),
                e.reject(t)
            })
        }
        function k() {
            var e = o.getTime()
              , n = t.Math.floor(1e8 * t.Math.random() + 1);
            return Mt.a.MD5("".concat(e, "-").concat(n))
        }
        function x() {
            var t, a = (t = {},
            n.path() === M && (t = u.decode(p.getSearchParam(w)) || {}),
            t.deviceId || k());
            return d.RegisterTrustedDevice({
                trustedDeviceTypeId: y.go.uniapi.config.deviceType.PC,
                friendlyName: [l.os.name, l.os.version, l.browser.name, l.browser.version].join(" "),
                trustedDeviceId: a
            }).then(function() {
                return U(a)
            }).catch(function() {
                return e.reject({
                    error: {
                        code: b.StatusCodeDeviceNotRegistered,
                        message: "auth.error.trustedDevice"
                    }
                })
            })
        }
        function j() {
            var t = f.getLocalItem(E);
            return m.get(L.key) ? e.when() : t ? U(t) : x()
        }
        function B() {
            return h.sendBatch(),
            v.deleteUserTvSession(),
            e.when((n = f.getLocalItem(E),
            n && d.RemoveTrustedDevice({
                trustedDeviceTypeId: y.go.uniapi.config.deviceType.PC,
                trustedDeviceId: "".concat(n)
            }).finally(function() {
                return f.removeLocalItem(E)
            }),
            t)).then(O);
            var t, n
        }
        function F() {
            return a.token && 0 !== a.token.indexOf("AU_") && (a.token = void 0),
            a.token
        }
        function V() {
            return r.GetUser().then(s("goModelUser"))
        }
        function H(t) {
            return F() ? R(t).then(j).then(D).catch(B) : e.reject()
        }
    }
    function vn(e) {
        "ngInject";
        return {
            addEventBatch: function(t) {
                return e.AddEventBatch({
                    eventData: JSON.stringify(t)
                })
            }
        }
    }
    function yn(e, t, n, a) {
        "ngInject";
        var r = n.getLogger("SERVICE", "goSvcUniapiInterests");
        return {
            getInstanceInterests: function() {
                return t.GetInstanceInterests().then(a("goModelInterest")).catch(function(t) {
                    return r.error("There was an error getting interests:", t),
                    e.reject(t)
                })
            },
            getUserInterests: function() {
                return t.GetUserInterests().then(a("goModelInterest")).catch(function(t) {
                    return r.error("There was an error getting user interests:", t),
                    e.reject(t)
                })
            },
            manageUserInterests: function(n) {
                return t.ManageUserInterests({
                    interestIds: n
                }).catch(function(t) {
                    return r.error("There was an error setting user interests: " + t),
                    e.reject(t)
                })
            }
        }
    }
    function Sn(e, t, n, a, r, o) {
        "ngInject";
        var i = n.go.live
          , c = o.servicesTypes.liveServiceTypeName;
        return {
            isAvailableForUser: function() {
                return e.all([r.allInstanceServices().get({}).then(function(e) {
                    return e.some(function(e) {
                        var t = e.Title;
                        return t === c
                    })
                }).then(function(t) {
                    return t ? a.isLiveServiceEnabled().catch(function() {
                        return !0
                    }) : e.when(!0)
                }), s(), l()]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2];
                    return n && a && r
                })
            },
            isAvailableInTheInstance: function() {
                return e.all([s(), l()]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && a
                })
            }
        };
        function s() {
            return e.when(i)
        }
        function l() {
            return t.getAsync("EnableLiveOtt")
        }
    }
    function bn(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        "ngInject";
        var p, m = r.getLogger("SERVICE", "goSvcUniapiParameter"), h = i.go.uniapi.config, v = "global", y = "gvp.player", S = "gvp.web", b = i.go.goMdlCatchup.providers, E = o.youboraIntegrationLevel, T = i.go.uniapi.config.deviceType.PC, C = o.trustedDeviceKey, P = {}, I = !0;
        return {
            getAnalyticsConfig: function() {
                return w(S).then(function(e) {
                    return {
                        batchSize: t.getDeepProperty(e, "ANALYTICS.ANALYTICS_BATCH_SIZE"),
                        batchTimeLimit: t.getDeepProperty(e, "ANALYTICS.ANALYTICS_BATCH_TIME_LIMIT"),
                        youboraIntegrationLevel: t.getDeepProperty(e, "ANALYTICS.YOUBORA_INTEGRATION_LEVEL", E.Both)
                    }
                })
            },
            getCatchupChannelId: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.CHANNELMAP.VOD_CHANNEL_CATCHUP_ID")
                })
            },
            getChannelMapping: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.CHANNELMAP.ENABLE_CHANNEL_MAPPING", !1)
                })
            },
            getChannelMappingSync: function() {
                return t.getDeepProperty(R(), "global.CHANNELMAP.ENABLE_CHANNEL_MAPPING", !1)
            },
            getCatchupProviders: function() {
                return L()
            },
            getChildrenGenreId: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.GENERAL.GENRE_CHILDREN_ID", null)
                })
            },
            getCWRecomms: N,
            getDefaultOrderings: function() {
                return L().then(function(e) {
                    var n = t.getDeepProperty(e, "global.GENERAL.DEFAULT_ORDERINGS", {}).ORDER_DEFINITION || [];
                    return n.forEach(function(e) {
                        return parseInt(Object.keys(e), 10)
                    }),
                    n
                })
            },
            getAudioOrder: function() {
                return A().then(function(e) {
                    return t.getProperty(e, "AUDIO", "")
                }).then(function(e) {
                    return e.split(",")
                })
            },
            getRegistrationUrl: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "INAPP.URL_REGISTRATION", "")
                })
            },
            getExternalAuthRegistrationUrl: function() {
                return w(v).then(function(e) {
                    return t.getDeepProperty(e, "SSO.EXTERNAL_AUTH_TV_REGISTER", "")
                })
            },
            isInAppAutoLogin: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "INAPP.AUTOLOGIN_REGISTRATION", !1)
                })
            },
            isExternalAuth: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.SSO.EXTERNAL_AUTH", !1)
                })
            },
            getExternalAuthPasswordChangeUrl: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.SSO.EXTERNAL_AUTH_PASSWORD_CHANGE")
                })
            },
            getHomeCarouselNumber: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.HOME_CAROUSEL_NUMBER", 20)
                })
            },
            getHomeCarouselContents: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.HOME_CAROUSEL_CONTENTS", 40)
                })
            },
            getSubtitleOrder: function() {
                return A().then(function(e) {
                    return t.getProperty(e, "SUBTITLE", "")
                }).then(function(e) {
                    return e.split(",")
                })
            },
            getLanguageOrder: A,
            getNetflixChannelsSync: function() {
                var e = [];
                try {
                    e = JSON.parse(t.getDeepProperty(R()[S], "NETFLIX.NETFLIX_CHANNELS_THIRDPARTY_AREA", "[]"))
                } catch (e) {
                    m.warning("JSON not well formed for: gvp.web.NETFLIX.NETFLIX_CHANNELS_THIRDPARTY_AREA")
                }
                return e
            },
            getNetflixEndpointSync: function() {
                return t.getDeepProperty(R(), "global.NETFLIX.ENDPOINT_REVENUESHARE", null)
            },
            getNetflixSubscriptionIdSync: function() {
                return t.getDeepProperty(R()[S], "NETFLIX.SUBSCRIPTION_ID")
            },
            getNetflixBillingEnabledSync: function() {
                return t.getDeepProperty(R(), "global.NETFLIX.BILLING_ENABLED", !1)
            },
            getNetflixMQSOChannelSync: function() {
                return t.getDeepProperty(R()[S], "NETFLIX.MQSO_CHANNEL")
            },
            getNetflixMQSOTitleSync: function() {
                return t.getDeepProperty(R()[S], "NETFLIX.MQSO_TITLE")
            },
            getOnlineChannelImage: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, ["global.GENERAL.COL_IMAGE_URL", T].join("."))
                })
            },
            getOnlineChannelLink: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, ["global.GENERAL.COL_URL", T].join("."))
                })
            },
            getPlayerResumeBounds: function() {
                return L().then(function(e) {
                    var t = e[y]
                      , n = t.RESUME;
                    return {
                        lower: n.LOWER_BOUND,
                        upper: n.UPPER_BOUND
                    }
                })
            },
            getSpotlightUrlSync: function() {
                return t.getDeepProperty(R()[v], "GENERAL.SPOTLIGHT_HTTPS_URL", o.spotlight.defaultUrl)
            },
            getStartPlaybackQuality: function() {
                var e = c.Quality.HighDefinitionFull;
                return w(S).then(function(n) {
                    return t.getDeepProperty(n, "PLAYER.STARTPLAY_QUALITY", e)
                })
            },
            getTvodChannelId: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.CHANNELMAP.TVOD_ROOT_CHANNEL_ID")
                })
            },
            isAdultsEnabled: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.ADULTS_ENABLED", !1)
                })
            },
            isCancellationEnabled: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.SUBSCRIPTIONS.BU_CANCEL_ENABLED", !1)
                })
            },
            isCWEnabled: function() {
                return N().then(function(e) {
                    return t.getDeepProperty(e, "GENERAL_RECOMM_ACTIVE")
                }).then(function(t) {
                    return s.enableRecomms && t ? e.when() : e.reject()
                })
            },
            isNotificationsEnabled: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.NOTIFICATIONS_ENABLED", !1)
                })
            },
            getRemotePvrEnabledParameter: M,
            isRemotePvrEnabled: function() {
                return e.all([M(), w(S)]).then(function(e) {
                    var n = Fe()(e, 2)
                      , a = n[0]
                      , r = n[1];
                    return f()(a) ? t.getDeepProperty(r, "DEFAULTSETTINGS.RPVR_ENABLED", !1) : a
                })
            },
            isCloudPvrEnabled: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.FEATURE_TOGGLES.CPVR_ENABLED", !1)
                })
            },
            isSIAEnabled: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.SIA.SIA_ENABLED", !1)
                })
            },
            isSubscriptionPortalEnabled: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, ["global.SUBSCRIPTIONS.SUBSCRIPTIONS_AREA_ENABLED", T].join("."), !1)
                })
            },
            getCDNBuffer: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.PLAYBACK.BUFFER_CDN", 0)
                })
            },
            isTvodEnabled: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.TVOD_ENABLED", !1)
                })
            },
            getPanicScheduleId: function() {
                return w(S).then(function(n) {
                    var a = t.getDeepProperty(n, "DEFAULTSETTINGS.PANIC_BUTTON_ACTIVATION")
                      , r = a && t.getDeepProperty(n, "DEFAULTSETTINGS.PANIC_BUTTON_PID", "");
                    return r ? e.when(r) : e.reject()
                })
            },
            getFutDeviceTypeSync: function() {
                return p
            },
            getExternalAuthType: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.SSO.EXTERNAL_AUTH_TYPE", -1)
                })
            },
            getAuthType: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "AUTH.AUTH_TYPE", -1)
                })
            },
            getExternalAuthPasswordRecovery: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.SSO.EXTERNAL_AUTH_PASSWORD_RECOVERY")
                })
            },
            getTotalUpsellingSubs: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.UPSELLING_CAROUSEL_CONTENTS", 10)
                })
            },
            getRecommendationsCarouselNumber: function() {
                return w(S).then(function(e) {
                    return t.getDeepProperty(e, "DEFAULTSETTINGS.DETAIL_RECOM_NUMBER", 10)
                })
            },
            getInvalidateCacheMinutes: function() {
                return w(v).then(function(e) {
                    return t.getDeepProperty(e, "GENERAL.INVALIDATE_CACHE_MINUTES", o.networkCatchupCacheInvalidation.defaultRange)
                })
            },
            getShowOnlySubscribedByDefault: function() {
                return w(v).then(function(e) {
                    return t.getDeepProperty(e, "COMMERCIAL_OFFER.SHOW_ONLY_SUBSCRIBED_BY_DEFAULT", !1)
                })
            },
            isPanicModeActiveSync: function() {
                return t.getDeepProperty(R()[S], "DEFAULTSETTINGS.PANIC_BUTTON_ACTIVATION", !1)
            },
            getAmazonChannelPidSync: function() {
                var e;
                try {
                    e = t.getDeepProperty(R(), ["global.AMAZON.AMAZON_CHANNELS_THIRDPARTY_AREA", T].join("."), "[]")
                } catch (e) {
                    m.warning("JSON not well formed for: global.AMAZON.AMAZON_CHANNELS_THIRDPARTY_AREA")
                }
                return e
            },
            getAmazonDefaultRedirectUrl: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.AMAZON.AMAZON_HARD_BUNDLE_DEFAULT_REDIRECT_URL.".concat(T), t.getDeepProperty(e, "global.AMAZON.AMAZON_HARD_BUNDLE_DEFAULT_REDIRECT_URL.default"))
                })
            },
            isAmazonHardBundledEnabled: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.AMAZON.AMAZON_HARD_BUNDLE_ENABLED_OB", !1) && t.getDeepProperty(e, ["global.AMAZON.AMAZON_HARD_BUNDLE_ENABLED_DEVICES", T].join("."), !1)
                })
            },
            getAmazonHardBundleActivationUrl: function() {
                return L().then(function(e) {
                    return t.getDeepProperty(e, "global.AMAZON.AMAZON_HARD_BUNDLE_ACTIVATION_URL")
                })
            },
            getUseVsppDashSync: function() {
                return t.getDeepProperty(R(), "global.GENERAL.USE_VSPP_DASH", !1)
            },
            isBingeWatchingEnabledSync: function() {
                return t.getDeepProperty(R()[S], "BINGE_WATCHING.BINGE_WATCHING_ENABLED", !1) && t.getDeepProperty(R()[v], "FEATURE_TOGGLES.BINGE_WATCHING_ENABLED", !1)
            },
            isAutoplayEnabledByInstanceSync: function() {
                return t.getDeepProperty(R()[S], "BINGE_WATCHING.BINGE_WATCHING_AUTOPLAY", !0)
            },
            getBingeWatchingCountdownSync: function() {
                var e = t.getDeepProperty(R()[S], "BINGE_WATCHING.BINGE_WATCHING_POPUP_DURATION", 10);
                return 0 === e ? 10 : e
            },
            getBingeWatchingPercentageVODSync: function() {
                return t.getDeepProperty(R()[S], "BINGE_WATCHING.BINGE_WATCHING_DEFAULT_CREDITS_TIME_PERCENTAGE_VOD", 100)
            },
            getBingeWatchingPercentageL7DSync: function() {
                return t.getDeepProperty(R()[S], "BINGE_WATCHING.BINGE_WATCHING_DEFAULT_CREDITS_TIME_PERCENTAGE_LND", 100)
            },
            getTeltooChannelIdsSync: function() {
                return t.getDeepProperty(R()[S], "PLAYER.TELTOO_CHANNELS", [])
            },
            cleanCache: function() {
                g.removeAll(),
                P = {},
                _(),
                L()
            },
            cleanFutSettingsError: _
        };
        function A() {
            return L().then(function(e) {
                return t.getDeepProperty(e, "global.LANGUAGE_ORDER", "")
            })
        }
        function M() {
            return L().then(function(e) {
                return t.getDeepProperty(e, "global.FEATURE_TOGGLES.RPVR_ENABLED")
            })
        }
        function N() {
            return L().then(function(e) {
                return Object.assign(t.getDeepProperty(e, "global.RECOMM"), t.getDeepProperty(e, "global.RECOMM_STATUS"))
            })
        }
        function w(e) {
            return L().then(function(t) {
                return t[e]
            })
        }
        function L() {
            return d.isLoggedIn ? I ? n.GetFutSettings({
                instanceId: h.instanceIds[u.env],
                deviceTypeId: i.go.uniapi.config.deviceType.PC,
                trustedDeviceId: l.getLocalItem(C)
            }).then(function(e) {
                var n = e.data.Content;
                return p = t.getDeepProperty(n, "FutDeviceTypes", ""),
                n || {}
            }).then(function(e) {
                return $(e.SettingsPartitions)
            }).catch(function() {
                return p = void 0,
                I = !1,
                $()
            }) : $() : (p = void 0,
            _(),
            $())
        }
        function $(e) {
            return n.GetKeyValues({
                instanceId: h.instanceIds[u.env],
                partitions: e,
                components: [v, y, S].concat((r = [],
                D()(b, function(e) {
                    r.push(t.getProperty(e, "nameInPlatform"))
                }),
                r)).join(",")
            }).then(a("goModelParameters")).then(function(e) {
                return P = e,
                e
            }).catch(se.noop);
            var r
        }
        function R() {
            return 0 === Object.keys(P).length && m.error("Getting a parameter sync before launching GetKeyValues"),
            P
        }
        function _() {
            I = !0
        }
    }
    function En(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s = c.UserPinType;
        return {
            getAgeRatingValue: function() {
                return a.getUser().then(function(e) {
                    return e.minimumAgeRating
                })
            },
            setAgeRatingValue: function(e, t) {
                return m().then(function(n) {
                    return n ? l(t, e) : function(e) {
                        return d(e, s.ParentalControl)
                    }(e).then(function() {
                        return l(t, e)
                    })
                }).then(u)
            },
            isParentalControlActive: m,
            disableParentalPin: function(t) {
                return function(t, n) {
                    return e.DisablePin({
                        pinType: n,
                        pin: t
                    }).then(u)
                }(t, s.ParentalControl)
            },
            disableParentalPinFirstUse: function() {
                return e.ChangePinFirstUse({
                    pinType: s.ParentalControl,
                    value: !1
                })
            },
            getAgeRatings: function() {
                return (n.get("AgeRatings") || []).map(r).sort(function(e, t) {
                    return e.value - t.value
                })
            },
            changeParentalPin: function(e, t) {
                return g(e, t, s.ParentalControl)
            },
            checkParentalPin: function(e) {
                return p(e, s.ParentalControl)
            },
            isParentalPinFirstUsed: function() {
                return a.getUser().then(function(e) {
                    return e.parentalPin.firstUse
                })
            },
            isPurchasePinEnabled: function() {
                return a.getUser().then(function(e) {
                    return e.purchasePin && e.purchasePin.enabled
                })
            },
            setPurchasePin: function(e) {
                return d(e, s.PurchaseControl)
            },
            changePurchasePin: function(e, t) {
                return g(e, t, s.PurchaseControl)
            },
            checkPurchasePin: function(e) {
                return p(e, s.PurchaseControl)
            },
            isParentalPinNeeded: function(e) {
                return a.getUser().then(function(t) {
                    var n = o.getDeepProperty(t, "parentalPin.enabled")
                      , a = o.getProperty(t, "minimumAgeRating");
                    return n && e.ageRating.value >= a
                })
            }
        };
        function l(e, n) {
            return t.SetMinimumAgeRating({
                ageRatingId: e,
                pin: n
            })
        }
        function u() {
            i.removeAll()
        }
        function d(t, n) {
            return e.EnablePin({
                pinType: n,
                pin: t
            }).then(u)
        }
        function g(t, n, a) {
            return e.ChangePin({
                pinType: a,
                pin: t,
                newPin: n
            }).then(u)
        }
        function p(t, n) {
            return e.CheckPin({
                pinType: n,
                pin: t
            })
        }
        function m() {
            return a.getUser().then(function(e) {
                return e.parentalPin && e.parentalPin.enabled
            })
        }
    }
    function Tn(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d = l.MovieSortType
          , g = l.RecurrenceType
          , p = s.callbackSIAPaths
          , m = u.go.paymentMethodsAvailable;
        return {
            createPurchase: function(e, t, a, r) {
                return n.CreatePurchase({
                    productId: e.productId,
                    productType: i.toProductTypeFromGoType(e.goType),
                    pricingModelId: t.id,
                    paymentType: a.type,
                    pin: r
                }).then(function(e) {
                    return c.removeAll(),
                    e
                })
            },
            getAvailablePaymentMethods: function(e, t) {
                return n.GetAvailablePaymentMethods({
                    productTypeId: e,
                    productId: t
                }).then(a("goModelPaymentMethod")).then(function(e) {
                    return e && e.length > 0 ? e.filter(function(e) {
                        return m.some(function(t) {
                            return e.type === l.PaymentType[t]
                        })
                    }) : []
                }).catch(function() {
                    return []
                })
            },
            getAvailablePricingModels: function(e, t, r) {
                return n.GetAvailablePricingModels({
                    productTypeId: e,
                    productId: t,
                    playType: r
                }).then(a("goModelPricingModel")).then(function(e) {
                    return e.filter(function(e) {
                        return e.recurrenceType !== g.Custom || e.recurrenceDays > 0
                    })
                }).catch(function() {
                    return []
                })
            },
            getMyRentedMovies: function(t) {
                var n = function(e) {
                    return r.GetUserRentedProducts({
                        offset: 0,
                        limit: 100,
                        sort: d.ExpirationDateRentalOnly,
                        adultFilter: e || l.AdultFilterType.NonAdultOnly
                    }).then(a("goModelRentedProduct")).then(function(e) {
                        return e.filter(function(e) {
                            return e.goType === s.goType.Movie || e.goType === s.goType.Episode || e.goType === s.goType.Season
                        })
                    })
                }(t)
                  , i = e.all([n, o.GetUserResumeData()]).then(f);
                return {
                    rentedMovies: n,
                    resumeValues: i
                }
            },
            manageCreditCard: function(e) {
                var a = "".concat(t[0].baseURI.replace(/(.*)\/$/, "$1"), "/")
                  , r = p[e];
                return n.ManageCreditCard({
                    clientUrlOk: a + r.ok,
                    clientUrlKo: a + r.nok
                }).then(function(e) {
                    return i.getDeepProperty(e, "data.Content")
                })
            },
            getCreditCard: function() {
                return n.GetCreditCard().then(a("goModelCreditCard"))
            },
            cancelProduct: function(e, t, a) {
                return n.CancelProduct({
                    productId: e,
                    productTypeId: t,
                    pin: a
                }).then(function(e) {
                    return c.removeAll(),
                    e
                })
            }
        };
        function f(e) {
            var t = e[0]
              , n = a()(e[1]);
            return t.every(function(e) {
                return n.some(function(t, a) {
                    if (e.id === t.MovieId)
                        return Object.assign(e, {
                            resumeValue: i.getProperty(t, "Time", [])
                        }),
                        n.splice(a, 1)
                }),
                n.length
            }),
            t
        }
    }
    hn.$inject = ["$q", "$window", "$location", "uaScope", "uasUserService", "goSvcTime", "goSvcLogger", "goSvcUserStatus", "goSvcCast", "goSvcFeature", "goSvcJsonWebToken", "uasRegistrationService", "uasAuthenticationService", "goSvcUtils", "goSvcCookies", "goSvcWebStorage", "goMdlAnalyticsSvcUniapi", "goMdlPlayerSvcTvSession", "goCnstConfig", "goCnstEnumerated", "uaConstants"],
    vn.$inject = ["uasEventService"],
    yn.$inject = ["$q", "uasInterestService", "goSvcLogger", "goSvcCast"],
    Sn.$inject = ["$q", "goSvcUniapiSettings", "goCnstConfig", "goSvcUser", "goSvcCaShared", "goCnstEnumerated"],
    bn.$inject = ["$q", "goSvcUtils", "uasInstanceParameterService", "goSvcCast", "goSvcLogger", "goCnstEnumerated", "goCnstConfig", "uaConstants", "goCnstSetup", "goSvcWebStorage", "goCnstApp", "goSvcUserStatus", "goMdlCachesSvcGetKeyValues"],
    En.$inject = ["uasUserService", "uasRegistrationService", "goSvcUniapiSettings", "goSvcUniapiAuthentication", "goModelAgeRating", "goSvcUtils", "goMdlCachesSvcGetUser", "uaConstants"],
    Tn.$inject = ["$q", "$document", "uasPurchaseService", "goSvcCast", "uasUserService", "uasPlaybackService", "goSvcUtils", "goMdlCachesSvcUser", "goCnstEnumerated", "uaConstants", "goCnstConfig"];
    var Cn = n(353)
      , Pn = n.n(Cn);
    function In(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d = l.StatusCode
          , g = u.pvrRecordingHierarchy
          , p = l.GvpRecordingState
          , m = u.goEvents.RECORDINGS_UPDATED
          , h = u.servicesTypes.cPVRServiceTypeName
          , v = [u.servicesTypes.rPVRServiceTypeName, u.servicesTypes.nPVRServiceTypeName]
          , y = !1;
        return {
            isPvrEnabled: function() {
                return e.all([A(), P()]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n || a
                })
            },
            isCloudPvrServiceAvailable: I,
            isCloudPvrEnabled: A,
            isRemotePvrServiceAvailable: C,
            isPvrServiceAvailable: function() {
                return e.all([I(), C()]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n || a
                })
            },
            isRemotePvrEnabled: P,
            isPerformingAction: function() {
                return y
            },
            isCancelError: N,
            isAddError: w,
            addRecordingSchedule: function(t) {
                return E(),
                o.AddRecordingSchedule(t).then(n("goModelRecording")).then(function(e) {
                    return b().then(function() {
                        return e
                    })
                }).catch(function(t) {
                    return w(t.error.code) ? e.reject(t) : b().then(function() {
                        return []
                    })
                }).finally(T)
            },
            cancelRecordingSchedule: function(t, n) {
                return E(),
                n ? function(e) {
                    return E(),
                    Object.assign(e, {
                        entireSeries: !1
                    }),
                    o.DeleteRecordingSchedule(e).then(b).finally(T)
                }(t) : o.CancelRecordingSchedule(t).then(b).catch(function(t) {
                    return N(t.error.code) ? e.reject(t) : b().then(function() {
                        return []
                    })
                }).finally(T)
            },
            protectRecording: function(e, t) {
                return E(),
                o.ProtectRecording({
                    recordingId: e,
                    protected: !t
                }).then(b).finally(T)
            },
            getAllRecordingSchedules: M,
            getAllRecordingSchedulesFilter: function(e) {
                return M(e).then(function(e) {
                    var t = xt()(e);
                    return t.reverse().filter(function(t) {
                        var n = t.recordingHierarchy;
                        return n === g.child || !e.some(function(e) {
                            return t.parentId === e.parentId && e.recordingHierarchy !== n
                        })
                    })
                })
            },
            getRecording: function(t, n, a, r) {
                var o = this;
                return o.isPvrEnabled().then(function(t) {
                    return t ? o.getAllRecordingSchedules() : e.reject()
                }).then(function(e) {
                    return e.filter(function(e) {
                        return e.scheduleId ? e.scheduleId === t : e.programId === n && e.channelId === a && e.startTime === r
                    })[0]
                })
            }
        };
        function S(e) {
            return o.GetAllRecordingSchedules({
                state: e
            }, {
                uaenNoLimit: {
                    strategy: "conservative"
                }
            }).then(n("goModelRecording"))
        }
        function b() {
            return a.removeAll(),
            M([p.Running, p.Scheduled]).then(function(e) {
                return t.$emit(m),
                e
            })
        }
        function E() {
            y = !0
        }
        function T() {
            y = !1
        }
        function C() {
            return e.all([s.isRemotePvrEnabled(), e.all([c.allInstanceServices().get({}), s.getRemotePvrEnabledParameter()]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                return f()(a) || n.some(function(e) {
                    var t = e.Title;
                    return v.includes(t)
                })
            })]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                return r.get("EnableLiveOtt") && n && a
            })
        }
        function P() {
            return e.all([A(), C(), i.isRemotePvrServiceEnabled()]).then(function(e) {
                var t = Fe()(e, 3)
                  , n = t[0]
                  , a = t[1]
                  , r = t[2];
                return !n && a && r
            })
        }
        function I() {
            return e.all([c.allInstanceServices().get({}), s.isCloudPvrEnabled()]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                return n.some(function(e) {
                    var t = e.Title;
                    return h === t
                }) && a
            })
        }
        function A() {
            return e.all([I(), i.isCloudPvrServiceEnabled()]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                return n && a
            })
        }
        function M() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [p.Undefined];
            return e.all(t.map(S)).then(function(e) {
                return Pn()(e).sort(function(e, t) {
                    return t.recordingHierarchy - e.recordingHierarchy
                })
            })
        }
        function N(e) {
            return e && e !== d.RecordingProgramNotFound && e !== d.RecordingSeriesNotOwnedBySubscriber && e !== d.RecordingNotFound
        }
        function w(e) {
            return e && e !== d.RecordingAlreadySubscribed
        }
    }
    function An(e, t, n) {
        var a;
        return {
            loadSettings: r,
            getAll: function() {
                return a
            },
            get: o,
            getAsync: function(t) {
                return a ? e.when(o(t)) : r().then(function() {
                    return o(t)
                })
            },
            set: function(e, t) {
                n.setObjectParam(a, e, t)
            }
        };
        function r() {
            return a ? e.when() : t.GetInstanceSettings().then(function(e) {
                a = n.getDeepProperty(e, "data.Content")
            })
        }
        function o(e) {
            return n.getObjectParam(a, e)
        }
    }
    function Mn(e, t, n, a, r) {
        "ngInject";
        return {
            checkURL: function(o, i) {
                var c = e.path().substring(1)
                  , s = o;
                i && n.genre ? s.parentChannelTitle = i.title : i && (s = i);
                var l = t("goFltrDetailsLink")(s);
                c !== l && (function(t) {
                    var n = e.path()
                      , a = r.routes.movie
                      , o = r.routes.serie;
                    return t.indexOf(a) >= 0 && -1 === n.indexOf(a) || t.indexOf(o) >= 0 && -1 === n.indexOf(o)
                }(u = l) || function(t) {
                    var n = e.path()
                      , a = r.routes.catchup
                      , o = r.routes.catalog
                      , i = r.routes.contents;
                    return t.indexOf(a) >= 0 && -1 === n.indexOf(a) || t.indexOf(o) >= 0 && -1 === n.indexOf(o) || t.indexOf(i) >= 0 && -1 === n.indexOf(i) || n.indexOf(i) >= 0 && -1 === t.indexOf(i)
                }(u) || function(t) {
                    var n = e.path()
                      , a = r.routes.catchup
                      , o = r.routes.contents;
                    return t.indexOf(a) >= 0 && -1 === t.indexOf(o) && n.indexOf(a) >= 0 && -1 === t.indexOf(o) && (0 === t.replace(a, "").replace(/\//g, "").length || 0 === n.replace(a, "").replace(/\//g, "").length)
                }(u) ? e.path(u).replace() : a.changeLocation(u));
                var u
            }
        }
    }
    function Nn(e, t, n, a, r, i, c, s, l, u, d) {
        "ngInject";
        var g, p, m = l.servicesTypes.cPVRServiceTypeName, f = [l.servicesTypes.rPVRServiceTypeName, l.servicesTypes.nPVRServiceTypeName], h = l.servicesTypes.blockTvodServiceTypeName, v = l.languages.UserPreferenceNotRegistered, y = o.caTypes.USER_TYPES, S = l.servicesTypes, b = S.l7dServiceTypeName, E = S.liveServiceTypeName, T = S.amazonServiceTypeName, C = c.getLogger("SERVICE", "goSvcUser");
        return {
            acceptL7dAgreement: function() {
                return I(b).then(function(e) {
                    return r.AcceptServicesAgreement({
                        serviceIds: e.ID
                    }).finally(A)
                })
            },
            getCurrentEpisodesForUsers: function() {
                return r.GetCurrentEpisodesForUsers().then(n("goModelCurrentEpisode")).catch(function() {
                    return []
                })
            },
            isCloudPvrServiceEnabled: function() {
                return P().then(function(e) {
                    var t = e.data
                      , n = t.Content;
                    return n.some(function(e) {
                        var t = e.ServiceTypeName;
                        return t === m
                    })
                }).catch(function() {
                    return !1
                })
            },
            isRemotePvrServiceEnabled: function() {
                return P().then(function(e) {
                    var t = e.data
                      , n = t.Content
                      , a = void 0 === n ? [] : n
                      , r = a.filter(function(e) {
                        var t = e.ServiceTypeName;
                        return f.includes(t)
                    }).length
                      , o = a.some(function(e) {
                        var t = e.ServiceTypeName;
                        return t === m
                    });
                    return !o && (r ? r > 1 && C.error("Multiple PVR services found!") : C.info("No PVR service found"),
                    1 === r)
                }).catch(function() {
                    return !1
                })
            },
            isLiveServiceEnabled: function() {
                return P().then(function(e) {
                    var t = e.data;
                    return t.Content.some(function(e) {
                        var t = e.ServiceTypeName;
                        return t === E
                    })
                })
            },
            getUserRights: function() {
                return r.GetUserRights().then(n("goModelUserRight")).catch(function() {
                    return []
                })
            },
            getUserServices: P,
            getUserType: function() {
                var e = "".concat(y.NULL, "|");
                if (t.isLoggedIn)
                    switch (t.profile.type) {
                    case u.UserType.Telefonica:
                        e += y.TELEFONICA;
                        break;
                    case u.UserType.NonTelefonica:
                        e += y.NONTELEFONICA;
                        break;
                    default:
                        e = void 0
                    }
                else
                    e += y.ANONYMOUS;
                return e
            },
            getUserChannelMapId: function() {
                return i.GetUserChannelMap().then(function(e) {
                    return a.getDeepProperty(e, "data.Content.ID", -1)
                })
            },
            hasToAcceptL7dAgreement: function() {
                return I(b).then(function(e) {
                    return !!e && e.RequiresUserAgreement && !e.AgreementAccepted
                }).catch(function() {
                    return !1
                })
            },
            isBlockTvod: function() {
                return I(h).then(function(e) {
                    return !!e
                }).catch(function() {
                    return !1
                })
            },
            isL7dContracted: function() {
                return I(b).then(function(e) {
                    return !!e && e.RequiresUserAgreement
                }).catch(function() {
                    return !1
                })
            },
            isL7dServiceAvailable: function() {
                return I(b).then(function(e) {
                    return !!e
                }).catch(function() {
                    return !1
                })
            },
            removeL7dAgreement: function() {
                return I(b).then(function(e) {
                    return r.RemoveServicesAgreement({
                        serviceIds: e.ID
                    }).finally(A)
                })
            },
            clearUserServicesCache: A,
            getUserPreference: function(t) {
                return r.GetUserPreference({
                    isGlobal: !1,
                    name: t
                }).then(function(e) {
                    var t = e.data;
                    return t.Content
                }).catch(function(t) {
                    return a.getDeepProperty(t, "error.code", -1) === v ? "" : e.reject()
                })
            },
            setUserPreference: function(e, t) {
                return r.SetUserPreference({
                    isGlobal: !1,
                    name: e,
                    value: t
                }).then(function(e) {
                    var t = e.data;
                    return d.removeAll(),
                    t.Content
                })
            },
            getAmazonServiceType: function() {
                return P().then(function(e) {
                    var t = e.data;
                    return t.Content.find(function(e) {
                        var t = e.ServiceTypeName;
                        return t === T
                    })
                })
            },
            getDefaultOBPinNumber: function(e) {
                return r.GetDefaultOBPinNumber({
                    pinType: e
                }).then(function(e) {
                    var t = e.data;
                    return t.Content.DefaultValue
                })
            }
        };
        function P() {
            return t.isLoggedIn ? t.profile.id === g ? p : (g = t.profile.id,
            p = r.GetUserServices()) : e.reject()
        }
        function I(e) {
            return P().then(function(t) {
                return t.data.Content.filter(function(t) {
                    return t.ServiceTypeName === e
                })[0]
            })
        }
        function A() {
            s.removeAll(),
            g = null
        }
    }
    function wn(e) {
        "ngInject";
        var t = Object.assign(e.$new(), {
            isLoggedIn: !1,
            isAnonymousLoggedIn: !1,
            isAuth: !1,
            profile: null,
            remember: !1
        });
        return t.$watchCollection("[isLoggedIn, isAnonymousLoggedIn]", function() {
            t.isAuth = t.isLoggedIn || t.isAnonymousLoggedIn
        }),
        t
    }
    In.$inject = ["$q", "$rootScope", "goSvcCast", "goMdlCachesSvcRecording", "goSvcUniapiSettings", "uasNetworkPvrService", "goSvcUser", "goSvcCaShared", "goSvcUniapiParameter", "uaConstants", "goCnstEnumerated"],
    An.$inject = ["$q", "uasConfigurationService", "goSvcUtils"],
    Mn.$inject = ["$location", "$filter", "$routeParams", "goSvcUtils", "goCnstEnumerated"],
    Nn.$inject = ["$q", "goSvcUserStatus", "goSvcCast", "goSvcUtils", "uasUserService", "uasEpgService", "goSvcLogger", "goMdlCachesSvcGetUserServices", "goCnstEnumerated", "uaConstants", "goMdlCachesSvcUser"],
    wn.$inject = ["$rootScope"];
    var Ln = n(352);
    function $n(e, t, n, a, r) {
        "ngInject";
        return {
            getMediaUrl: function(a, r) {
                var o = e.player.cdnDomains
                  , i = new RegExp("(".concat(o.join("|"), ")"),"i")
                  , c = t.getProperty(a, r, "");
                n.isHttpsRequiredInPlayer && 0 === c.indexOf("http://") && (c = c.replace("http://", "https://"),
                i.test(c) && (c = c.replace(/([\.|\/]o[0-9a-f]+)\./i, "$1-")));
                return c
            },
            fromGoTypeToProductType: function(e) {
                var t = a.goType
                  , n = r.ProductType
                  , o = {};
                return o[t.Movie] = n.Movie,
                o[t.Serie] = n.Serie,
                o[t.Season] = n.Season,
                o[t.Episode] = n.Movie,
                o[e] || t.Unknown
            }
        }
    }
    function Rn(e, t, n, a) {
        "ngInject";
        var r = a.webStorage.userKey
          , o = a.webStorage.testStatusKey
          , i = n.getLogger("SERVICE", "goSvcWebStorage")
          , c = e.sessionStorage
          , s = e.localStorage;
        return t.$watch("isAnonymousLoggedIn", function() {
            t.isAnonymousLoggedIn && D()(c, function(e, t) {
                t && 0 === t.indexOf(r) && c.removeItem(t)
            })
        }),
        {
            getLocalItem: function(e) {
                return s.getItem(e)
            },
            getSessionItem: function(e) {
                return JSON.parse(c.getItem(l(e)) || c.getItem(e) || "null")
            },
            isActive: function() {
                var e;
                try {
                    s.setItem(o, !0),
                    c.setItem(o, !0),
                    s.removeItem(o),
                    c.removeItem(o),
                    e = !0
                } catch (t) {
                    i.warning("Web storage is not enabled!"),
                    e = !1
                }
                return e
            },
            removeLocalItem: function(e) {
                s.removeItem(e)
            },
            removeSessionItem: function(e) {
                c.removeItem(e) || c.removeItem(r + e)
            },
            setLocalItem: function(e, t) {
                s.setItem(e, t)
            },
            setSessionItem: function(e, t) {
                c.setItem(e, JSON.stringify(t))
            },
            setUserSessionItem: function(e, t) {
                c.setItem(l(e), JSON.stringify(t))
            }
        };
        function l(e) {
            return r + e
        }
    }
    $n.$inject = ["goCnstSetup", "goSvcUtils", "goSvcFeature", "goCnstEnumerated", "uaConstants"],
    Rn.$inject = ["$window", "goSvcUserStatus", "goSvcLogger", "goCnstEnumerated"];
    var Dn = r.a.module("go.services", []).factory("goSvcAdultAccess", et).factory("goSvcAppLayout", tt).factory("goSvcAuthentication", nt).factory("goSvcAutoscroll", function() {
        var e = !0;
        function t(t) {
            return function() {
                e = t
            }
        }
        return {
            isEnabled: function() {
                return e
            },
            enable: t(!0),
            disable: t(!1)
        }
    }).factory("goSvcBootstrap", at).factory("goSvcBoxLayout", rt).factory("goSvcBrowser", ot).factory("goSvcCaDetails", ct).factory("goSvcCaLive", st).factory("goSvcCaPurchase", lt).factory("goSvcCaShared", ut).factory("goSvcCaSubscriptions", pt).factory("goSvcCaThematicArea", mt).factory("goSvcCast", ft.a).factory("goSvcCatalog", yt).factory("goSvcCookies", bt).factory("goSvcDetails", Et).factory("goSvcFeature", Pt).factory("goSvcJsonWebToken", Nt).factory("goSvcL7d", wt).factory("goSvcGoogleTagManager", function() {
        return {
            sendEvent: function(e) {
                window.google_tag_manager && (window.dataLayer = window.dataLayer || [],
                window.dataLayer.push(e))
            }
        }
    }).factory("goSvcLanding", Lt).factory("goSvcLibrary", $t).factory("goSvcLinks", Rt).factory("goSvcLiveDetail", Ut).factory("goSvcMetadata", Bt).factory("goSvcNetflix", Ft).factory("goSvcAmazon", Vt).factory("goSvcOrderBy", Ht).factory("goSvcPlayback", Wt).factory("goSvcBingeWatching", qt).factory("goSvcPromiseQueue", zt).factory("goSvcPurchase", Qt).factory("goSvcRegistration", Kt).factory("goSvcResizeListener", Xt).factory("goSvcRights", Jt).factory("goSvcSchedules", Zt).factory("goSvcSia", en).factory("goSvcSlug", tn).factory("goSvcSocialNetwork", nn).factory("goSvcSubscription", an).factory("goSvcTickWorker", cn).factory("goSvcTimeDiscretizer", ln).factory("goSvcTime", sn).factory("goSvcCacheInvalidator", it).factory("goSvcTokenCookieInterceptor", un).factory("goSvcTokenRenewFutSettingsInterceptor", dn).factory("goSvcUniapiAuthentication", hn).factory("goSvcUniapiEvent", vn).factory("goSvcUniapiInterests", yn).factory("goSvcUniapiLive", Sn).factory("goSvcUniapiParameter", bn).factory("goSvcUniapiPin", En).factory("goSvcUniapiPurchase", Tn).factory("goSvcUniapiPvr", In).factory("goSvcUniapiSettings", An).factory("goSvcUrlChecker", Mn).factory("goSvcUserStatus", wn).factory("goSvcUser", Nn).factory("goSvcUtils", Ln.a).factory("goSvcUtilsModel", $n).factory("goSvcWebStorage", Rn).factory("goSvcPanic", Gt).factory("goSvcCommercialSegmentation", St).factory("goSvcLiveChannels", Ot).factory("goSvcMedias", jt).factory("goSvcProduct", Yt).factory("goSvcRights", Jt).factory("goSvcTags", rn).factory("goSvcThirdParty", on).factory("goSvcDetails", Et).provider("goSvcLiveOrchestrator", function() {
        this.$get = ["$q", "goSvcTime", "goSvcUserStatus", "goSvcUtils", "goSvcCaLive", "goSvcLiveChannels", "goModelGoError", "goCnstConfig", "goCnstEnumerated", "uaConstants", function(e, t, n, a, r, o, i, c, s, l) {
            var u, d, g, p = {
                maxNumberOfRetries: s.epg.retries.max,
                minNumberOfPrograms: s.epg.programs.min,
                scheduleHourInterval: s.epg.schedule.interval,
                minNumberOfChannelsInEpgNow: s.epg.channels.min,
                minNumberOfChannelsInLive: s.live.channels.min,
                epgCacheTimeInterval: c.go.goMdlEpg.epgCacheTime
            }, m = {
                NUMBER: 0,
                DATE: 1
            }, h = 86400, v = 3600, y = s.epg.chunk.general, S = {}, b = {}, E = [], T = [], C = {}, P = {}, I = [], A = 0, M = !0, N = null, w = 0;
            function L(e) {
                return e ? t.getDiscretizedTime() : t.getTime()
            }
            function $(e, t) {
                return (t || L()) + e * v
            }
            function R(e, t, n) {
                return e === m.NUMBER ? t.length >= (n || p.minNumberOfPrograms) : t[t.length - 1].endTime >= (n || d)
            }
            function D(e) {
                e.forEach(function(e) {
                    (S[e] && S[e].programs || []).push(null)
                })
            }
            function _(e, t, n, a, o) {
                return r.schedules().get({
                    starttime: t,
                    endtime: n,
                    CA_ProgramTypeId: o,
                    CA_GenreIds: a,
                    livechannelpids: (i = e,
                    i.map(function(e) {
                        return "lch" + e
                    }).join(","))
                }).then(function(e) {
                    var t = {};
                    return e.forEach(function(e) {
                        var n = e.liveChannelId;
                        t[n] || (t[n] = []),
                        t[n].push(e)
                    }),
                    t
                });
                var i
            }
            function O(e, t, n, r, o, i, c, s, l) {
                var u = !0
                  , d = 0
                  , g = [];
                function m(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []
                      , n = S[e]
                      , r = n.programs || [];
                    if (r.length >= 1 && null === r[0] && (r.length = 0),
                    !f()(n) && t.length && (a.isDefined(r) ? (t = t.filter(function(e) {
                        var t;
                        for (t = 0; t < r.length; t++)
                            if (null !== r[t] && null !== e && r[t].id === e.id)
                                return !1;
                        return !0
                    }),
                    r = r.concat(t).filter(function(e) {
                        return null === e || e.endTime > L()
                    })) : r = t,
                    r[0] && r[0].endTime)) {
                        n.channel.firstEndTime = r[0].endTime;
                        var o = S[e].programs.length - 1;
                        n.channel.lastEndTime = r[o].endTime
                    }
                }
                for (d in e)
                    e.hasOwnProperty(d) && (f()(S[d]) && (S[d] = {}),
                    m(d, e[d]),
                    !f()(S[d].programs) && R(t, S[d].programs, o) || (g.push(d),
                    u = !1));
                !u && A < p.maxNumberOfRetries ? _(g, n, r, s, l).then(function(e) {
                    var n, u = [];
                    if (e && !a.isEmptyObject(e)) {
                        for (n in ++A,
                        e)
                            e.hasOwnProperty(n) && u.push(S[n]);
                        c && c.notify(u),
                        O(e, t, r, $(p.scheduleHourInterval, r), o, i, c, s, l)
                    } else
                        D(g),
                        A = 0,
                        i && i.resolve(!0),
                        c && c.resolve(!0)
                }).catch(function() {
                    return D(g)
                }) : (A = 0,
                i && i.resolve(!0),
                c && c.resolve(!0))
            }
            function U(e) {
                return e.sort(function(e, t) {
                    return e.channel.isPlayback === t.channel.isPlayback ? e.channel.channelNumber - t.channel.channelNumber : +t.channel.isPlayback - +e.channel.isPlayback
                }),
                e
            }
            function k(a, i) {
                var c = !!a
                  , s = e.defer();
                function l(e) {
                    return e.filter(function(e) {
                        return e.isPlayback === c
                    }).map(function(e) {
                        return e.id
                    })
                }
                function u() {
                    P = {},
                    C = {},
                    S = {},
                    E = [],
                    T = [],
                    b = {},
                    I = []
                }
                function d(e, t) {
                    return e.some(function(e) {
                        return e.channel.id === t
                    })
                }
                function m(e, n) {
                    g = t.getTime(),
                    function(e) {
                        e.sort(function(e, t) {
                            return e.channelNumber - t.channelNumber
                        })
                    }(e),
                    e.forEach(function(e) {
                        var t = {
                            channel: e
                        }
                          , a = S[e.id];
                        f()(a) ? a = S[e.id] = t : (a.channel.urlList = t.channel.urlList,
                        a.channel.channelNumber = t.channel.channelNumber),
                        n ? !d(T, e.id) && T.push(a) : !d(E, e.id) && E.push(a)
                    }),
                    I = U(n ? T : E)
                }
                return g && g + p.epgCacheTimeInterval < t.getTime() && u(),
                n.isLoggedIn && !i ? (w && w === n.profile.id || u(),
                Object.keys(P).length || (S = {},
                C = {}),
                P[a] ? (I = T,
                s.resolve(P[a])) : o.getAllChannels().then(function(e) {
                    return e[a]
                }).then(function(e) {
                    m(e, !0),
                    P[a] = l(e),
                    w = n.profile.id,
                    s.resolve(P[a])
                }).catch(s.reject)) : n.isAnonymousLoggedIn || i ? C[a] ? (I = E,
                s.resolve(C[a])) : r.channels().get().then(function(e) {
                    return function(e, t) {
                        return e.filter(function(e) {
                            return e.isPlayback === !!t
                        })
                    }(e, a)
                }).then(function(e) {
                    m(e, !1),
                    C[a] = l(e),
                    w = 0,
                    s.resolve(C[a])
                }).catch(s.reject) : s.resolve([]),
                s.promise
            }
            return u = L(),
            d = u,
            {
                getMatrix: function(e) {
                    return f()(e) ? I : I.filter(function(t) {
                        return t.channel.isPlayback === e
                    })
                },
                getCurrentSchedules: function(t, r, o, c, u, d) {
                    var g, f, h, v, b = e.defer();
                    function C() {
                        I = n.isLoggedIn ? T : E,
                        N = n.isLoggedIn,
                        g = L(!0),
                        h = t || Object.keys(S),
                        f = $(p.scheduleHourInterval, g),
                        M ? c ? function e() {
                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                              , n = [];
                            _(h.slice(0, y), g, f, u, d).then(function(o) {
                                var c, l;
                                if (o && !a.isEmptyObject(o)) {
                                    for (c in ++A,
                                    M = !1,
                                    Object.keys(o).forEach(function(e) {
                                        o[e] = o[e].filter(function(e) {
                                            return e.endTime > L()
                                        })
                                    }),
                                    o)
                                        o.hasOwnProperty(c) && (t[c] = o[c],
                                        l = {},
                                        o.hasOwnProperty(c) && (S[c] && S[c].channel && (l.channel = S[c].channel),
                                        l.programs = o[c]),
                                        n.push(xt()(l)));
                                    b.notify(n),
                                    h.splice(0, y),
                                    h.length ? e(t) : O(t, m.NUMBER, f, $(p.scheduleHourInterval, f), r, void 0, b)
                                } else
                                    D(h),
                                    b.reject(i(s.goStatusCode.epg.noPrograms))
                            }).catch(function(e) {
                                D(h),
                                M && b.reject(e)
                            })
                        }() : _(h, g, f, u, d).then(function(e) {
                            e && !a.isEmptyObject(e) ? (++A,
                            M = !1,
                            Object.keys(e).forEach(function(t) {
                                e[t] = e[t].filter(function(e) {
                                    return e.endTime > L()
                                })
                            }),
                            O(e, m.NUMBER, f, $(p.scheduleHourInterval, f), r, b),
                            b.notify()) : (D(t),
                            b.reject(i(s.goStatusCode.epg.noPrograms)))
                        }).catch(function(e) {
                            D(t),
                            M && b.reject(e)
                        }) : (Object.keys(S).forEach(function(e) {
                            var t = S[e].programs;
                            t && (t = t.filter(function(e) {
                                return null === e || e.endTime > L()
                            }))
                        }),
                        v = function() {
                            var e, t = {};
                            function n(e) {
                                return null === e[0] || e[0].endTime < L()
                            }
                            for (e in S)
                                if (S.hasOwnProperty(e)) {
                                    var a = S[e] && S[e].programs || [];
                                    (a.length < p.minNumberOfPrograms || n(a)) && (t[e] = xt()(a))
                                }
                            return t
                        }(),
                        c ? function() {
                            var t, n = [], o = e.defer(), i = o.promise;
                            for (t in i.then(function() {
                                O(v, m.NUMBER, g, f, r, void 0, b)
                            }, a.noop, function(e) {
                                b.notify(e)
                            }),
                            S)
                                S.hasOwnProperty(t) && (n.push(S[t]),
                                n.length >= y && (o.notify(xt()(n)),
                                n.length = 0));
                            n.length && o.notify(xt()(n)),
                            o.resolve(!0)
                        }() : O(v, m.NUMBER, g, f, r, b))
                    }
                    return (o || N !== n.isLoggedIn) && function() {
                        var e;
                        for (e in S)
                            a.isDefined(S[e].programs) && (S[e].programs.length = 0);
                        M = !0
                    }(),
                    T.length || E.length ? C() : e.all([k(l.PlaybackType.PlaybackRight), k(l.PlaybackType.NonPlayback)]).then(C),
                    b
                },
                get24hSchedules: function(t, n, r, o, i) {
                    var c, s, l, u = xt()(t || Object.keys(S)), d = e.defer(), g = d.promise, p = !1;
                    return r && (b = {}),
                    g.catch(function() {
                        p = !0
                    }),
                    s = b[n] || [],
                    l = (s = s.isCompleted ? s : []).filter(function(e) {
                        return a.getDeepProperty(e, "programs.length")
                    }).map(function(e) {
                        return a.getDeepProperty(e, "channel.id")
                    }),
                    t.some(function(e) {
                        return -1 === l.indexOf(e)
                    }) ? (c = [],
                    b[n] = [],
                    function e(t, n, a, r, o, i, c) {
                        var s = [];
                        _(t.slice(0, y), n, n + h, o, i).then(function(l) {
                            var u, d;
                            for (d in l)
                                l.hasOwnProperty(d) && (u = {},
                                l.hasOwnProperty(d) && (S[d].channel && (u.channel = S[d].channel),
                                u.programs = l[d]),
                                s.push(xt()(u)));
                            a.notify(s),
                            r = Array.prototype.concat(r, s),
                            t.splice(0, y),
                            t.length && !c ? e(t, n, a, r, o, i, c) : (b[n] = xt()(U(r)),
                            b[n].isCompleted = !0,
                            I = xt()(b[n]),
                            a.resolve(I))
                        }).catch(a.reject)
                    }(u, n, d, c, o, i, p)) : function(t, n, r) {
                        var o, i, c = e.defer();
                        for (c.promise.then(function(e) {
                            I = xt()(e),
                            r.resolve(I)
                        }, a.noop, r.notify),
                        o = 0; n.length; o += y)
                            i = t.slice(o, o + y),
                            c.notify(xt()(i)),
                            n.splice(0, y);
                        c.resolve(xt()(t))
                    }(xt()(b[n]), u, d),
                    d
                },
                getChannel: function(t, n) {
                    var a, r, o = e.defer();
                    return n ? r = k(l.PlaybackType.NonPlayback) : ((a = e.defer()).resolve(),
                    r = a.promise),
                    e.all([k(l.PlaybackType.PlaybackRight), r]).then(function() {
                        var e = S[t];
                        e ? o.resolve(e.channel) : o.reject()
                    }).catch(o.reject),
                    o.promise
                },
                getSyncCachedChannel: function(e) {
                    var t, n = C, r = P;
                    return (n[0] && n[0].indexOf(e) >= 0 || n[1] && n[1].indexOf(e) >= 0 || r[0] && r[0].indexOf(e) >= 0 || r[1] && r[1].indexOf(e) >= 0) && (t = a.getProperty(S[e], "channel")),
                    t
                },
                getChannels: k,
                getNextProgram: function(e, t) {
                    var n, a, r = I.length;
                    for (this.getCurrentSchedules(null, 2, !1); r-- && !a; )
                        I[r].channel.id === t && (a = I[r].programs);
                    return a && (n = a.filter(function(t) {
                        return t.startTime < e && t.endTime > e
                    })[0]),
                    n
                }
            }
        }
        ]
    }).provider("goSvcUniapi", function() {
        this.config = {},
        this.setConfig = function(e) {
            this.config = e
        }
        ,
        this.$get = ["$location", "goCnstApp", "goCnstConfig", function(e, t, n) {
            var a = n.go.uniapi.config;
            return {
                getProperty: function(n) {
                    var r, o;
                    switch (n) {
                    case "env":
                        r = t.env;
                        break;
                    case "instanceId":
                        r = a.instanceIds[t.env];
                        break;
                    case "endpoint":
                        o = a.endpoints[t.deviceName][t.env],
                        r = o && 0 === o.indexOf("//") ? "".concat(e.protocol(), ":").concat(o) : o
                    }
                    return r
                },
                getSearchQuery: function() {
                    var e = JSON.parse(atob(a.searchQuery.slice(2)));
                    console.log([e[0], Object(fn.decrypt)(e[1], Object(gn.parse)(e[2]), {
                        iv: Object(gn.parse)(e[3])
                    }).toString(mn.a)])
                    return [e[0], Object(fn.decrypt)(e[1], Object(gn.parse)(e[2]), {
                        iv: Object(gn.parse)(e[3])
                    }).toString(mn.a)]
                }
            }
        }
        ]
    }).provider("goSvcGoogleAnalytics", It.a).provider("goSvcLogger", function() {
        var e = !0;
        this.setLoggingEnabled = function(t) {
            e = t
        }
        ,
        this.$get = ["$log", function(t) {
            return {
                getLogger: function(n, a) {
                    return new function(n, a) {
                        this.facility = n,
                        this.name = a,
                        this._prepareText = function(e) {
                            return [this.facility, this.name].concat([].slice.call(e))
                        }
                        ,
                        this._log = function(n, a) {
                            e && t[n].apply(this, this._prepareText(a))
                        }
                        ,
                        this.log = function() {
                            this._log("log", arguments)
                        }
                        ,
                        this.debug = function() {
                            this._log("debug", arguments)
                        }
                        ,
                        this.info = function() {
                            this._log("info", arguments)
                        }
                        ,
                        this.error = function() {
                            this._log("error", arguments)
                        }
                        ,
                        this.warning = function() {
                            this._log("warn", arguments)
                        }
                    }
                    (n,a)
                }
            }
        }
        ]
    }).name
      , _n = n(6)
      , On = n(347)
      , Un = n.n(On);
    n(648);
    xn.$inject = ["goSvcLinks"];
    var kn = {
        template: Un.a,
        controller: xn
    };
    function xn(e) {
        "ngInject";
        var t = this;
        t.onClickClose = function() {
            t.isShown = !1
        }
        ,
        t.$onInit = function() {
            e.getLinks().then(function(e) {
                var n = e.android;
                t.isShown = "" !== n,
                t.androidLink = n
            }).catch(se.noop)
        }
    }
    var jn = n(346)
      , Bn = n.n(jn)
      , Fn = (n(646),
    {
        template: Bn.a,
        bindings: {
            browserList: "<",
            iconClass: "@?"
        },
        controller: function() {
            var e = this;
            e.$onInit = function() {
                C()(e.browserList) && (e.browserList = e.browserList.slice(0, 3))
            }
        }
    });
    var Vn = n(345)
      , Hn = n.n(Vn)
      , Gn = (n(644),
    {
        template: Hn.a,
        bindings: {
            type: "@",
            text: "@",
            hoverText: "@?"
        }
    })
      , Wn = {
        controller: qn
    };
    function qn(e, t, n, a, r, o, i) {
        var c, s, l;
        function u() {
            r.isLoggedIn && !l && a.isParentalPinFirstUsed().then(function(e) {
                e && (l = n.checkContract().finally(function() {
                    return i.openWarning({
                        title: "popup.firstUse.login.title",
                        message: "popup.firstUse.login.description",
                        accept: "common.configure",
                        cancel: "common.cancel",
                        closable: !1
                    }).result.then(function(e) {
                        e ? t.path("settings/parental-control") : a.disableParentalPinFirstUse().finally(o.redirectToHome),
                        l = void 0
                    })
                }))
            })
        }
        this.$onInit = function() {
            s = e.$on("$locationChangeStart", function(e, t, n) {
                n.includes("/registration/") && u()
            }),
            c = r.$watch("isLoggedIn", u)
        }
        ,
        this.$onDestroy = function() {
            c(),
            s()
        }
    }
    qn.$inject = ["$rootScope", "$location", "goSvcL7d", "goSvcUniapiPin", "goSvcUserStatus", "goSvcUtils", "goMdlPopUpsSvcManager"];
    n(642);
    zn.$inject = ["$element"];
    var Yn = {
        template: "",
        controller: zn,
        bindings: {
            name: "@",
            classes: "@"
        }
    };
    function zn(e) {
        "ngInject";
        var t = this
          , a = n(640);
        t.$onInit = function() {
            var n = "go-icon ".concat(t.classes);
            e.html(a("./".concat(t.name, ".svg"))),
            e.find("svg").addClass(n)
        }
    }
    var Qn = n(0)
      , Kn = n.n(Qn)
      , Xn = n(175)
      , Jn = n.n(Xn)
      , Zn = n(7)
      , ea = n(344)
      , ta = n.n(ea);
    function na() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
          , t = Object(_n.b)("goMdlAnalyticsSvcContentWise", "goMdlAnalyticsSvcManager")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = e.name
          , i = void 0 === o ? "" : o
          , c = e.data
          , s = void 0 === c ? {} : c
          , l = e.contentWise
          , u = void 0 === l ? {} : l;
        i && (u && a.setParams(u),
        r.trackEvent(i, ta()(s, f.a)))
    }
    var aa = n(9)
      , ra = n.n(aa);
    function oa(e) {
        var t = e.className
          , n = e.skipAnalytics
          , a = Object(Zn.e)("$filter", "goSvcRegistration")
          , r = Fe()(a, 2)
          , o = r[0]
          , i = r[1]
          , c = Object(Qn.useMemo)(function() {
            return o("translate")
        }, []);
        return Kn.a.createElement("a", {
            className: ra()([t, Jn.a.pointer, !n && Jn.a.registrationForm, "gtm-registration-login-link"]),
            title: c("userRegistration.registrationLink.button"),
            onClick: function() {
                i.launchRegistration(),
                n || na({
                    name: "login::register"
                })
            }
        }, c("userRegistration.registrationLink.button"))
    }
    var ia = n(343)
      , ca = n.n(ia)
      , sa = (n(622),
    {
        template: ca.a,
        bindings: {
            type: "@?"
        }
    })
      , la = n(342)
      , ua = n.n(la);
    n(620);
    ga.$inject = ["$timeout"];
    var da = {
        template: ua.a,
        controller: ga,
        bindings: {
            isOn: "<",
            offTextTranslate: "@?",
            onTextTranslate: "@?",
            onToggle: "&"
        }
    };
    function ga(e) {
        "ngInject";
        var t = this;
        t.onToggleDelayed = function() {
            e(function() {
                return t.onToggle({
                    isToggleSwitchOn: t.isOn
                })
            }, 300)
        }
    }
    var pa = n(341)
      , ma = n.n(pa)
      , fa = (n(618),
    {
        template: ma.a,
        bindings: {
            userData: "<",
            creditCard: "<",
            onCreditCardChange: "&",
            editable: "<"
        }
    })
      , ha = n(340)
      , va = n.n(ha);
    n(616);
    Sa.$inject = ["$q", "goSvcSubscription", "goSvcSlug", "goCnstEnumerated", "goSvcRights"];
    var ya = {
        template: va.a,
        bindings: {
            subscription: "<"
        },
        controller: Sa
    };
    function Sa(e, t, n, a, r) {
        "ngInject";
        var o = this
          , i = "".concat(a.routes.subscription, "/");
        o.isButtonShown = function() {
            return !o.subscription.isCancelling()
        }
        ,
        o.$onInit = function() {
            e.all([r.isPurchasable(o.subscription), r.isPurchased(o.subscription)]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                o.isSubscriptionPurchasable = n,
                o.isSubscriptionPurchased = a
            }),
            function() {
                var e = o.subscription.getPricingModelsByUserType()[0];
                if (e && !o.subscription.isNetflix) {
                    var n = t.splitPricingModel(e);
                    o.price = n.price,
                    o.recurrence = n.recurrence
                }
            }(),
            r.isPurchased(o.subscription).then(function(e) {
                o.btnText = e ? "subscriptionBox.removeSub" : "subscriptionBox.addSub"
            }),
            o.link = i + n.encodeId(o.subscription.productId, o.subscription.title)
        }
    }
    var ba = n(339)
      , Ea = n.n(ba)
      , Ta = n(126)
      , Ca = n.n(Ta)
      , Pa = (n(587),
    n(8))
      , Ia = n.n(Pa)
      , Aa = n(12)
      , Ma = n.n(Aa)
      , Na = n(132)
      , wa = n.n(Na);
    function La(e) {
        var t = e.scheduleId
          , n = e.epgProgramId
          , a = e.liveChannelId
          , r = e.startTime
          , o = e.className
          , i = e.showIsConflicted
          , c = void 0 === i || i
          , s = Object(Zn.e)("goSvcUniapiPvr", "$rootScope", "uaConstants")
          , l = Fe()(s, 3)
          , u = l[0]
          , d = l[1]
          , g = l[2]
          , p = Object(Qn.useState)(!1)
          , m = Fe()(p, 2)
          , f = m[0]
          , h = m[1]
          , v = Object(Qn.useState)(!1)
          , y = Fe()(v, 2)
          , S = y[0]
          , b = y[1]
          , E = Object(Qn.useState)(!1)
          , T = Fe()(E, 2)
          , C = T[0]
          , P = T[1]
          , I = Object(Zn.c)()
          , A = G.a.goEvents.RECORDINGS_UPDATED
          , M = Object(Qn.useRef)();
        function N() {
            M.current && M.current()
        }
        function w() {
            return L.apply(this, arguments)
        }
        function L() {
            return (L = Ma()(Ia.a.mark(function e() {
                var o;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.prev = 0,
                            e.next = 3,
                            u.getRecording(t, n, a, r);
                        case 3:
                            o = e.sent,
                            h(B()(o)),
                            b(o && o.conflicted),
                            P(o && o.type === g.RecordingScheduleType.EntireSeries),
                            e.next = 11;
                            break;
                        case 9:
                            e.prev = 9,
                            e.t0 = e.catch(0);
                        case 11:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[0, 9]])
            }))).apply(this, arguments)
        }
        return Object(Qn.useEffect)(function() {
            if (I)
                return w(),
                M.current = d.$on(A, w),
                N;
            N()
        }, [I]),
        f && Kn.a.createElement("span", {
            className: ra()([o, wa.a.icon, C && wa.a.season, c && S && wa.a.conflicted])
        })
    }
    var $a = r.a.module("go.components", []).component("goCmpAndroidBanner", kn).component("goCmpBrowserList", Fn).component("goCmpButton", Gn).component("goCmpFirstLogin", Wn).component("goCmpIcon", Yn).component("goCmpRegisterLink", Object(_n.a)(oa)).component("goCmpSpinner", sa).component("goCmpCookiesWarning", Object(_n.a)(function() {
        var e = Object(_n.b)("$filter", "goSvcCookies", "goSvcUserStatus", "goCnstEnumerated")
          , t = Fe()(e, 4)
          , n = t[0]
          , a = t[1]
          , r = t[2]
          , o = t[3]
          , i = n("translate")
          , c = o.cookiesWarning
          , s = Object(Qn.useState)(!a.get(c.key))
          , l = Fe()(s, 2)
          , u = l[0]
          , d = l[1];
        function g() {
            var e = c.key
              , t = c.value
              , n = c.expiration;
            d(!1),
            a.createExpirationCookie(e, t, n)
        }
        return Object(Qn.useEffect)(function() {
            var e = r.$watch("isLoggedIn", function(e) {
                e && g()
            });
            return function() {
                e()
            }
        }, []),
        Kn.a.createElement(Kn.a.Fragment, null, u && Kn.a.createElement("div", {
            className: "go-cookies-warning container"
        }, Kn.a.createElement("div", {
            className: "go-cookies-warning--message"
        }, Kn.a.createElement("span", null, Ca()(i("cookies.warning.messageLink", {
            cookiesLink: i("cookies.warning.policyUrl"),
            cookiesText: i("cookies.warning.policyCookiesText")
        }))), Kn.a.createElement("span", {
            className: "go-cookies-warning--ok",
            onClick: g
        }, i("cookies.warning.ok"))), Kn.a.createElement("button", {
            className: "go-cookies-warning--close",
            onClick: function() {
                return g()
            }
        }, Kn.a.createElement(Ea.a, {
            className: "go-icon go-remove--icon"
        }))))
    })).component("goCmpRecordIcon", Object(_n.a)(La)).component("goCmpRecoverPass", Object(_n.a)(function() {
        var e = Object(Zn.e)("$route", "goSvcUniapiAuthentication", "goMdlPopUpsSvcManager")
          , t = Fe()(e, 3)
          , n = t[0]
          , a = t[1]
          , r = t[2];
        function o() {
            return (o = Ma()(Ia.a.mark(function e() {
                var t, o;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (t = Object(se.getDeepProperty)(n, "current.params.email"),
                            o = Object(se.getDeepProperty)(n, "current.params.hash"),
                            !t || !o) {
                                e.next = 12;
                                break
                            }
                            return e.prev = 3,
                            e.next = 6,
                            a.recoverPasswordHash(t, o);
                        case 6:
                            r.openSuccess({
                                title: "auth.recoverPassword.successTitle",
                                message: "auth.recoverPassword.success",
                                cancel: "common.close",
                                closable: !1
                            }),
                            e.next = 12;
                            break;
                        case 9:
                            e.prev = 9,
                            e.t0 = e.catch(3),
                            r.openError({
                                title: "auth.recoverPassword.error.title",
                                message: "auth.recoverPassword.error.message",
                                accept: "common.close"
                            });
                        case 12:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[3, 9]])
            }))).apply(this, arguments)
        }
        return Object(Qn.useEffect)(function() {
            !function() {
                o.apply(this, arguments)
            }()
        }, []),
        Kn.a.createElement(Kn.a.Fragment, null)
    })).component("goCmpToggleSwitch", da).component("goCmpSubscriptionBox", ya).component("goCmpUserInfo", fa).name
      , Ra = n(338)
      , Da = n.n(Ra);
    n(582);
    function _a(e, t, n) {
        var a = t("goFltrSpotlight");
        return {
            restrict: "A",
            template: Da.a,
            link: {
                pre: function(t, r, o) {
                    var i, c = r.find("img"), s = e(o.goAttrImageTriangle)(t), l = !se.isDefined(o.goAttrImageSpotlightBg) || JSON.parse(o.goAttrImageSpotlightBg), u = "go-image";
                    function d() {
                        o.goAttrImageErrorMsg ? (t.errorMsg = o.goAttrImageErrorMsg,
                        r.addClass("".concat(u, "__error-msg"))) : r.addClass("".concat(u, "__error"))
                    }
                    if (c.on("load", function() {
                        r.addClass("".concat(u, "__loaded")),
                        c.off("load")
                    }),
                    c.on("error", function() {
                        d(),
                        c.off("error")
                    }),
                    "" === o.goDrctImage ? d() : c.attr("src", o.goDrctImage),
                    o.goAttrImageSrcset && c.attr("srcset", o.goAttrImageSrcset),
                    o.goAttrImageAltTitle && (r.attr("title", o.goAttrImageAltTitle),
                    c.attr("title", o.goAttrImageAltTitle),
                    c.attr("alt", o.goAttrImageAltTitle)),
                    o.goAttrImageLink && (r.addClass("".concat(u, "__darken")),
                    r.attr("href", o.goAttrImageLink)),
                    o.goAttrImageItemtype && r.attr("itemtype", o.goAttrImageItemtype),
                    l) {
                        var g = {
                            resize: "CROP"
                        };
                        o.goDrctImage.indexOf("saturation=") >= 0 && Object.assign(g, n.spotlight.effects.epgUpcoming),
                        r.css({
                            "background-image": "url(\n              ".concat(a(o.goDrctImage, 1, 1, g), ")"),
                            "background-size": "100%"
                        })
                    }
                    s && (i = t.$watch("item.canUpgrade", function() {
                        s.isTVOD ? (r.addClass("".concat(u, "__triangle-vod")),
                        i()) : s.canUpgrade ? r.addClass("".concat(u, "__triangle-svod")) : r.removeClass("".concat(u, "__triangle-svod"))
                    }))
                }
            }
        }
    }
    function Oa(e, t, n) {
        var a = e("goFltrDetailsLink")
          , r = n.goType;
        return {
            scope: {
                item: "="
            },
            link: function(e, n) {
                var o, i, c;
                "" !== (o = a(e.item)) && n.attr("href", o),
                e.item && (i = e.item.goType === r.Subscription,
                c = e.item.url,
                !i && c && c.indexOf(t.host()) < 0 && n.attr("target", "_blank"))
            }
        }
    }
    _a.$inject = ["$parse", "$filter", "goCnstEnumerated"],
    Oa.$inject = ["$filter", "$location", "goCnstEnumerated"];
    var Ua = r.a.module("go.directives", []).directive("goDrctImage", _a).directive("goDrctProductLink", Oa).directive("goDrctSameAs", function() {
        return {
            require: "ngModel",
            link: function(e, t, n, a) {
                a.$validators.sameAs = function(e) {
                    return e === n.goDrctSameAs
                }
            }
        }
    }).name
      , ka = n(337)
      , xa = n.n(ka)
      , ja = r.a.module("goMdlRouting", [xa.a, c.a]).config(["$routeProvider", function(e) {
        Object.assign(e, {
            resolveWhen: function(t, n) {
                return n.resolve = Object.assign(n.resolve || {}, {
                    panic: ["goSvcBootstrap", "$location", function(e, t) {
                        return e.isFinished(t.path())
                    }
                    ]
                }),
                e.when(t, n)
            }
        })
    }
    ]).name;
    function Ba(e, t, n) {
        "ngInject";
        return {
            restrict: "A",
            link: function(a, r, o) {
                r.click(function() {
                    var r = e(o.goMdlAnalyticsDrctAnalytic)(a)
                      , i = r ? r.name : ""
                      , c = r ? r.data : {}
                      , s = r ? r.contentWise : {};
                    i && (c && Object.keys(c).forEach(function(e) {
                        f()(c[e]) && delete c[e]
                    }),
                    s && n.setParams(s),
                    t.trackEvent(i, c))
                })
            }
        }
    }
    function Fa(e, t, n, a, r, i, c) {
        "ngInject";
        var s = i.go.uniapi.config.deviceType.PC
          , l = i.go.uniapi.config.instanceIds[c.env]
          , u = o.caTypes.CHANNEL_CONTENT_TYPE
          , d = [u.LIVE, u.VOD, u.L7D];
        return {
            getParams: function(e) {
                var n = t.getSessionItem("contentWiseTrack")
                  , a = {};
                t.removeSessionItem("contentWiseTrack"),
                n && n.id === e && (a = m(e, n.trackId || null, n.uxReference || null));
                return a
            },
            setParams: function(e) {
                t.setSessionItem("contentWiseTrack", e)
            },
            getDefaultParams: function() {
                return m(null, null, null)
            },
            createObj: m,
            createUXR: f,
            getCommonParams: h,
            getFilter: function(e) {
                return -1 !== d.indexOf(e) ? e : void 0
            },
            getConfig: function(t, n) {
                return t ? h(t, n).then(function(e) {
                    return {
                        requestConfig: function(e) {
                            return e && e.useCase && r.isLoggedIn ? {
                                headers: {}
                            } : {}
                        }(t),
                        requestParams: e,
                        useCaseLayout: t.layout
                    }
                }).catch(function() {
                    return e.when({})
                }) : e.when({})
            },
            isUXRAvailable: function(t) {
                return t.useCaseAvailability ? n.isCWEnabled().then(function() {
                    return p(t.useCaseAvailability) || e.reject()
                }) : e.when(!0)
            }
        };
        function g() {
            return n.getCWRecomms().then(function(e) {
                return a.getProperty(e, "UXREF_DEVICE_TYPE")[s]
            })
        }
        function p(e) {
            return n.getCWRecomms().then(function(t) {
                return a.getProperty(t, e)
            })
        }
        function m(e, t, n) {
            return {
                id: e,
                trackId: t,
                uxReference: n
            }
        }
        function f(e, t) {
            var a;
            return n.isCWEnabled().then(g).then(function(n) {
                return a = n,
                L()(t) ? t : p(e.useCase)
            }).then(function(e) {
                return [l, a, e].join(".")
            }).catch(function() {
                return ""
            })
        }
        function h(t, n) {
            return t ? f(t, n).then(function(t) {
                var n = {
                    px_device_type: i.go.uniapi.config.deviceType.PC,
                    px_is_anonym: r.isAnonymousLoggedIn,
                    px_uxr: t,
                    px_user_id: r.isLoggedIn ? r.profile.id : void 0
                };
                return t ? e.when(n) : e.reject()
            }) : e.when({})
        }
    }
    Ba.$inject = ["$parse", "goMdlAnalyticsSvcManager", "goMdlAnalyticsSvcContentWise"],
    Fa.$inject = ["$q", "goSvcWebStorage", "goSvcUniapiParameter", "goSvcUtils", "goSvcUserStatus", "goCnstConfig", "goCnstApp"];
    var Va = n(125)
      , Ha = n.n(Va);
    function Ga(e, t, n, a, r, o, i, c, s) {
        "ngInject";
        var l, u, d, g, p = c.getLogger("SERVICE", "goMdlAnalyticsSvcManager"), m = r.Math, f = s.sessionIdPrecision, h = [], v = s.handlersFns || [], y = s.eventsNamesMap || {}, S = s.handlersPlugins || [], b = s.autoTrackPage, E = s.autoTrackUserLogin, T = s.namespaceSeparator;
        function C(e, t, n, a) {
            e = function(e) {
                var t = (e = e || "undefinedEvent").split(T);
                return {
                    name: (y[t[0]] || {})[t[1]] || e,
                    fullName: e,
                    namespace: t[0],
                    originalName: t[1]
                }
            }(e),
            h.forEach(function(r) {
                r[a](e, t, n)
            }),
            p.debug("Event tracked", i.getProperty(e, "name"), i.getProperty(n, "eventGroup"), t)
        }
        function P(e, t, n) {
            C(e, t, n, "trackPage")
        }
        function I(e, t, n) {
            C(e, t, n, "trackUserLogin")
        }
        return S.forEach(function(t) {
            !function(e) {
                function t(t) {
                    e[t] = Ha()(e[t]) === ("undefined" == typeof Function ? "undefined" : Ha()(Function)) ? e[t] : se.noop
                }
                v.forEach(t),
                h.push(e)
            }(e.get(t))
        }),
        b && function() {
            function e() {
                P(i.getDeepProperty(n, "current.page.eventName", "PAGE_VIEW"), {}, {
                    params: i.getDeepProperty(n, "current.params", {}),
                    page: a.url(),
                    title: ""
                })
            }
            e(),
            d = t.$on("$routeChangeSuccess", e),
            g = t.$on("analytics::routeChangeSuccess", e)
        }(),
        E && (o.$watch("isLoggedIn", function(e, t) {
            e && !t && o.profile ? I("login::login", {
                USERID: Mt.a.MD5(o.profile.id.toString()).toString()
            }) : !e && t && I("login::logout", {
                USERID: ""
            })
        }),
        o.$watch("isAnonymousLoggedIn", function(e, t) {
            e && !t && I("login::anonymous", {})
        })),
        {
            destroy: function() {
                g && g(),
                d && d()
            },
            trackPage: P,
            trackEvent: function(e, t, n) {
                C(e, t, n, "trackEvent")
            },
            trackUserLogin: I,
            createSessionId: function() {
                u = parseInt(m.random() * f, 10)
            },
            getSessionId: function() {
                return u
            },
            setup: function(e) {
                l = e,
                h.forEach(function(e) {
                    e.setup(l)
                })
            },
            removeSessionId: function() {
                u = void 0
            }
        }
    }
    function Wa(e, t, n, a, r) {
        "ngInject";
        var o = "N/A"
          , i = {
            heartbeatId: -1,
            text: o,
            mediaQualityId: -1
        }
          , c = {
            id: -1,
            name: o,
            callLetter: o
        }
          , s = {
            epgProgramId: -1,
            programName: o
        }
          , l = {
            id: -1,
            movieType: 0
        };
        return {
            getVodCommon: function() {
                var t = a.get("product") || l
                  , o = t.id
                  , i = t.seriesId
                  , c = void 0 === i ? -1 : i
                  , s = t.movieType
                  , d = t.sourceProductType
                  , g = u().mediaQualityId
                  , p = r.getLastCurrentTime();
                return {
                    CONTENTID: o,
                    SERIESID: c,
                    MEDIAID: g,
                    PLAYBACKSESSIONID: n.getSessionId(),
                    CONTENTTYPE: s || d,
                    INSTANTPLAYBACK: e.toMaxFixed(p)
                }
            },
            getLiveCommonProduct: function() {
                var e = d()
                  , a = u()
                  , r = a.heartbeatId
                  , i = a.text
                  , c = {
                    LIVESTREAMID: r,
                    LIVESTREAMQUALITYNAME: i,
                    PROGRAMID: e.epgProgramId,
                    PLAYBACKSESSIONID: n.getSessionId(),
                    PROGRAMNAME: e.programName
                };
                return Object.assign(c, function(e) {
                    var n, a;
                    e.channel ? n = e.channel : e.liveChannelId && (n = t.getSyncCachedChannel(e.liveChannelId));
                    a = n ? {
                        CHANNELCALLLETTER: n.callLetter,
                        CHANNELID: n.id,
                        CHANNELNAME: n.name
                    } : {
                        CHANNELCALLLETTER: o,
                        CHANNELID: e.liveChannelId || -1,
                        CHANNELNAME: e.channelName || o
                    };
                    return a
                }(e))
            },
            getLiveCommonChannel: function() {
                var e = a.get("channel") || c
                  , t = d()
                  , r = t.epgProgramId
                  , o = t.programName
                  , i = u()
                  , s = i.heartbeatId
                  , l = i.text;
                return {
                    CHANNELID: e.id,
                    CHANNELNAME: e.name,
                    CHANNELCALLLETTER: e.callLetter,
                    LIVESTREAMID: s,
                    LIVESTREAMQUALITYNAME: l,
                    PROGRAMID: r,
                    PLAYBACKSESSIONID: n.getSessionId(),
                    PROGRAMNAME: o
                }
            }
        };
        function u() {
            return r.getCurrentMedia() || i
        }
        function d() {
            return a.get("product") || s
        }
    }
    function qa(e, t, n, a, r, o, i, c, s) {
        var l, u, d = a.getLogger("SERVICE", "goMdlAnalyticsSvcPerformance"), g = o.MovieType, p = i.goPlayingType, m = "player" + c.namespaceSeparator, f = {
            getMediaStart: m + "getMediaStart",
            getMediaEnd: m + "getMediaEnd",
            prepareStart: m + "prepareStart",
            prepareEnd: m + "prepareEnd",
            bufferingStart: m + "bufferingStart",
            bufferingEnd: m + "bufferingEnd",
            renderStart: m + "renderStart",
            renderEnd: m + "renderEnd",
            resumeStart: m + "resumeStart",
            resumeEnd: m + "resumeEnd",
            dialogStart: m + "pinStart",
            dialogEnd: m + "pinEnd",
            manifestStart: m + "manifestStart",
            manifestEnd: m + "manifestEnd",
            drmStart: m + "drmStart",
            drmEnd: m + "drmEnd"
        };
        function h() {
            return r.get("playingType") === p.live || r.get("playingType") === p.fabrixLive
        }
        function v(t, n, a) {
            var r = {
                PLAYSESSIONID: s.token
            };
            u && (a && e.trackEvent(t, n, {
                eventGroup: "browsing"
            }),
            e.trackEvent(t, Object.assign(n, r), {
                eventGroup: "perfPlayVod"
            }))
        }
        function y(t, n, a) {
            var r = {
                PLAYSESSIONID: s.token
            };
            u && (a && e.trackEvent(t, n, {
                eventGroup: "browsing"
            }),
            e.trackEvent(t, Object.assign(r, n), {
                eventGroup: "perfPlayLive"
            }))
        }
        return {
            trackPlayMovie: function(e) {
                try {
                    v("detail::playMovie", {
                        CONTENTID: e.id,
                        CONTENTTYPE: g.Movie
                    }, !0)
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackPlayEpisode: function(e) {
                try {
                    v("detail::playEpisode", {
                        CONTENTID: e.id,
                        CONTENTTYPE: g.Episode
                    }, !0)
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackEpgPlay: function() {
                try {
                    y("epg::epgPlay", t.getLiveCommonChannel(), !0)
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackLiveDetailPlay: function() {
                try {
                    y("epg::liveDetailPlay", t.getLiveCommonChannel(), !0)
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackGetMediaStart: function() {
                try {
                    v(f.getMediaStart, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackGetMediaEnd: function() {
                try {
                    v(f.getMediaEnd, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackDialogPinStart: function(e, t) {
                try {
                    v(f.dialogStart, {
                        CONTENTID: e,
                        CONTENTTYPE: t
                    })
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackDialogPinEnd: function(e, t) {
                try {
                    v(f.dialogEnd, {
                        CONTENTID: e,
                        CONTENTTYPE: t
                    })
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackPrepareStart: function() {
                try {
                    h() ? y(f.prepareStart, t.getLiveCommonProduct()) : v(f.prepareStart, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackPrepareEnd: function() {
                try {
                    h() ? y(f.prepareEnd, t.getLiveCommonProduct()) : v(f.prepareEnd, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackInitialBufferingStart: function() {
                try {
                    h() ? y(f.bufferingStart, t.getLiveCommonProduct()) : v(f.bufferingStart, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackInitialBufferingEnd: function() {
                try {
                    h() ? y(f.bufferingEnd, t.getLiveCommonProduct()) : v(f.bufferingEnd, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackRenderStart: function() {
                var e;
                try {
                    l = !1,
                    h() ? (e = t.getLiveCommonProduct(),
                    y(f.renderStart, e)) : (delete (e = t.getVodCommon()).MEDIAID,
                    v(f.renderStart, e))
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackRenderEnd: function() {
                try {
                    l || (h() ? y(f.renderEnd, t.getLiveCommonProduct()) : v(f.renderEnd, t.getVodCommon()),
                    l = !0)
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackManifestStart: function() {
                try {
                    h() ? y(f.manifestStart, t.getLiveCommonProduct()) : v(f.manifestStart, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackManifestEnd: function() {
                try {
                    h() ? y(f.manifestEnd, t.getLiveCommonProduct()) : v(f.manifestEnd, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackDrmStart: function() {
                try {
                    h() ? y(f.drmStart, t.getLiveCommonProduct()) : v(f.drmStart, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackDrmEnd: function() {
                try {
                    h() ? y(f.drmEnd, t.getLiveCommonProduct()) : v(f.drmEnd, t.getVodCommon())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackGetRestartTVUrlStart: function() {
                try {
                    y("player::restartTVUrlStart", t.getLiveCommonProduct())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            trackGetRestartTVUrlEnd: function() {
                try {
                    y("player::restartTVUrlEnd", t.getLiveCommonProduct())
                } catch (e) {
                    d.debug("Could not make perfomance analysis", e)
                }
            },
            start: function() {
                u = !0
            },
            end: function() {
                u = !1
            }
        }
    }
    function Ya(e) {
        "ngInject";
        var t, n = {
            timeToPlayBtn: void 0,
            preloadedVOD: void 0
        };
        return {
            setDetailLoadTime: function() {
                t = e.getTime(!0)
            },
            setTimeToPlayBtn: function() {
                n.timeToPlayBtn = e.getTime(!0) - t
            },
            setPreloadedVOD: function(e) {
                n.preloadedVOD = e
            },
            resetPreloadedVOD: function() {
                n.preloadedVOD = void 0
            },
            resetTimeToPlayBtn: function() {
                n.timeToPlayBtn = void 0
            },
            reset: function() {
                this.resetPreloadedVOD(),
                this.resetTimeToPlayBtn()
            },
            getStats: function() {
                return n
            }
        }
    }
    function za(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s = c.throttledEvents || []
          , l = c.throttleTime || 0
          , u = {}
          , d = {
            sessionId: 0,
            value: 0
        }
          , g = i.goPlayingType
          , p = g.live
          , m = g.fabrixLive
          , f = /(<([^>]+)>)/gi;
        return s.map(function(e) {
            u[e] = t.throttle(function(e, t, n) {
                a.trackEvent(e, t, n)
            }, l)
        }),
        {
            trackEvent: function(e, t) {
                (function(e) {
                    S && "player::play" === e && (d.sessionId = a.getSessionId(),
                    d.value = n.getTime())
                }
                )(e),
                y(e, t)
            },
            trackError: function(e) {
                var n = {};
                e.status > 0 ? n["ERROR_".concat(e.status)] = t.getProperty(e, "statusText") : n.ERRORMESSAGE = e.message || t.getDeepProperty(e, "error.message"),
                n.ERRORTRACE = encodeURI(t.getDeepProperty(e, "detail.stack", "")),
                n.ERRORURL = encodeURI(t.getDeepProperty(e, "detail.url", c.unknown)),
                y("player::error", n)
            },
            trackShakaLegacyError: function(e) {
                var t = {};
                "net" === e.detail.type && e.detail.status > 0 ? t["ERROR_".concat(e.detail.status)] = e.detail.message : t.ERRORMESSAGE = e.detail.message,
                t.ERRORTRACE = encodeURI(e.detail.stack || ""),
                t.ERRORURL = encodeURI(e.detail.url || "UNKNOWN"),
                y("player::errorShaka", t)
            },
            trackShakaError: function(n) {
                var a = n.detail || n || {}
                  , r = a.code || c.unknown
                  , o = a.category || c.unknown
                  , i = {};
                i.ERRORMESSAGE = t.getAnalyticsError(o, r);
                var s = (d = a.data,
                l = void (C()(d) ? d.map(function(e) {
                    return JSON.stringify(e)
                }).join(", ").replace(f, "") : JSON.stringify(d)),
                u = e.document.createElement("textarea"),
                u.innerHTML = l,
                u.textContent);
                var l, u;
                var d;
                i.ERRORTRACE = s,
                y("player::errorShaka", i)
            }
        };
        function h(i) {
            var c = o.get("product")
              , s = {
                PLAYBACKSESSIONTIME: a.getSessionId() === d.sessionId ? e.Math.trunc(n.getTime() - d.value) : 0,
                TRACKID: t.getDeepProperty(c, "contentWiseParams.trackId", null),
                UXREFERENCE: t.getDeepProperty(c, "contentWiseParams.uxReference", null)
            }
              , l = 0 === i.indexOf("player::restart") || "player::live" === i ? r.getLiveCommonChannel() : r.getLiveCommonProduct();
            return Object.assign(s, l)
        }
        function v(e) {
            return S() ? h(e) : (n = o.get("product"),
            a = {
                SUBSCRIPTIONID: t.getProperty(n, "isTVOD", !1) ? 0 : t.getProperty(n, "sourceProductId"),
                TRACKID: t.getDeepProperty(n, "contentWiseParams.trackId", null),
                UXREFERENCE: t.getDeepProperty(n, "contentWiseParams.uxReference", null),
                DISTRIBUTORID: t.getDeepProperty(n, "distributor.id")
            },
            Object.assign(r.getVodCommon(), a));
            var n, a
        }
        function y(e, t) {
            var n = {};
            t = t || {},
            Object.assign(t, v(e)),
            n.eventGroup = S() ? "playbackLive" : "playbackVOD",
            u[e] ? u[e](e, t, n) : a.trackEvent(e, t, n)
        }
        function S() {
            var e = o.get("playingType");
            return e === p || e === m
        }
    }
    Ga.$inject = ["$injector", "$rootScope", "$route", "$location", "$window", "goSvcUserStatus", "goSvcUtils", "goSvcLogger", "goMdlAnalyticsCnstMain"],
    Wa.$inject = ["goSvcUtils", "goSvcLiveOrchestrator", "goMdlAnalyticsSvcManager", "goMdlPlayerSvcStatus", "ngSpManagerSvc"],
    qa.$inject = ["goMdlAnalyticsSvcManager", "goMdlAnalyticsSvcParameter", "goSvcUniapiAuthentication", "goSvcLogger", "goMdlPlayerSvcStatus", "uaConstants", "goCnstEnumerated", "goMdlAnalyticsCnstMain", "uaScope"],
    Ya.$inject = ["goSvcTime"],
    za.$inject = ["$window", "goSvcUtils", "goSvcTime", "goMdlAnalyticsSvcManager", "goMdlAnalyticsSvcParameter", "goMdlPlayerSvcStatus", "goCnstEnumerated", "goMdlAnalyticsCnstMain"];
    var Qa = n(20)
      , Ka = n.n(Qa);
    function Xa(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        "ngInject";
        var p, m, f, h, v, y = o.getLogger("SERVICE", "goMdlAnalyticsSvcUniapi"), S = d.uniapi || {}, b = n.defer(), E = b.promise, T = S.eventGroups, P = [];
        function I() {
            P = []
        }
        return v = function(t, n, a) {
            (n = n || {}).EVENTTYPE = t,
            (a = a || {}).eventGroup = a.eventGroup || S.defaultEventGroup,
            C()(t) ? P = P.concat(t) : P.push({
                Event: u.getProperty(T, a.eventGroup),
                Data: n,
                Timestamp: r.getTime()
            }),
            y.debug("Events batch", P),
            E.then(function() {
                P.length >= p ? h() : f = f || e(h, m)
            })
        }
        ,
        {
            trackEvent: function(e, t, n) {
                v(e.name, t, n)
            },
            trackPage: function(e, t, a) {
                var r, o, i, d, p, m = {
                    detail: {
                        movie: {
                            params: {
                                CONTENTID: function(e) {
                                    var t = e.movieId;
                                    return u.getProperty(c.decode(t), "id")
                                }
                            }
                        },
                        serie: {
                            params: {
                                CONTENTID: function(e) {
                                    var t = e.seriesId;
                                    return u.getProperty(c.decode(t), "id")
                                }
                            }
                        }
                    },
                    thematicArea: {
                        home: {
                            params: {
                                THEMATICAREAID: function(e) {
                                    var t = e.category;
                                    return u.getProperty(c.decode(t), "id")
                                },
                                THEMATICAREANAME: function(e) {
                                    var t = e.category;
                                    return u.getProperty(c.decode(t), "goSvcSlug")
                                },
                                GENREID: function() {
                                    return l.getGenre().then(function(e) {
                                        return e.id
                                    }).catch(function() {
                                        return n.when()
                                    })
                                },
                                GENRENAME: function() {
                                    return l.getGenre().then(function(e) {
                                        return e.title
                                    }).catch(function() {
                                        return n.when()
                                    })
                                },
                                CONTENTTYPE: function() {
                                    return l.getType().then(function(e) {
                                        return e.title.toUpperCase()
                                    })
                                }
                            }
                        }
                    },
                    catchupChannel: {
                        grid: {
                            params: {
                                ROOTCATCHUPID: function() {
                                    return s.getCatchup().then(function(e) {
                                        return e.id
                                    })
                                },
                                ROOTCATCHUPNAME: function() {
                                    return s.getCatchup().then(function(e) {
                                        return e.title
                                    })
                                }
                            }
                        },
                        channel: {
                            params: {
                                CATCHUPCHANNELID: function(e) {
                                    var t = e.category;
                                    return u.getProperty(c.decode(t), "id")
                                },
                                CATCHUPCHANNELNAME: function(e) {
                                    var t = e.category;
                                    return u.getProperty(c.decode(t), "goSvcSlug")
                                }
                            }
                        },
                        home: {
                            params: {
                                CATCHUPCHANNELID: function(e) {
                                    var t = e.category;
                                    return u.getProperty(c.decode(t), "id")
                                },
                                CATCHUPCHANNELNAME: function(e) {
                                    var t = e.category;
                                    return u.getProperty(c.decode(t), "goSvcSlug")
                                },
                                GENREID: function() {
                                    return l.getGenre().then(function(e) {
                                        return e.id
                                    }).catch(function() {
                                        return n.when()
                                    })
                                },
                                GENRENAME: function() {
                                    return l.getGenre().then(function(e) {
                                        return e.title
                                    }).catch(function() {
                                        return n.when()
                                    })
                                }
                            }
                        }
                    },
                    epg: {
                        filter: {
                            params: {
                                WEEKDAY: g.go.goMdlEpg.dayParam,
                                GENRESELECTED: function(e) {
                                    var t = e.genre;
                                    return g.go.goMdlEpg.smartFilter.genres.filter(function(e) {
                                        return e.id === u.getProperty(c.decode(t), "id")
                                    })[0].title.toUpperCase()
                                }
                            }
                        }
                    }
                };
                return t = t || {},
                (r = (a = a || {}).params,
                d = {},
                o = e.namespace,
                i = e.originalName,
                p = (m[o] || {})[i] || {},
                D()(p.params, function(e, t) {
                    var a = Ka()(e) ? e(r) : r[e];
                    d[t] = n.when(a)
                }),
                n.all(d)).then(function(t) {
                    v(e.name, t, a)
                })
            },
            trackUserLogin: function(e, t, n) {
                v(e.name, t, n)
            },
            sendBatch: h = function() {
                var t;
                if (e.cancel(f),
                f = null,
                P.length) {
                    var r = P.slice();
                    I(),
                    t = a.addEventBatch(r).catch(function(e) {
                        y.error("error sending batch", e)
                    })
                } else
                    t = n.when("Empty events");
                return t
            }
            ,
            setup: function() {
                i.getAnalyticsConfig().then(function(e) {
                    var n = e.batchSize
                      , a = e.batchTimeLimit;
                    p = se.isDefined(n) ? n : S.batchSize,
                    m = se.isDefined(a) ? a : S.batchInterval,
                    m *= 1e3,
                    p || m ? (t.addEventListener("beforeunload", h),
                    b.resolve(!0)) : (I(),
                    se.noop,
                    se.noop,
                    se.noop,
                    v = se.noop,
                    h = se.noop)
                })
            }
        }
    }
    function Ja(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f) {
        "ngInject";
        var h, v, y, S, b, E, T, C = m.goPlayingType, P = g.youbora.qualityType, I = g.youbora.environmentValue, A = p.go.uniapi.config.deviceType.PC, M = g.youbora.deviceTypeName, N = d.version, w = d.commitNumber, L = d.sha, $ = d.dirty, R = "".concat(N, "-").concat(w, "-").concat(L).concat($ ? "-dirty" : ""), D = l.getLogger("SERVICE", "goMdlAnalyticsSvcYoubora");
        return {
            init: function() {
                return D.debug("Init service"),
                T = 0,
                b = 0,
                r.getAnalyticsConfig().then(function(e) {
                    E = e
                })
            },
            setup: function() {
                var t = (a = c.get("playingType"),
                !(!e.isLoggedIn || !se.isDefined($YB) || v || a === C.trailer) && (r = m.youboraIntegrationLevel,
                o = r.Live,
                i = r.Vod,
                l = r.Both,
                d = c.get("playingType") === C.live || c.get("playingType") === C.fabrixLive ? o : i,
                E.youboraIntegrationLevel === l || E.youboraIntegrationLevel === d))
                  , n = s.getShakaPlayer();
                var a, r, o, i, l, d;
                try {
                    t ? ((h = u.isNew() ? new $YB.plugins.Shaka2(n,window.document.querySelector("#ng-sp-video"),_()) : new $YB.plugins.Shaka(n,_())).viewManager.isJoinSent = !0,
                    v = !0) : v = !1
                } catch (e) {
                    D.debug("Exception (ignored) initializing YB.")
                }
            },
            stop: function() {
                v && h.endedHandler(),
                v = !1,
                y = !1
            },
            endJoin: function() {
                D.debug("End join"),
                T = f.getTime(!0)
            },
            startJoin: function() {
                D.debug("Start join"),
                b = f.getTime(!0)
            },
            sendJoin: function() {
                v && !y && (h.viewManager.isJoinSent = !1,
                (S = h.viewManager.chrono.joinTime).startTime = b,
                S.lastTime = T || f.getTime(!0),
                h.joinHandler(),
                y = !0)
            },
            sendErrorLegacy: function(e) {
                if (v) {
                    var t = a.getDeepProperty(e, "detail.status", 0)
                      , n = t > 0 ? t : e.detail.message;
                    h.errorHandler(n, e.detail.message)
                }
                v = !1,
                y = !1
            },
            sendError: function(e) {
                if (v) {
                    var t = e.detail || e || {}
                      , n = t.code || g.unknown
                      , r = t.category || g.unknown
                      , o = a.getAnalyticsError(r, n);
                    h.errorHandler(o, o)
                }
                v = !1,
                y = !1
            }
        };
        function _() {
            var r, l, u, f = c.get("product"), h = {
                accountCode: (r = g.youbora.accountCode,
                l = r.Production,
                u = r.Default,
                d.env === d.data.environment.prod ? l : u),
                enableAnalytics: !0,
                username: e.profile.id,
                transactionCode: t.getSessionToken(),
                extraParams: {
                    param1: p.go.uniapi.config.instanceIds[d.env],
                    param2: P[s.getCurrentMedia().quality],
                    param3: I[d.env],
                    param4: M,
                    param5: d.version,
                    param7: f.ybCommercializationType,
                    param8: f.itemType
                }
            };
            return Object.assign(h, function() {
                var e, t, r = i.getStats(), l = c.get("product"), u = c.get("playingType") === C.live || c.get("playingType") === C.fabrixLive, d = s.getCurrentMedia();
                if (u)
                    if (t = a.getProperty(l, "liveChannelId", -1),
                    l.goType === m.goType.LiveProgram)
                        e = l.channelName;
                    else {
                        var g = a.getProperty(l, "channel") || n.getSyncCachedChannel(t);
                        e = a.getProperty(g, "name", "")
                    }
                else
                    e = a.getProperty(l, "name", ""),
                    t = a.getProperty(l, "id");
                return {
                    media: {
                        title: e,
                        duration: a.getProperty(l, "duration", 0),
                        resource: a.getProperty(d, "url"),
                        isLive: u
                    },
                    properties: {
                        contentId: t,
                        device: {
                            type: A
                        },
                        version: R,
                        sessionId: o.getSessionId(),
                        timeToPlayBtn: r.timeToPlayBtn,
                        preloadedVOD: r.preloadedVOD
                    }
                }
            }())
        }
    }
    Xa.$inject = ["$timeout", "$window", "$q", "goSvcUniapiEvent", "goSvcTime", "goSvcLogger", "goSvcUniapiParameter", "goSvcSlug", "goSvcLibrary", "goSvcCatalog", "goSvcUtils", "goMdlAnalyticsCnstMain", "goCnstConfig"],
    Ja.$inject = ["goSvcUserStatus", "goSvcUniapiAuthentication", "goSvcLiveOrchestrator", "goSvcUtils", "goSvcUniapiParameter", "goMdlAnalyticsSvcManager", "goMdlAnalyticsSvcPlayerStats", "goMdlPlayerSvcStatus", "ngSpManagerSvc", "goSvcLogger", "goMdlPlayerSvcVersion", "goCnstApp", "goMdlAnalyticsCnstMain", "goCnstConfig", "goCnstEnumerated", "goSvcTime"];
    var Za = r.a.module("goMdlAnalytics", []).constant("goMdlAnalyticsCnstMain", {
        unknown: "UNKNOWN",
        autoTrackPage: !0,
        autoTrackUserLogin: !0,
        handlersPlugins: ["goMdlAnalyticsSvcUniapi"],
        handlersFns: ["trackPage", "trackEvent", "trackUserLogin", "setup"],
        namespaceSeparator: "::",
        eventsNamesMap: {
            catchupChannel: {
                filter: "CATCHUPCHANNEL_FILTER",
                home: "CATCHUPCHANNEL_ACCESS",
                grid: "CATCHUPCHANNEL_GRID",
                detail: "CATCHUPCHANNEL_DETAIL",
                channel: "CATCHUPCHANNEL_CHANNEL",
                channelDetail: "CATCHUPCHANNEL_CHANNEL_DETAIL",
                channelAccess: "CATCHUPCHANNEL_CHANNEL_ACCESS",
                liveDetail: "CATCHUPCHANNEL_CHANNEL_LIVE_DETAIL",
                channelSwipe: "CATCHUPCHANNEL_CHANNEL_SWIPE"
            },
            detail: {
                castSearch: "DETAIL_CAST_SEARCH",
                genreSearch: "DETAIL_GENRE_SEARCH",
                episodeSelect: "EPISODE_SELECT",
                vod: "DETAIL_VOD",
                live: "DETAIL_LIVE",
                recommendation: "DETAIL_RECOMMENDATION",
                seasonSelect: "SEASON_SELECT",
                upselling: "DETAIL_UPSELLING",
                playMovie: "MOVIE_PLAY",
                playEpisode: "SERIE_PLAY_EPISODE",
                purchaseMovie: "PURCHASE_MOVIE_ENTER",
                purchaseSeason: "PURCHASE_SEASON_ENTER",
                purchaseEpisode: "PURCHASE_EPISODE_ENTER",
                externalCatchupPlay: "DETAIL_CATCHUP_PLAY",
                subscription: "DETAIL_SUBSCRIPTION",
                episodeSwipe: "DETAIL_EPISODE_SWIPE",
                recommendationSwipe: "DETAIL_RECOMMENDATION_SWIPE",
                upsellingSwipe: "DETAIL_UPSELLING_SWIPE",
                recommendationSelect: "DETAIL_RECOMMENDATION_SELECT",
                upsellingSelect: "DETAIL_UPSELLING_SELECT"
            },
            liveDetail: {
                live: "LIVE_PLAY",
                restart: "LIVEDETAIL_RESTART"
            },
            epg: {
                guide: "EPG_GUIDE",
                daySwitch: "EPG_DAY_SWITCH",
                filter: "EPG_GENRE_FILTER",
                liveDetail: "LIVE_DETAIL",
                now: "EPG_NOW",
                timeSwitch: "EPG_TIME_SWITCH",
                epgPlay: "EPG_PLAY",
                liveDetailPlay: "LIVEDETAIL_PLAY",
                liveDetailUpselling: "LIVEDETAIL_UPSELLING"
            },
            error: {
                error: "ERROR"
            },
            home: {
                home: "HOME_ACCESS",
                editorial: "HOME_EDITORIAL",
                liveDetail: "HOME_LIVE_DETAIL",
                catchupChannel: "HOME_CATCHUPCHANNEL_ACCESS",
                thematicAreaContent: "HOME_THEMATICAREA_DETAIL",
                promo: "HOME_PROMOTIONS",
                liveSwipe: "HOME_LIVE_SWIPE",
                thematicAreaSwipe: "HOME_THEMATICAREA_SWIPE",
                catchupChannelSwipe: "HOME_CATCHUPCHANNEL_SWIPE"
            },
            landing: {
                landing: "LANDING"
            },
            login: {
                anonymous: "LOGIN_ANONYMOUS",
                login: "LOGIN",
                logout: "LOGOUT",
                remember: "REMEMBER",
                register: "REGISTER",
                redirectOIDC: "REDIRECT_OIDC",
                loginOIDC: "LOGIN_OIDC"
            },
            mytv: {
                availableRecordings: "MYTV_AVAILABLE_RECORDINGS",
                rented: "MYTV_RENTALS",
                seriesFollowed: "MYTV_FOLLOW",
                scheduledRecordings: "MYTV_RECORDINGS",
                watched: "MYTV_WATCHLOG",
                wishlist: "MYTV_WISHLIST",
                detail: "MYTV_DETAIL",
                adult: "MYTV_ADULT_TVOD_ACCESS"
            },
            netflix: {
                subscription: "NETFLIX_SUBSCRIPTION",
                registration: "NETFLIX_REGISTRATION"
            },
            amazon: {
                redirect: "AMAZON_REDIRECT",
                activation: "AMAZON_ACTIVATION",
                alreadyUser: "AMAZON_ALREADY_USER",
                activationClick: "AMAZON_ACTIVATION_CLICK"
            },
            player: {
                buffering: "BUFFERING",
                error: "ERROR",
                errorShaka: "ERROR",
                play: "PLAY",
                pause: "PAUSE",
                resume: "RESUME",
                seek: "SEEK",
                stop: "STOP",
                getMediaStart: "GET_MEDIA_URL_START",
                getMediaEnd: "GET_MEDIA_URL_END",
                getResumeDataStart: "GET_MOVIE_RESUME_START",
                getResumeDataEnd: "GET_MOVIE_RESUME_END",
                prepareStart: "PREPARE_START",
                prepareEnd: "PREPARE_END",
                bufferingStart: "BUFFERING_START",
                bufferingEnd: "BUFFERING_END",
                renderStart: "RENDER_START",
                renderEnd: "RENDER_END",
                resumeStart: "DIALOG_RESUME_START",
                resumeEnd: "DIALOG_RESUME_END",
                pinStart: "DIALOG_PIN_START",
                pinEnd: "DIALOG_PIN_END",
                manifestStart: "MANIFEST_START",
                manifestEnd: "MANIFEST_END",
                drmStart: "DRM_START",
                drmEnd: "DRM_END",
                restart: "RESTART",
                restartCDN: "RESTART_CDN",
                restartFabrix: "RESTART_FABRIX",
                restartTVUrlStart: "GET_RESTART_URL_START",
                restartTVUrlEnd: "GET_RESTART_URL_END",
                live: "LIVE",
                audio: "AUDIO",
                subtitle: "SUBTITLE",
                nextEpisode: "NEXT_EPISODE"
            },
            registration: {
                chooseSubscription: "REGISTRATION_SUBSCRIPTION_SELECTION",
                emailConfirmation: "REGISTRATION_EMAIL_CONFIRMATION",
                emailValidation: "REGISTRATION_EMAIL_VALIDATION",
                userInformation: "REGISTRATION_USER_GVP_SCREEN",
                userSelection: "REGISTRATION_USER_SELECTION",
                userWelcome: "REGISTRATION_WELCOME_SCREEN",
                creditCardSelection: "REGISTRATION_CREDITCARD_SELECTION"
            },
            share: {
                facebook: "SHARE_FACEBOOK",
                twitter: "SHARE_TWITTER"
            },
            search: {
                live: "SEARCH_LIVE",
                search: "SEARCH",
                vod: "SEARCH_VOD",
                detail: "SEARCH_DETAIL",
                contentType: "SEARCH_CONTENTTYPE",
                help: "SEARCH_HELP"
            },
            settings: {
                settings: "SETTINGS",
                devices: "SETTINGS_DEVICES",
                mySubscriptions: "SETTINGS_SUBSCRIPTIONS",
                notifications: "SETTINGS_INTERESTS",
                parentalPin: "SETTINGS_PARENTAL",
                audiosAndSubtitles: "SETTINGS_AUDIO_SUBTITLES",
                audioChange: "SETTING_AUDIOS_CHANGE",
                subtitleChange: "SETTINGS_SUBTITLES_CHANGE",
                autoplay: "SETTING_AUTOPLAY_CHANGE",
                l7d: "SETTINGS_L7D",
                purchasePin: "SETTINGS_PURCHASE",
                userInfo: "SETTINGS_USER",
                purchaseSubscription: "PURCHASE_SUBSCRIPTION_ENTER",
                cancelSubscription: "CANCEL_SUBSCRIPTION_ENTER",
                changeCreditCard: "SETTINGS_CHANGE_CREDITCARD",
                activateL7d: "SETTINGS_ACTIVATE_L7D",
                deactivateL7d: "SETTINGS_DEACTIVATE_L7D",
                l7dPopUp: "L7D_AGREEMENT_POPUP"
            },
            thematicArea: {
                filter: "THEMATICAREA_FILTER",
                home: "THEMATICAREA_ACCESS",
                detail: "THEMATICAREA_DETAIL",
                categoriesSwipe: "THEMATICAREA_CATEGORIES_SWIPE",
                categoriesDetail: "THEMATICAREA_CATEGORIES_DETAIL"
            },
            menu: {
                showSearch: "MENU_SEARCH_SHOW",
                hideSearch: "MENU_SEARCH_HIDDEN",
                epg: "MENU_CHANNEL_EPG",
                channel: "MENU_CHANNEL_VOD",
                myTvSection: "MENU_CHANNEL_MYTV_SEC"
            },
            welcome: {
                page: "WELCOME_PAGE"
            },
            subscribed: {
                toggle: "SUBSCRIBED_TOGGLE"
            },
            recordings: {
                add: "ADD_RECORDING",
                cancel: "CANCEL_RECORDING",
                delete: "DELETE_RECORDING",
                protect: "PROTECT_RECORDING"
            }
        },
        throttleTime: 500,
        throttledEvents: ["player::resume", "player::buffering", "player::stop"],
        uniapi: {
            batchSize: 100,
            batchInterval: 86400,
            eventGroups: {
                browsing: "LogGoBrowsing",
                playbackLive: "Go_Live_Playback",
                playbackVOD: "Go_VoD_Playback",
                perfPlayVod: "PERFPLAYVOD",
                perfPlayLive: "PERFPLAYLIVE"
            },
            defaultEventGroup: "browsing"
        },
        youbora: {
            qualityType: {
                1: "FULLHD",
                2: "HD",
                3: "SD",
                4: "LD"
            },
            environmentValue: {
                Production: "prod",
                Preproduction: "preprod",
                Staging: "staging",
                MinilabDev: "minilabdev",
                MinilabProd: "minilabprod",
                Certification: "cert",
                Dev: "dev"
            },
            deviceTypeName: "PC",
            accountCode: {
                Production: "movistargo",
                Default: "movistargodev"
            }
        },
        sessionIdPrecision: 1e10
    }).directive("goMdlAnalyticsDrctAnalytic", Ba).factory("goMdlAnalyticsSvcContentWise", Fa).factory("goMdlAnalyticsSvcManager", Ga).factory("goMdlAnalyticsSvcParameter", Wa).factory("goMdlAnalyticsSvcPerformance", qa).factory("goMdlAnalyticsSvcPlayerStats", Ya).factory("goMdlAnalyticsSvcPlayer", za).factory("goMdlAnalyticsSvcUniapi", Xa).factory("goMdlAnalyticsSvcYoubora", Ja).name
      , er = (n(579),
    n(124))
      , tr = n.n(er);
    function nr(e) {
        e.resolveWhen("/recover-password/:email?/:hash?", {
            template: tr.a,
            page: {
                title: "auth.recoverPasswordTitle"
            }
        }).resolveWhen("/rememberPassword", {
            template: "<go-mdl-authentication-cmp-remember-password></go-mdl-authentication-cmp-remember-password>"
        }).resolveWhen("/rememberPasswordSuccess", {
            template: "<go-mdl-authentication-cmp-remember-password-success></go-mdl-authentication-cmp-remember-password-success>"
        }).resolveWhen("/newPassword", {
            template: "<go-mdl-authentication-cmp-new-password></go-mdl-authentication-cmp-new-password>"
        }).resolveWhen("/newPasswordSuccess", {
            template: "<go-mdl-authentication-cmp-new-password-success></go-mdl-authentication-cmp-new-password-success>"
        }).resolveWhen("/newPasswordError/:errorType?", {
            template: "<go-mdl-authentication-cmp-new-password-error></go-mdl-authentication-cmp-new-password-error>"
        }).resolveWhen("/auth/tasa", {
            template: "<go-mdl-authentication-cmp-tasa></go-mdl-authentication-cmp-tasa>",
            page: {
                title: "auth.tasa.pageTitle"
            }
        }).resolveWhen("/auth/oidc", {
            template: "<go-mdl-authentication-cmp-oidc></go-mdl-authentication-cmp-oidc>"
        }).resolveWhen("/auth/logout-oidc", {
            template: "<go-mdl-authentication-cmp-logout-oidc></go-mdl-authentication-cmp-logout-oidc>"
        }).resolveWhen("/auth/sso", {
            template: "<go-mdl-authentication-cmp-sso></go-mdl-authentication-cmp-sso>"
        })
    }
    nr.$inject = ["$routeProvider"];
    var ar = n(336)
      , rr = n.n(ar)
      , or = (n(577),
    {
        template: rr.a,
        controller: ir
    });
    function ir(e, t, n, a) {
        var r, o = this, i = e("translate");
        o.login = function() {
            a.login()
        }
        ,
        o.logout = function() {
            a.logout()
        }
        ,
        o.isLoggedIn = function() {
            return t.isLoggedIn
        }
        ,
        o.$onInit = function() {
            r = t.$watch("isLoggedIn", function() {
                var e = t.profile || {};
                o.title = i("auth.hello", {
                    userName: e.email || ""
                })
            })
        }
        ,
        o.$onDestroy = function() {
            r()
        }
    }
    ir.$inject = ["$filter", "goSvcUserStatus", "goMdlPopUpsSvcManager", "goSvcAuthentication"];
    var cr = n(335)
      , sr = n.n(cr);
    ur.$inject = ["$scope", "$location", "$routeParams", "$q", "goSvcRegistration", "goMdlAuthenticationSvcRememberPassword", "goMdlPopUpsSvcManager", "goSvcTime", "goCnstEnumerated", "uaConstants"];
    var lr = {
        template: sr.a,
        controller: ur
    };
    function ur(e, t, n, a, r, o, i, c, s, l) {
        "ngInject";
        var u, d = this;
        function g() {
            d.isPasswordMissmatch = d.newPass && d.newPassRepeat && d.newPass !== d.newPassRepeat
        }
        d.redirectToHome = function() {
            o.redirectToHome()
        }
        ,
        d.changePassword = function() {
            var e = n.email
              , a = n.hash;
            d.isLoading = !0,
            r.changePasswordHash({
                userName: e,
                hash: a,
                newPassword: d.newPass
            }).then(function() {
                return t.url("newPasswordSuccess")
            }).catch(function() {
                return t.url("newPasswordError")
            }).finally(function() {
                d.isLoading = !1
            })
        }
        ,
        d.checkIsValidPassword = function() {
            g(),
            u.finally(function() {
                d.isValid = new RegExp(d.validationRegex).test(d.newPass),
                d.isInvalidPassword = d.newPass && !d.isValid
            })
        }
        ,
        d.checkPasswordsAreEqual = function() {
            g()
        }
        ,
        d.openInfoPopup = function(e) {
            e.preventDefault(),
            i.openInfo({
                title: "auth.newPassword.passwordFormat",
                message: "auth.newPassword.passwordAdvice",
                bodyClass: "go-auth-page--align-text-left"
            })
        }
        ,
        d.$onInit = function() {
            var r;
            (r = parseInt(n.expirationtime, 10),
            r ? c.getUniapiTime().then(function(e) {
                if (r < e)
                    return o.setEmail(n.email),
                    t.url("newPasswordError?errorType=expirationMailError"),
                    a(function() {
                        return null
                    })
            }).catch(function() {
                return t.url("newPasswordError"),
                a(function() {
                    return null
                })
            }) : a.resolve()).then(function() {
                e.$emit(s.goEvents.NAVIGABLE_HEADER, !1),
                u = o.getRegistrationField(l.RegistrationRequiredFieldsType.Password).then(function(e) {
                    var t = e.validationRegex
                      , n = e.isBlockingMessage;
                    d.validationRegex = t,
                    d.validationMessage = n || "settings.password.regexError"
                })
            })
        }
    }
    var dr = n(334)
      , gr = n.n(dr);
    mr.$inject = ["$scope", "$location", "$routeParams", "goCnstEnumerated", "goMdlAuthenticationSvcRememberPassword"];
    var pr = {
        template: gr.a,
        controller: mr
    };
    function mr(e, t, n, a, r) {
        "ngInject";
        var o = this;
        o.redirectToHome = function() {
            r.redirectToHome()
        }
        ,
        o.redirectToRememberPassword = function() {
            var n = o.email;
            e.$emit(a.goEvents.NAVIGABLE_HEADER, !0),
            n ? t.url("rememberPassword?email=".concat(n)) : t.url("rememberPassword")
        }
        ,
        o.$onInit = function() {
            o.email = r.getEmail(),
            o.errorType = n.errorType,
            o.isSendingMailError = /sendingMailError/.test(o.errorType)
        }
    }
    var fr = n(333)
      , hr = n.n(fr);
    yr.$inject = ["goMdlAuthenticationSvcRememberPassword"];
    var vr = {
        template: hr.a,
        controller: yr
    };
    function yr(e) {
        "ngInject";
        this.redirectToHome = function() {
            e.redirectToHome()
        }
    }
    var Sr = n(332)
      , br = n.n(Sr);
    Tr.$inject = ["$location", "$routeParams", "goSvcUtils", "goMdlAuthenticationSvcRememberPassword"];
    var Er = {
        template: br.a,
        controller: Tr
    };
    function Tr(e, t, n, a) {
        "ngInject";
        var r = this;
        r.sendRecoverEmail = function() {
            r.isLoading = !0,
            a.sendRecoverEmail(r.email).then(function() {
                return e.url("rememberPasswordSuccess")
            }).catch(function() {
                return e.url("newPasswordError?errorType=sendingMailError")
            })
        }
        ,
        r.redirectToHome = function() {
            a.redirectToHome()
        }
        ,
        r.checkIsValidEmail = function() {
            r.isValid = new RegExp(r.validationRegex).test(r.email),
            r.isInvalidEmail = r.email && !r.isValid
        }
        ,
        r.$onInit = function() {
            a.getEmailValidationRegexp().then(function(e) {
                r.email = t.email || "",
                r.validationRegex = e,
                r.checkIsValidEmail()
            })
        }
    }
    var Cr = n(331)
      , Pr = n.n(Cr);
    Ar.$inject = ["$location", "goSvcUtils", "goMdlAuthenticationSvcRememberPassword"];
    var Ir = {
        template: Pr.a,
        controller: Ar
    };
    function Ar(e, t, n) {
        "ngInject";
        var a = this;
        a.redirectToHome = function() {
            n.redirectToHome()
        }
        ,
        a.$onInit = function() {
            a.email = n.getEmail(),
            a.rememberPasswordUrl = "./rememberPassword"
        }
    }
    Nr.$inject = ["goMdlAuthenticationSvcTasa", "goMdlAuthenticationSvcSSO", "goSvcAuthentication", "goSvcUserStatus"];
    var Mr = {
        controller: Nr
    };
    function Nr(e, t, n, a) {
        "ngInject";
        var r;
        function o() {
            a.isLoggedIn ? e.manageValidLogin() : e.manageInvalidLogin()
        }
        this.$onInit = function() {
            r = a.$watchCollection("[isAuth, isLoggedIn]", function() {
                a.isAuth && t.check(n.isTasaAuthEnabled).then(o)
            })
        }
        ,
        this.$onDestroy = function() {
            r()
        }
    }
    Lr.$inject = ["goMdlAuthenticationSvcOidc", "goMdlAuthenticationSvcSSO", "goSvcAuthentication", "goSvcUserStatus"];
    var wr = {
        controller: Lr
    };
    function Lr(e, t, n, a) {
        "ngInject";
        var r;
        function o() {
            a.isLoggedIn ? e.manageValidLogin() : e.manageInvalidLogin()
        }
        this.$onInit = function() {
            r = a.$watchCollection("[isAuth, isLoggedIn]", function() {
                a.isAuth && t.check(n.isOidcAuthEnabled).then(o)
            })
        }
        ,
        this.$onDestroy = function() {
            r()
        }
    }
    Rr.$inject = ["goMdlAuthenticationSvcOidc", "goMdlAuthenticationSvcSSO", "goSvcAuthentication", "goSvcUserStatus"];
    var $r = {
        controller: Rr
    };
    function Rr(e, t, n, a) {
        "ngInject";
        var r;
        function o() {
            e.manageValidLogout()
        }
        this.$onInit = function() {
            r = a.$watchCollection("[isAuth, isLoggedIn]", function() {
                a.isAuth && t.check(n.isOidcAuthEnabled).then(o)
            })
        }
        ,
        this.$onDestroy = function() {
            r()
        }
    }
    _r.$inject = ["goMdlAuthenticationSvcSSO", "goSvcAuthentication", "goSvcUserStatus"];
    var Dr = {
        controller: _r
    };
    function _r(e, t, n) {
        "ngInject";
        var a;
        function r() {
            n.isLoggedIn ? e.manageValidLogin() : e.manageInvalidLogin()
        }
        this.$onInit = function() {
            a = n.$watchCollection("[isAuth, isLoggedIn]", function() {
                n.isAuth && e.check(t.isSSOAuthEnabled).then(r)
            })
        }
        ,
        this.$onDestroy = function() {
            a()
        }
    }
    function Or(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d = {
            login: "login",
            recover: "recover"
        }
          , g = {
            email: "email",
            password: "password"
        }
          , p = {
            login: "hasLoginError",
            recover: "hasRecoverError"
        }
          , m = {
            login: "auth.error.logIn",
            inactive: "auth.error.inactive",
            recover: "auth.error.recoverPassword",
            email: {
                required: "auth.error.email.required",
                invalid: "auth.error.email.invalid"
            },
            password: {
                required: "auth.error.password.required"
            }
        };
        function h(e) {
            t[e] = !t[e]
        }
        function v(e, n, a) {
            t[n] = e,
            t.errorMessage = e ? a : "",
            t.$$phase || t.$root.$$phase || t.$apply()
        }
        function y(e) {
            v(!1, e)
        }
        function S(e, t) {
            v(!0, e, t)
        }
        function b(e) {
            var n = e === d.login
              , a = e + "Form"
              , r = t[a].email
              , o = t[a].password
              , i = ""
              , c = "";
            r.$error.required ? (i = m.email.required,
            c = g.email) : r.$error.email ? (i = m.email.invalid,
            c = g.email) : n && o.$error.required && (i = m.password.required,
            c = g.password),
            i && (t.focusInput = c,
            S(e === d.login ? p.login : p.recover, i))
        }
        function E(e) {
            t.isLoading = e
        }
        t.login = function() {
            y(p.login),
            t.loginForm.$valid ? (E(!0),
            u.sendEvent({
                event: "login",
                status: "init"
            }),
            a.login(t.credentials).then(function() {
                n.setLocalItem("remember", r.remember),
                t.isFormOpened = !1
            }).then(function() {
                u.sendEvent({
                    event: "login",
                    status: "success",
                    userId: Mt.a.MD5(r.profile.id.toString()).toString()
                }),
                i.checkRedirectionInPendingCard()
            }).catch(function(e) {
                u.sendEvent({
                    event: "login",
                    status: "error"
                }),
                function(e) {
                    var n = l.StatusCode
                      , a = e && e.error;
                    a && a.message ? S(p.login, a.message) : a && a.code === n.UserNotYetActivated ? S(p.login, m.inactive) : S(p.login, m.login),
                    t.credentials.userPass = ""
                }(e)
            }).finally(E.bind(null, !1))) : b(d.login)
        }
        ,
        t.recoverPassword = function() {
            t.isRecoverFinished = !1,
            y(p.recover),
            t.recoverForm.$valid ? (o.trackEvent("login::remember"),
            a.recoverPasswordLink(t.credentials.userName).then(function() {
                t.isRecoverFinished = !0
            }).catch(function() {
                S(p.recover, m.recover)
            })) : b(d.recover)
        }
        ,
        t.toggleForm = function() {
            h("isFormOpened")
        }
        ,
        t.handleClickOnRecover = function() {
            i.isMeuVivoAuthEnabled().then(function(e) {
                e ? c.recoverPasswordExternal() : t.toggleAuthAndRecoverForms()
            })
        }
        ,
        t.toggleAuthAndRecoverForms = function(e) {
            (f()(e) || e) && (h("isAuthFormOpened"),
            h("isRecoverFormOpened")),
            t.hasLoginError = !1,
            t.hasRecoverError = !1,
            t.isRecoverFinished = !1,
            t.errorMessage = ""
        }
        ,
        t.resetForm = function(e) {
            t.toggleAuthAndRecoverForms(e),
            t.isAuthFormOpened = !0,
            t.isRecoverFormOpened = !1,
            t.credentials.userName = "",
            t.credentials.userPass = "",
            t.credentials.rememberMe = !1
        }
        ,
        t.checkIsValidEmail = function() {
            s.getEmailValidationRegexp().then(function(e) {
                new RegExp(e).test(t.recoverForm.email.$modelValue) ? y(p.recover) : S(p.recover, "auth.rememberPassword.invalidEmail")
            })
        }
        ,
        t.$watch("isFormOpened", function(e) {
            !e && t.resetForm(!1)
        }),
        t.$watch("credentials.rememberMe", function(e) {
            r.remember = e
        }),
        t.$on("$destroy", function() {
            Ka()(void 0) && (void 0)()
        }),
        t.userStatus = r,
        t.credentials = {
            userName: "",
            userPass: "",
            rememberMe: !1
        },
        t.isFormOpened = !1,
        t.isAuthFormOpened = !0,
        t.isRecoverFormOpened = !1,
        t.isSettingsOpened = !1,
        t.hasLoginError = !1,
        t.hasRecoverError = !1,
        t.isRecoverFinished = !1,
        t.errorMessage = "",
        t.focusInput = "",
        t.link = void 0
    }
    Or.$inject = ["$q", "$scope", "goSvcWebStorage", "goSvcUniapiAuthentication", "goSvcUserStatus", "goMdlAnalyticsSvcManager", "goSvcAuthentication", "goSvcRegistration", "goMdlAuthenticationSvcRememberPassword", "uaConstants", "goSvcGoogleTagManager"];
    var Ur = n(330)
      , kr = n.n(Ur);
    n(575);
    function xr(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s = "";
        return {
            getEmail: function() {
                return s
            },
            setEmail: l,
            sendRecoverEmail: function(e) {
                return l(e),
                n.trackEvent("login::remember"),
                t.recoverPasswordLink(s)
            },
            getRegistrationField: function(e) {
                return a.getRegistrationFields().then(function(t) {
                    return t.find(function(t) {
                        return e === t.field
                    })
                })
            },
            redirectToHome: function() {
                e.$emit(i.goEvents.NAVIGABLE_HEADER, !0),
                o.redirectToHome(),
                r.showIfEnabled()
            },
            getEmailValidationRegexp: function() {
                var e = '^(([^<>()\\[\\]\\.,;:\\s@"]+(\\.[^<>()\\[\\]\\.,;:\\s@"]+)*)|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$';
                return this.getRegistrationField(c.RegistrationRequiredFieldsType.Email).then(function(t) {
                    var n = t.validationRegex;
                    return n || e
                }).catch(function() {
                    return e
                })
            }
        };
        function l(e) {
            s = e
        }
    }
    function jr(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s = r.externalAuth.tasa.params
          , l = s.status
          , u = s.token
          , d = s.relayState
          , g = s.expiration
          , p = o.ERROR
          , m = o.TV_SERVICE_NOT_AVAILABLE
          , f = n.getLogger("SERVICE", "goMdlAuthenticationSvcTasa");
        return {
            manageValidLogin: function() {
                e = c.getDecodedState(d).expiration > i.getTime(),
                c.verifyState(d) && e ? (f.debug("RelayState is valid. Redirect user to callback"),
                v(c.getDecodedState(d).url)) : (f.debug("RelayState is not valid. Redirect user to home."),
                t.logout().then(h));
                var e
            },
            manageInvalidLogin: function() {
                var e = parseInt(a.getSearchParam(l)) || p;
                f.debug("An error has occurred when login using TASA."),
                e === m ? c.manageTVServiceRegistration(v) : h()
            }
        };
        function h() {
            c.showErrorPopup().finally(function() {
                return v()
            })
        }
        function v(t) {
            t ? e.search(u, void 0).search(d, void 0).search(g, void 0).search(l, void 0).url(t) : a.redirectToHome()
        }
    }
    function Br(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        "ngInject";
        var p = g.externalAuth.oidc.params
          , m = p.status
          , f = p.token
          , h = p.payloadDevice
          , v = p.expiration
          , y = o.ERROR
          , S = o.TV_SERVICE_NOT_AVAILABLE
          , b = o.REGISTRATION
          , E = a.getLogger("SERVICE", "goMdlAuthenticationSvcOidc")
          , T = "/welcome"
          , C = g.panic.path;
        return {
            manageValidLogin: function() {
                if (A()) {
                    E.debug("RelayState is valid. Redirect user to callback");
                    var n = g.externalAuth.oidc
                      , a = n.name
                      , r = n.nonce
                      , o = s.getLocalItem("".concat(a, ".").concat(r));
                    l.trackEvent("login::loginOIDC", {
                        NONCE: o
                    }),
                    u.isParentalPinFirstUsed().then(function(t) {
                        var n = c.getDecodedState(h).url;
                        I(t && -1 === e.path().indexOf(C) ? T : n)
                    })
                } else
                    E.debug("RelayState is not valid. Redirect user to home."),
                    t.logout().then(P)
            },
            manageInvalidLogin: function() {
                var e = parseInt(r.getSearchParam(m)) || y;
                if (E.debug("An error has occurred when login using OIDC."),
                e === S)
                    c.manageTVServiceRegistration(I);
                else if (e === b) {
                    var n = c.getDecodedState(h)
                      , a = n ? n.url : "./";
                    t.login(a)
                } else
                    P()
            },
            manageValidLogout: function() {
                A() ? (E.debug("RelayState is valid. Logout user and redirect to callback"),
                d.isLoggedIn && n.logout(),
                I(c.getDecodedState(h).url)) : (E.debug("RelayState is not valid. Redirect user to home without logout."),
                P())
            }
        };
        function P() {
            c.showErrorPopup().finally(function() {
                return I()
            })
        }
        function I(t) {
            t ? e.search(f, void 0).search(h, void 0).search(v, void 0).search(m, void 0).url(t) : r.redirectToHome()
        }
        function A() {
            var e = c.getDecodedState(h);
            if (!e)
                return !1;
            var t = e.expiration > i.getTime();
            return c.verifyState(h) && t
        }
    }
    function Fr(e, t, n, a, r, o, i, c, s, l, u, d, g, p) {
        "ngInject";
        var m, f = c.getLogger("SERVICE", "goMdlAuthenticationSvcSSO"), h = d.externalAuth, v = h.sso, y = h.tasa, S = h.oidc, b = h.common, E = v.params, T = E.status, C = E.token, P = E.payloadDevice, I = E.expiration, A = p.go.uniapi.login.cookie, M = p.go.uniapi.login.trustedDevice, N = g.ERROR, w = g.USER_NOT_ACTIVE, $ = g.TV_SERVICE_NOT_AVAILABLE, R = g.USER_TRYING_TO_ROAMING;
        return {
            setup: D,
            getSecret: _,
            check: function(t) {
                return t().then(function(t) {
                    if (!t)
                        return f.debug("External Auth is disabled, redirecting to home."),
                        a.redirectToHome(),
                        e(function() {
                            return null
                        });
                    D()
                }).catch(function(t) {
                    return f.error("External auth fatal error handled:", t),
                    i.logout().then(k),
                    e(function() {
                        return null
                    })
                })
            },
            getDecodedState: O,
            verifyState: U,
            manageTVServiceRegistration: j,
            createExpirationCookie: function() {
                var e = [y, S, v].find(function(e) {
                    var n = e.params;
                    return t.path() === n.path
                })
                  , o = a.getSearchParam(b.token);
                if (e && o) {
                    var i = a.getSearchParam(e.params.expiration);
                    if (!i)
                        return;
                    var c = parseInt(i) - r.getTime();
                    n.expire(M.key),
                    n.createExpirationCookie(A.key, o, c)
                }
            },
            manageValidLogin: function() {
                if (function() {
                    var e = O(P);
                    if (!e)
                        return !1;
                    var t = e.expiration > r.getTime();
                    return U(P) && t
                }()) {
                    f.debug("PayloadDevice is valid. Redirect user to callback");
                    var e = O(P);
                    B(e ? e.url : "")
                } else
                    f.debug("PayloadDevice is not valid. Redirect user to home."),
                    i.logout().then(k)
            },
            manageInvalidLogin: function() {
                var e = parseInt(a.getSearchParam(T)) || N;
                f.debug("An error has occurred when login using SSO."),
                e === $ ? j(B) : k()
            },
            showErrorPopup: x
        };
        function D() {
            m = o.getLocalItem(b.localStorageKey) || "",
            o.removeLocalItem(b.localStorageKey)
        }
        function _() {
            return m
        }
        function O(e) {
            var t = a.getSearchParam(e);
            if (t)
                return u.decode(t)
        }
        function U(e) {
            var t = a.getSearchParam(e);
            return L()(t) && u.verify(t, _())
        }
        function k() {
            x().finally(function() {
                return B()
            })
        }
        function x() {
            return l.openError({
                title: "auth.tasa.error.title",
                message: function() {
                    var e, t = parseInt(a.getSearchParam(T) || -1);
                    e = t === w ? "auth.tasa.error.userNotActive" : t === R ? "auth.tasa.error.userTryingToRoamingSSO" : "auth.tasa.error.generic";
                    return e
                }(),
                accept: "common.accept"
            }).result
        }
        function j(e) {
            s.getExternalAuthRegistrationUrl().then(function(t) {
                var n, r;
                t ? (n = {
                    title: "auth.tasa.tvServiceNotAvailable.title",
                    message: "auth.tasa.tvServiceNotAvailable.message",
                    accept: "auth.tasa.tvServiceNotAvailable.acceptButton"
                },
                r = a.redirect) : (n = {
                    title: "auth.tasa.tvServiceNotAvailable.title",
                    message: "auth.tasa.tvServiceNotAvailable.error",
                    accept: "common.continue"
                },
                r = e),
                l.openInfo(n).result.then(function() {
                    return r(t)
                }).catch(function() {
                    return e()
                })
            })
        }
        function B(e) {
            e ? t.search(C, void 0).search(P, void 0).search(I, void 0).search(T, void 0).url(e) : a.redirectToHome()
        }
    }
    xr.$inject = ["$rootScope", "goSvcUniapiAuthentication", "goMdlAnalyticsSvcManager", "goSvcRegistration", "goSvcPanic", "goSvcUtils", "goCnstEnumerated", "uaConstants"],
    jr.$inject = ["$location", "goSvcAuthentication", "goSvcLogger", "goSvcUtils", "goCnstEnumerated", "goMdlAuthenticationCnstStatusCodes", "goSvcTime", "goMdlAuthenticationSvcSSO"],
    Br.$inject = ["$location", "goSvcAuthentication", "goSvcUniapiAuthentication", "goSvcLogger", "goSvcUtils", "goMdlAuthenticationCnstStatusCodes", "goSvcTime", "goMdlAuthenticationSvcSSO", "goSvcWebStorage", "goMdlAnalyticsSvcManager", "goSvcUniapiPin", "goSvcUserStatus", "goCnstEnumerated"],
    Fr.$inject = ["$q", "$location", "goSvcCookies", "goSvcUtils", "goSvcTime", "goSvcWebStorage", "goSvcAuthentication", "goSvcLogger", "goSvcUniapiParameter", "goMdlPopUpsSvcManager", "goSvcJsonWebToken", "goCnstEnumerated", "goMdlAuthenticationCnstStatusCodes", "goCnstConfig"];
    var Vr = r.a.module("goMdlAuthentication", []).component("goMdlAuthenticationCmpLoginButton", or).component("goMdlAuthenticationCmpTasa", Mr).component("goMdlAuthenticationCmpOidc", wr).component("goMdlAuthenticationCmpLogoutOidc", $r).component("goMdlAuthenticationCmpSso", Dr).component("goMdlAuthenticationCmpRememberPassword", Er).component("goMdlAuthenticationCmpNewPassword", lr).component("goMdlAuthenticationCmpRememberPasswordSuccess", Ir).component("goMdlAuthenticationCmpNewPasswordError", pr).component("goMdlAuthenticationCmpNewPasswordSuccess", vr).constant("goMdlAuthenticationCnstStatusCodes", {
        OK: 0,
        ERROR: 1,
        TV_SERVICE_NOT_AVAILABLE: 2,
        USER_NOT_ACTIVE: 3,
        USER_TRYING_TO_ROAMING: 4,
        REGISTRATION: 6
    }).controller("goMdlAuthenticationCtrlAuthentication", Or).directive("goMdlAuthenticationDrctLoginForm", function() {
        return {
            replace: !0,
            link: function(e, t) {
                var n = t.find("input[type=text]")
                  , a = t.find("input[type=password]");
                function r(e, t) {
                    t && e.focus()
                }
                e.$watch("isFormOpened", function(e) {
                    r(n, e)
                }),
                e.$watchCollection("[isAuthFormOpened, isRecoverFormOpened, hasLoginError, hasRecoverError]", function(e) {
                    r(n, e)
                }),
                e.$watch("focusInput", function(t) {
                    r("email" === t ? n : a, !!t),
                    e.focusInput = ""
                }),
                e.$watch("visible", function(t) {
                    t ? n.focus() : e.resetForm(!0)
                })
            },
            template: kr.a,
            controller: "goMdlAuthenticationCtrlAuthentication"
        }
    }).factory("goMdlAuthenticationSvcTasa", jr).factory("goMdlAuthenticationSvcOidc", Br).factory("goMdlAuthenticationSvcSSO", Fr).factory("goMdlAuthenticationSvcRememberPassword", xr).config(nr).name;
    function Hr(e, t) {
        var n, a, r = t("go:url:content:cache");
        return a = e.$on("$locationChangeSuccess", function(e, t, a) {
            n = a + t
        }),
        e.$on("$destroy", function() {
            a && a()
        }),
        {
            put: function(e, t) {
                r.put(e || n, t)
            },
            get: function(e) {
                return r.get(e || n)
            },
            remove: function(e) {
                r.remove(e || n)
            }
        }
    }
    function Gr(e, t, n, a) {
        return a.isActive() ? n("goMdlCachesSvcGetMedias", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxLength: 1048576,
            maxAge: 9e5
        }, t) : e.get("uaecMemoryCache")
    }
    function Wr(e, t, n, a) {
        return a.isActive() ? n("goMdlCachesSvcGetMovie", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxLength: 1048576,
            maxAge: 3e5
        }, t) : e.get("uaecMemoryCache")
    }
    function qr(e, t, n, a) {
        return a.isActive() ? t("goMdlCachesSvcGetUser", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxAge: 9e5,
            maxLength: 1048576
        }, n) : e.get("uaecMemoryCache")
    }
    function Yr(e, t, n, a) {
        return a.isActive() ? n("goMdlCachesSvcGetUserTags", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxLength: 1048576,
            maxAge: 9e5
        }, t) : e.get("uaecMemoryCache")
    }
    function zr(e, t, n, a) {
        return a.isActive() ? t("goMdlCachesSvcGetUserServices", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxAge: 9e5,
            maxLength: 1048576
        }, n) : e.get("uaecMemoryCache")
    }
    function Qr(e, t, n, a) {
        return a.isActive() ? n("goMdlCachesSvcNavigation", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxLength: 1048576,
            maxAge: 108e5
        }, t) : e.get("uaecMemoryCache")
    }
    function Kr(e, t, n, a) {
        return a.isActive() ? t("goMdlCachesSvcRecording", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            capacity: 20,
            maxAge: 3e5
        }, n) : e.get("uaecMemoryCache")
    }
    function Xr(e, t, n, a, r, o) {
        var i, c, s = o.getLogger("SERVICE", "goMdlCachesSvcRoute");
        return r.isActive() ? (i = n("goMdlCachesSvcRoute", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxLength: 1048576,
            maxAge: 9e5
        }, a),
        c = t.$on("$locationChangeSuccess", function() {
            s.debug("Cache flushed."),
            i.removeAll()
        }),
        t.$on("$destroy", function() {
            Ka()(c) && c()
        }),
        i) : e.get("uaecMemoryCache")
    }
    function Jr(e, t, n, a) {
        return a.isActive() ? t("goMdlCachesSvcStatic", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature", "token"],
            capacity: 100,
            maxAge: 108e5
        }, n) : e.get("uaecMemoryCache")
    }
    function Zr(e, t, n, a) {
        return a.isActive() ? t("uaeucUserCache", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            maxAge: 9e5,
            maxLength: 1048576
        }, n) : e.get("uaecMemoryCache")
    }
    function eo(e, t, n, a) {
        return a.isActive() ? n("goMdlCachesSvcGetKeyValues", {
            removableParams: ["oauth_nonce", "oauth_timestamp", "oauth_signature"],
            capacity: 100,
            maxAge: 108e5
        }, t) : e.get("uaecMemoryCache")
    }
    Hr.$inject = ["$rootScope", "$cacheFactory"],
    Gr.$inject = ["$injector", "huCacheSerializableFactory", "huCacherpFactory", "goSvcWebStorage"],
    Wr.$inject = ["$injector", "huCacheSerializableFactory", "huCacherpFactory", "goSvcWebStorage"],
    qr.$inject = ["$injector", "huCacherpFactory", "huCacheSerializableFactory", "goSvcWebStorage"],
    Yr.$inject = ["$injector", "huCacheSerializableFactory", "huCacherpFactory", "goSvcWebStorage"],
    zr.$inject = ["$injector", "huCacherpFactory", "huCacheSerializableFactory", "goSvcWebStorage"],
    Qr.$inject = ["$injector", "huCacheSerializableFactory", "huCacherpFactory", "goSvcWebStorage"],
    Kr.$inject = ["$injector", "huCacherpFactory", "huCacheSerializableFactory", "goSvcWebStorage"],
    Xr.$inject = ["$injector", "$rootScope", "huCacherpFactory", "huCacheSerializableFactory", "goSvcWebStorage", "goSvcLogger"],
    Jr.$inject = ["$injector", "huCacherpFactory", "huCacheSerializableFactory", "goSvcWebStorage"],
    Zr.$inject = ["$injector", "huCacherpFactory", "huCacheSerializableFactory", "goSvcWebStorage"],
    eo.$inject = ["$injector", "huCacheSerializableFactory", "huCacherpFactory", "goSvcWebStorage"];
    var to = r.a.module("goMdlCaches", []).factory("goMdlCachesSvcBackUrl", Hr).factory("goMdlCachesSvcGetMedias", Gr).factory("goMdlCachesSvcGetMovie", Wr).factory("goMdlCachesSvcGetUser", qr).factory("goMdlCachesSvcGetUserTags", Yr).factory("goMdlCachesSvcGetUserServices", zr).factory("goMdlCachesSvcNavigation", Qr).factory("goMdlCachesSvcRecording", Kr).factory("goMdlCachesSvcRoute", Xr).factory("goMdlCachesSvcStatic", Jr).factory("goMdlCachesSvcUser", Zr).factory("goMdlCachesSvcGetKeyValues", eo).name
      , no = n(329)
      , ao = {
        template: n.n(no).a,
        bindings: {
            channel: "<",
            eventName: "@"
        },
        controller: ro
    };
    function ro(e, t) {
        var n = this;
        n.extendWithAnalyticsInfo = function(e) {
            return e.forEach(function(e, t) {
                return Object.assign(e, {
                    analyticsData: {
                        data: {
                            CATCHUPCHANNELID: e.parentChannelId,
                            CATCHUPCHANNELNAME: e.parentChannelTitle,
                            GENREID: e.id,
                            GENRENAME: e.title,
                            GENREPOSITION: t
                        },
                        name: "home::catchupChannel"
                    }
                })
            }),
            e
        }
        ,
        n.limitChannelsShown = function(e) {
            return t.getHomeCarouselContents().then(function(t) {
                return e.slice(0, t)
            })
        }
        ,
        n.setIsError = function(e) {
            n.isError = e
        }
        ,
        n.loadChannels = function() {
            e.getChildren(n.channel.id).then(n.limitChannelsShown).then(function(e) {
                n.channels = n.extendWithAnalyticsInfo(e)
            }).catch(function() {
                return n.setIsError(!0)
            })
        }
        ,
        n.$onInit = function() {
            var e = n.channel && n.channel.id > 0;
            n.setIsError(!1),
            e && n.loadChannels()
        }
    }
    ro.$inject = ["goSvcLibrary", "goSvcUniapiParameter"];
    var oo = n(328)
      , io = n.n(oo);
    n(573);
    so.$inject = ["goMdlDetailsSvcSeries", "goCnstEnumerated", "$rootScope", "$element"];
    var co = {
        bindings: {
            cwUxr: "<",
            episodes: "<",
            eventName: "@"
        },
        template: io.a,
        controller: so
    };
    function so(e, t, n, a) {
        "ngInject";
        var r, o, i = this, c = t.goEvents.EPISODE_SELECTED;
        i.getSwiper = function() {
            return o || (o = a.find(".swiper-container")[0].swiper),
            o
        }
        ,
        i.setIsError = function(e) {
            i.isError = e
        }
        ,
        i.moveToEpisode = function(t) {
            e.getEpisodePosition(t).then(function(e) {
                i.getSwiper().slideReset(),
                i.getSwiper().slideTo(e)
            })
        }
        ,
        i.$onInit = function() {
            var e = i.episodes.find(function(e) {
                return e.isSelected
            });
            e && i.moveToEpisode({
                episodeId: e.id,
                seasonId: e.seasonId,
                seriesId: e.seriesId
            }),
            r = n.$on(c, function(e, t) {
                return i.moveToEpisode(t)
            })
        }
        ,
        i.$onDestroy = function() {
            r()
        }
    }
    var lo = n(327)
      , uo = n.n(lo)
      , go = (n(571),
    {
        template: uo.a
    })
      , po = (n(569),
    n(326))
      , mo = n.n(po);
    ho.$inject = ["$filter", "$window", "goSvcThirdParty"];
    var fo = {
        template: mo.a,
        bindings: {
            link: "@",
            title: "@",
            channel: "="
        },
        controller: ho
    };
    function ho(e, t, n) {
        "ngInject";
        var a = this
          , r = e("goFltrDetailsLink");
        a.open = function(e) {
            a.contentHasExternalUrl && n.openLinkInNewTab(e, a.link)
        }
        ,
        a.$onInit = function() {
            if (a.channel) {
                var e = n.getPcExternalUrl(a.channel.externalUrls);
                a.isTicketVisible = a.channel.isTvod,
                a.contentHasExternalUrl = !!e,
                a.link = !a.channel.isExtension && (e || r(a.channel)),
                a.title = a.channel.titleInMenu,
                a.analyticsData = a.channel.analyticsData
            } else
                a.isTicketVisible = null,
                a.link = null,
                a.title = null,
                a.analyticsData = null
        }
    }
    var vo = n(325)
      , yo = n.n(vo);
    n(567);
    bo.$inject = ["$rootScope", "$q", "goSvcUserStatus", "goSvcLiveChannels", "goSvcSchedules", "goSvcUniapiLive", "goMdlAnalyticsSvcContentWise", "uaConstants", "goMdlHomeCnstHome", "goCnstEnumerated"];
    var So = {
        bindings: {
            cwUxr: "<"
        },
        template: yo.a,
        controller: bo
    };
    function bo(e, t, n, a, r, o, i, c, s, l) {
        "ngInject";
        var u, d, g = this, p = s.liveAreaLimit, m = c.PlaybackType.PlaybackRight, f = l.goEvents.PURCHASE_SUCCESS;
        g.getSchedules = function(e) {
            return e[m].length > 0 ? r.getCurrentSchedules(e, m, p, g.cwUxr) : t.when([])
        }
        ,
        g.extendWithAnalyticsInfo = function(e) {
            return i.createUXR(g.cwUxr).then(function(t) {
                return e.forEach(function(e, n) {
                    return Object.assign(e, {
                        analyticsData: {
                            name: "home::liveDetail",
                            data: {
                                CHANNELID: e.liveChannelId,
                                CHANNELNAME: e.channelName,
                                PROGRAMID: e.productId,
                                PROGRAMNAME: e.programName,
                                PROGRAMPOSITION: n
                            },
                            contentWise: i.createObj(e.productId, e.trackId, t)
                        }
                    })
                }),
                e
            })
        }
        ,
        g.setIsError = function(e) {
            g.isError = e
        }
        ,
        g.getLiveContents = function() {
            g.setIsError(!1),
            a.getAllChannels().then(g.getSchedules).then(g.extendWithAnalyticsInfo).then(function(e) {
                g.schedules = e.slice(0, p)
            }).catch(function() {
                return g.setIsError(!0)
            })
        }
        ,
        g.$onInit = function() {
            g.setIsError(!1),
            u = n.$watchCollection("[isLoggedIn, isAuth]", function() {
                n.isAuth && o.isAvailableForUser().then(function(e) {
                    g.showArea = e,
                    e && g.getLiveContents()
                })
            }),
            d = e.$on(f, function() {
                o.isAvailableForUser().then(function(e) {
                    !g.showArea && e && (g.showArea = e,
                    g.getLiveContents())
                })
            })
        }
        ,
        g.$onDestroy = function() {
            u(),
            d()
        }
    }
    var Eo = n(324)
      , To = n.n(Eo);
    Po.$inject = ["goSvcLibrary", "goSvcUtils"];
    var Co = {
        controller: Po,
        template: To.a,
        bindings: {
            channel: "<",
            eventName: "@"
        }
    };
    function Po(e, t) {
        "ngInject";
        var n = this;
        n.addAnalyticsData = function(e) {
            return e.forEach(function(e, a) {
                e.analyticsData = {
                    name: "",
                    data: {
                        CONTENTID: e.id,
                        CONTENTNAME: e.name,
                        THEMATICAREAID: n.channel.id,
                        THEMATICNAME: n.channel.title,
                        CATALOGITEMPOSITION: a,
                        CONTENTPRODUCTTYPE: t.toProductTypeFromGoType(e.goType)
                    }
                }
            }),
            e
        }
        ,
        n.$onInit = function() {
            e.getPersonalExtensionContents(n.channel.id).then(function(e) {
                n.items = n.addAnalyticsData(e),
                n.showSlider = n.items.length > 0
            }).catch(function() {
                n.isError = !0
            })
        }
    }
    var Io = n(323)
      , Ao = n.n(Io)
      , Mo = (n(565),
    {
        template: Ao.a,
        controller: No
    });
    function No(e, t, n, a) {
        var r, o = a.promos.contents, i = a.subscriptionTypes, c = this;
        c.filterOnlySubscriptions = function(t) {
            return t.filter(e.isPresent(i, "catalogItemType")).slice(0, o)
        }
        ,
        c.extendWithAnalyticsInfo = function(e) {
            return e.forEach(function(e, t) {
                return Object.assign(e, {
                    analyticsData: {
                        name: "home::promo",
                        data: {
                            CATALOGITEMID: e.catalogItemId,
                            CATALOGITEMTYPE: e.catalogItemType,
                            CATALOGITEMPOSITION: t,
                            URL: e.url
                        }
                    }
                })
            }),
            e
        }
        ,
        c.setIsError = function(e) {
            c.isError = e
        }
        ,
        c.getEditorialContents = function() {
            t.getChannelEditorialContents().then(function(e) {
                c.promos = c.filterOnlySubscriptions(e),
                c.extendWithAnalyticsInfo(c.promos)
            }).catch(function() {
                return c.setIsError(!0)
            })
        }
        ,
        c.$onInit = function() {
            r = n.$watchCollection("[isAuth, isLoggedIn]", function() {
                n.isAuth && c.getEditorialContents()
            })
        }
        ,
        c.$onDestroy = function() {
            r()
        }
    }
    No.$inject = ["goSvcUtils", "goMdlHomeSvcEditorial", "goSvcUserStatus", "goMdlHomeCnstHome"];
    var wo = n(322)
      , Lo = n.n(wo);
    Ro.$inject = ["$q", "goMdlCarouselSvcRecommendations", "goSvcUserStatus", "goMdlAnalyticsSvcContentWise", "goSvcCommercialSegmentation", "goSvcUtils", "$element"];
    var $o = {
        template: Lo.a,
        controller: Ro,
        bindings: {
            productId: "<",
            genres: "<",
            cwUxr: "<",
            eventName: "@",
            onItems: "&?",
            onEmptyLoaded: "&?"
        }
    };
    function Ro(e, t, n, a, r, o, i) {
        "ngInject";
        var c, s, l = this;
        l.validateProduct = function() {
            return l.productId ? e.when(l.productId) : e.reject()
        }
        ,
        l.loadRecommendations = function() {
            return l.genre.hasOwnProperty("id") ? t.getRecommendations(l.genre.name, l.productId, l.cwUxr) : e.when([])
        }
        ,
        l.addAnalyticsInfo = function(e) {
            return a.createUXR(l.cwUxr).then(function(t) {
                return e.forEach(function(e, n) {
                    e.analyticsData = {
                        name: "detail::recommendation",
                        data: {
                            CONTENTID: e.id,
                            CONTENTPRODUCTTYPE: o.toProductTypeFromGoType(e.goType),
                            CONTENTPOSITION: n,
                            CONTENTNAME: e.name
                        },
                        contentWise: a.createObj(e.id, e.trackId, t)
                    }
                }),
                e
            })
        }
        ,
        l.addCommercialSegmentation = function(e) {
            return r.segmentData(e)
        }
        ,
        l.getSwiper = function() {
            return s || (s = i.find(".swiper-container")[0].swiper),
            s
        }
        ,
        l.loadData = function() {
            l.isLoading = !0,
            l.isError = !1,
            l.genre = (l.genres || [])[0] || {},
            l.validateProduct().then(function() {
                return l.loadRecommendations()
            }).then(function(e) {
                return l.addAnalyticsInfo(e)
            }).then(function(e) {
                return l.addCommercialSegmentation(e)
            }).then(function(e) {
                l.items = e,
                l.getSwiper().slideTo(0)
            }).catch(function() {
                l.isError = !0,
                l.items = []
            }).finally(function() {
                l.isLoading = !1,
                l.items.length || l.isError ? Ka()(l.onItems) && l.onItems() : Ka()(l.onEmptyLoaded) && l.onEmptyLoaded()
            })
        }
        ,
        l.$onInit = function() {
            c = n.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return l.loadData()
            })
        }
        ,
        l.$onDestroy = function() {
            c()
        }
    }
    var Do = n(321)
      , _o = n.n(Do);
    Uo.$inject = ["$location", "goMdlHomeSvcHome", "goSvcUserStatus", "goMdlAnalyticsSvcContentWise", "goSvcLiveChannels", "goSvcUtils", "goSvcUniapiParameter", "$q"];
    var Oo = {
        template: _o.a,
        bindings: {
            channel: "<",
            cwUxr: "<",
            eventName: "@"
        },
        controller: Uo
    };
    function Uo(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s, l = this;
        l.extendWithAnalyticsInfo = function(t, n) {
            return t.isCatchup && (t.analyticsData = {
                name: "catchupChannel::channelAccess",
                data: {
                    CATCHUPCHANNELID: t.id,
                    CATCHUPCHANNELNAME: t.title
                }
            }),
            a.createUXR(l.cwUxr, t.customUxrLayout || t.customUxrPage).then(function(r) {
                return n.forEach(function(n, i) {
                    var c = a.createObj(n.id, n.trackId, r);
                    n.analyticsData = {
                        name: "",
                        data: {
                            CONTENTID: n.id,
                            CONTENTNAME: n.name
                        },
                        contentWise: c
                    };
                    var s = "/" === e.path();
                    t.isCatchup ? (n.analyticsData.name = "catchupChannel::channelDetail",
                    Object.assign(n.analyticsData.data, {
                        CATCHUPCHANNELID: t.id,
                        CATCHUPCHANNELNAME: t.title,
                        CONTENTPOSITION: i,
                        CONTENTPRODUCTTYPE: o.toProductTypeFromGoType(n.goType)
                    })) : s ? (n.analyticsData.name = "home::thematicAreaContent",
                    Object.assign(n.analyticsData.data, {
                        THEMATICAREAID: t.id,
                        THEMATICNAME: t.title,
                        CATALOGITEMPOSITION: i,
                        CONTENTPRODUCTTYPE: o.toProductTypeFromGoType(n.goType)
                    })) : (n.analyticsData.name = "thematicArea::categoriesDetail",
                    Object.assign(n.analyticsData.data, {
                        THEMATICAREAID: t.id,
                        THEMATICNAME: t.title,
                        CATALOGITEMPOSITION: i,
                        CONTENTPRODUCTTYPE: o.toProductTypeFromGoType(n.goType)
                    }))
                }),
                n
            })
        }
        ,
        l.extendWithChannelLogos = function(e) {
            e.forEach(function(e) {
                e.isNetworkCATCHUP && r.getChannelByCallLetter(e.distributor).then(function(t) {
                    e.channelImage = t.logo
                }).catch(se.noop)
            })
        }
        ,
        l.checkContentsLength = function() {
            l.items.length || (l.showSlider = !1)
        }
        ,
        l.setIsError = function(e) {
            l.isError = e
        }
        ,
        l.loadContents = function(e, n) {
            return e < l.contentsCount ? t.getPagedItems(l.channel, l.cwUxr, e, n).then(function(e) {
                var t, n = e.data || e;
                e.count && (l.contentsCount = e.count),
                (t = l.items).push.apply(t, je()(n)),
                l.extendWithChannelLogos(n),
                l.extendWithAnalyticsInfo(l.channel, n),
                l.checkContentsLength()
            }).catch(function() {
                return l.setIsError(!0)
            }) : c.when()
        }
        ,
        l.extendRecommChannelItems = function() {
            var e = Array.from(l.channel.items);
            return l.extendWithChannelLogos(e),
            l.extendWithAnalyticsInfo(l.channel, e),
            e
        }
        ,
        l.$onInit = function() {
            i.getHomeCarouselContents().then(function(e) {
                l.contentsCount = e,
                l.maxSlides = e
            }),
            s = n.$watchCollection("[isAuth, isLoggedIn]", function() {
                var e = l.channel.id > 0 || l.channel.isExtension;
                n.isAuth && e && (l.items = l.channel.isExtension ? l.extendRecommChannelItems() : [],
                l.showSlider = !0)
            })
        }
        ,
        l.$onDestroy = function() {
            s()
        }
    }
    var ko = n(320)
      , xo = n.n(ko);
    Bo.$inject = ["$q", "goSvcUserStatus", "goSvcSubscription", "goSvcUniapiParameter"];
    var jo = {
        template: xo.a,
        controller: Bo,
        bindings: {
            subscriptions: "<",
            eventName: "@"
        }
    };
    function Bo(e, t, n, a) {
        "ngInject";
        var r = this;
        r.loadSubscriptions = function() {
            return e.all([n.getCompatibleIds(r.subscriptions), a.getTotalUpsellingSubs()]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                return n.splice(0, a)
            })
        }
        ,
        r.addAnalyticsInfo = function(e) {
            return e.forEach(function(e) {
                e.analyticsData = {
                    name: "detail::upselling",
                    data: {
                        CONTENTID: e.subscriptionId,
                        URL: e.url
                    }
                }
            }),
            e
        }
        ,
        r.loadData = function() {
            r.loadSubscriptions().then(function(e) {
                return r.addAnalyticsInfo(e)
            }).then(function(e) {
                r.items = e
            }).catch(function() {
                r.isError = !0
            })
        }
        ,
        r.$onInit = function() {
            t.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return r.loadData()
            })
        }
    }
    var Fo, Vo = n(56), Ho = n.n(Vo), Go = (Fo = {
        9999: {
            slidesPerView: 5,
            slidesPerGroup: 5
        }
    },
    _t()(Fo, Ho.a.televisionHdSize, {
        slidesPerView: 4,
        slidesPerGroup: 4
    }),
    _t()(Fo, Ho.a.televisionSize, {
        slidesPerView: 3,
        slidesPerGroup: 3
    }),
    _t()(Fo, Ho.a.phoneLandscapeSize, {
        slidesPerView: 2,
        slidesPerGroup: 2
    }),
    Fo), Wo = n(319), qo = n.n(Wo), Yo = (n(562),
    n(242));
    function zo(e, t, n) {
        "ngInject";
        return {
            restrict: "E",
            template: qo.a,
            scope: {
                contents: "=",
                loadNextSlides: "=?",
                maxSlides: "<?",
                spaceBetween: "<?",
                eventName: "@"
            },
            link: function(a, r) {
                var o = r.find(".swiper-container")[0]
                  , i = r.find(".go-swiper--hover")
                  , c = new Yo.a(o,{
                    navigation: {
                        nextEl: ".go-swiper--button__right",
                        prevEl: ".go-swiper--button__left"
                    },
                    spaceBetween: a.spaceBetween || 5,
                    breakpoints: t,
                    virtual: {
                        renderSlide: function(t) {
                            var n = a.$new();
                            n.content = t;
                            var r = e('\n                <go-mdl-placards-cmp-content class="swiper-slide"\n                    data-ng-class="{ \'swiper-slide__active\': content.isSelected }"\n                    data-content="::content">\n                </go-mdl-placards-cmp-content>\n                ')(n);
                            return n.$evalAsync(),
                            r
                        }
                    },
                    on: {
                        transitionStart: function() {
                            c.isEnd ? i.removeClass("go-swiper--hover__visible") : i.addClass("go-swiper--hover__visible")
                        },
                        transitionEnd: function() {
                            i.removeClass("go-swiper--hover__visible")
                        },
                        slideNextTransitionStart: function() {
                            var e = c.activeIndex
                              , t = c.params
                              , n = e / t.slidesPerView % 2;
                            a.eventName && l("right"),
                            n && s(a.contents.length, 2 * t.slidesPerView)
                        },
                        slidePrevTransitionStart: function() {
                            a.eventName && l("left")
                        }
                    }
                });
                function s(e, t) {
                    var n = a.loadNextSlides
                      , r = a.maxSlides;
                    if (e || (u(),
                    c.slideTo(0)),
                    r) {
                        var o = r - e;
                        o > 0 && (a.isloadingContents = !!a.contents.length,
                        n(e, o < t ? o : t).finally(function() {
                            a.isloadingContents = !1
                        }))
                    } else if (n)
                        throw new Error("Swiper directive must specify maxSlides binding if loadNextSlides is specified")
                }
                function l(e) {
                    n.trackEvent(a.eventName, {
                        SWIPEDIRECTION: e,
                        SWIPEPOSITION: Math.ceil(c.activeIndex / c.params.slidesPerView),
                        CONTENTIDS: a.contents.slice(c.activeIndex, c.activeIndex + c.params.slidesPerView).map(function(e) {
                            return e.id
                        }).join(",")
                    })
                }
                function u() {
                    c.virtual.slides = [],
                    c.virtual.cache = {},
                    c.virtual.update()
                }
                c.virtual = Object.assign({}, c.virtual, {
                    slides: []
                }),
                a.$watchCollection("contents", function() {
                    a.contents && (a.contents.length || !a.loadNextSlides ? (a.loadNextSlides ? a.contents.slice(c.virtual.slides.length).forEach(c.virtual.appendSlide) : (u(),
                    c.virtual.slides = a.contents),
                    c.virtual.update()) : s(0, 2 * c.params.slidesPerView))
                })
            }
        }
    }
    function Qo(e, t) {
        "ngInject";
        var n = {
            ca_deviceTypes: t.getCaDeviceTypes(),
            searchField: o.caTypes.RELATIONS.GENRE,
            fields: ["pid", "title", "duration", "channelId", "commercializationType", "images.cover", "images.videoFrame", "images.landscapeCover", "images.banner", "images.portraitArt"].join(","),
            ca_requiresPin: !1,
            includeRelations: [o.caTypes.RELATIONS.PRODUCT_DEPENDENCIES, o.caTypes.RELATIONS.GENRE, o.caTypes.RELATIONS.PROVIDER].join(",")
        };
        function a(t) {
            var n = {
                response: {
                    formatter: e.get("goModelCaRecommendation")
                },
                cache: e.get("goMdlCachesSvcNavigation")
            };
            return Object.assign(n, t)
        }
        return {
            recommendations: function(e, r) {
                return n.limit = r,
                t.isEmptyObject(e) ? o.caInterface.api.rest(o.caTypes.ROUTES.SEARCH, n, a()) : o.caInterface.api.restCW(o.caTypes.ROUTES.SEARCH, e.useCaseLayout, n, a(e.requestConfig))
            }
        }
    }
    function Ko(e, t, n, a, r, i, c, s, l, u) {
        "ngInject";
        var d = o.caTypes.CONTENT_TYPES;
        return {
            getRecommendations: function(o, g, p) {
                var m = t.decodeParamId("lid")
                  , f = /serie/.test(e.path())
                  , h = {
                    term: o,
                    contentTypes: function() {
                        var n = t.decodeParamId("lid")
                          , a = /serie/.test(e.path());
                        return n ? [d.LIVE_SCHEDULE, d.MOVIE, d.SERIE].join(",") : a ? d.SERIE : d.MOVIE
                    }(),
                    ca_commercialOffer: l.isLoggedIn ? l.profile.commercialOffer : null
                }
                  , v = {
                    px_content_id: (m ? d.LIVE_SCHEDULE : f ? d.SERIE : d.MOVIE) + g
                };
                return r.getSearchSelectedOrder(!0).then(function(e) {
                    return h.orderBy = e || void 0,
                    a.getConfig(p)
                }).then(function(e) {
                    return u.isEmptyObject(e) || (Object.assign(v, e.requestParams),
                    Object.assign(h, v)),
                    s.getRecommendationsCarouselNumber().then(function(t) {
                        return t > 0 ? c.getNowInvalidationCacheDatetime().then(function(n) {
                            return i.recommendations(e, t).get(Object.assign(h, {
                                cachetime: n
                            }))
                        }) : []
                    })
                }).then(function(e) {
                    return n.segmentData(e)
                }).then(function(e) {
                    return e.filter(function(e) {
                        var t = e.id;
                        return t !== g
                    })
                })
            }
        }
    }
    zo.$inject = ["$compile", "goMdlCarouselCnstBreakpoints", "goMdlAnalyticsSvcManager"],
    Qo.$inject = ["$injector", "goSvcUtils"],
    Ko.$inject = ["$location", "goSvcSlug", "goSvcCommercialSegmentation", "goMdlAnalyticsSvcContentWise", "goSvcOrderBy", "goMdlCarouselSvcCaRecommendations", "goSvcCacheInvalidator", "goSvcUniapiParameter", "goSvcUserStatus", "goSvcUtils"];
    var Xo = r.a.module("goMdlCarousel", []).constant("goMdlCarouselCnstBreakpoints", Go).component("goMdlCarouselCmpCatchup", ao).component("goMdlCarouselCmpHeader", fo).component("goMdlCarouselCmpError", go).component("goMdlCarouselCmpLiveArea", So).component("goMdlCarouselCmpEpisode", co).component("goMdlCarouselCmpThematicArea", Oo).component("goMdlCarouselCmpPersonalExtension", Co).component("goMdlCarouselCmpPromos", Mo).component("goMdlCarouselCmpRecommendations", $o).component("goMdlCarouselCmpUpselling", jo).directive("goMdlCarouselDrctSwiper", zo).factory("goMdlCarouselSvcCaRecommendations", Qo).factory("goMdlCarouselSvcRecommendations", Ko).name
      , Jo = n(318)
      , Zo = n.n(Jo)
      , ei = (n(560),
    {
        template: Zo.a,
        bindings: {
            ageRating: "<"
        }
    })
      , ti = n(317)
      , ni = {
        controller: function() {
            var e = this;
            e.$onInit = function() {
                e.audios = je()(new Set(e.audios.map(function(e) {
                    return Object(u.b)(e)
                })))
            }
        },
        template: n.n(ti).a,
        bindings: {
            audios: "<"
        }
    };
    var ai = n(316)
      , ri = n.n(ai);
    ii.$inject = ["$q", "$rootScope", "goSvcDetails", "goCnstEnumerated"];
    var oi = {
        template: ri.a,
        controller: ii,
        bindings: {
            product: "<"
        }
    };
    function ii(e, t, n, a) {
        "ngInject";
        var r, o = this, i = a.goEvents.RECORDINGS_UPDATED;
        o.loadVisibility = function() {
            o.isBlockTvodBarVisible = !1,
            o.isCatalogExpirationBarVisible = !1,
            o.isExpirationBarVisible = !1,
            o.isPlaybackErrorBarVisible = !1,
            o.isPurchaseErrorBarVisible = !1,
            e.all([n.isBlockTvodBarVisible(o.product), n.isCatalogExpirationBarVisible(o.product), n.isExpirationBarVisible(o.product), n.isPlaybackErrorBarVisible(o.product), n.isPurchaseErrorBarVisible(o.product), n.isRecordingBarVisible(o.product), n.isRecordingSeason(o.product), n.isRecordingBarConflicted(o.product), n.isSubscribeOnlyBarVisible(o.product), n.isSubscribeErrorBarVisible(o.product)]).then(function(e) {
                var t = Fe()(e, 10)
                  , a = t[0]
                  , r = t[1]
                  , i = t[2]
                  , c = t[3]
                  , s = t[4]
                  , l = t[5]
                  , u = t[6]
                  , d = t[7]
                  , g = t[8]
                  , p = t[9];
                o.isBlockTvodBarVisible = a,
                o.isCatalogExpirationBarVisible = r,
                o.isPlaybackErrorBarVisible = c,
                o.isPurchaseErrorBarVisible = s,
                o.isRecordingBarVisible = l,
                o.isRecordingSeason = u,
                o.isRecordingBarConflicted = d,
                o.isSubscribeOnlyBarVisible = g,
                o.isSubscribeErrorBarVisible = p,
                i ? n.getExpirationDate(o.product).then(function(e) {
                    o.isExpirationBarVisible = !0,
                    o.expirationDate = e
                }).catch(function() {
                    o.isExpirationBarVisible = !1
                }) : o.isExpirationBarVisible = !1
            })
        }
        ,
        o.$onInit = function() {
            r = t.$on(i, function() {
                return o.loadVisibility()
            })
        }
        ,
        o.$onChanges = function(e) {
            var t = e.product;
            se.isDefined(t.currentValue) && o.loadVisibility()
        }
        ,
        o.$onDestroy = function() {
            r()
        }
    }
    n(82);
    var ci = n(67)
      , si = n.n(ci);
    ui.$inject = ["$controller", "$scope"];
    var li = {
        template: si.a,
        bindings: {
            product: "<"
        },
        controller: ui
    };
    function ui(e, t) {
        "ngInject";
        var n = this;
        Object.assign(n, e("goMdlDetailsCtrlBillboard", {
            $scope: t
        })),
        n.$onChanges = function() {
            n.releaseYear = n.product.year,
            n.description = n.product.description || n.product.shortDescription,
            n.qualities = n.product.playableMedias,
            n.genres = n.product.genres,
            n.title = n.product.name,
            n.ageRating = n.product.ageRating,
            n.playbackProduct = n.product,
            n.trailerProduct = n.product,
            n.init({
                hasL7dEmitted: !0,
                hasTriangle: !0,
                hasBars: !0,
                hasSubtitles: n.product.subtitleCodes.length > 0,
                hasGenres: n.product.genres.length > 0,
                hasDirectors: n.product.directors.length > 0,
                hasActors: n.product.actors.length > 0,
                hasQualities: n.product.playableMedias.length > 0,
                hasAudios: n.product.audioCodes.length > 0,
                hasDuration: n.product.duration > 0,
                hasReleaseYear: n.product.year > 0,
                hasShareBtn: !n.product.isAdult,
                hasProgressBarMovie: !0,
                hasCatchupBtn: !0,
                hasPurchaseBtn: !0,
                hasPlayBtn: !0,
                hasRestartBtn: !0,
                hasPlayTrailerBtn: !0,
                hasWatchlistBtn: !0,
                hasSubscribeBtn: !0,
                hasAmazonBtn: !0
            }),
            n.loadImage(),
            n.loadMetadata()
        }
    }
    gi.$inject = ["$controller", "$scope", "$filter", "goSvcDetails", "goSvcProduct", "goSvcLiveChannels", "goSvcMetadata"];
    var di = {
        template: si.a,
        controller: gi,
        bindings: {
            product: "<"
        }
    };
    function gi(e, t, n, a, r, o, i) {
        "ngInject";
        var c, s = this, l = n("goFltrSpotlight");
        Object.assign(s, e("goMdlDetailsCtrlBillboard", {
            $scope: t
        })),
        s.loadImage = function() {
            var e = s.product
              , t = e.videoFrameDetail
              , n = e.bannerDetail
              , a = t || n;
            s.bkgLandscapeImage = s.product.isAirProgram ? a : l(a, 1600, 900, {
                saturation: 0,
                contrast: 1.55,
                addColor: "%23002C36",
                brightness: .61
            })
        }
        ,
        s.loadGenres = function() {
            r.getGenres(s.product.genrePids).then(function(e) {
                s.genres = e
            })
        }
        ,
        s.loadQualities = function() {
            o.getChannelById(s.product.liveChannelId).then(function(e) {
                s.qualities = e.urlList
            })
        }
        ,
        s.$onChanges = function(e) {
            e.product.isFirstChange() || (s.playbackProduct = s.product)
        }
        ,
        s.$onInit = function() {
            s.title = s.product.programName,
            s.loadQualities(),
            s.loadGenres(),
            s.loadImage(),
            s.loadMetadata(),
            s.playbackProduct = s.product,
            a.getLiveProgram(s.product).then(function(e) {
                s.program = e,
                c = {
                    url: s.bkgLandscapeImage,
                    width: 1600,
                    height: 900
                },
                i.setDetailMetadata(Object.assign(e, {
                    mainImage: c
                })),
                s.description = e.description,
                s.ageRating = e.ageRating,
                s.init({
                    hasPlayLiveBtn: !0,
                    hasProgressBar: !0,
                    hasRecordingBar: !0,
                    hasRecordBtn: !0,
                    hasRestartLiveBtn: !0,
                    hasPlayNowBtn: !0,
                    hasPlayChannelBtn: !0,
                    hasQualities: !0,
                    hasEmissionChannel: !0,
                    hasGenres: s.product.genrePids.length > 0,
                    hasSubscribeBtn: !0,
                    hasTriangle: !0
                })
            })
        }
    }
    mi.$inject = ["$controller", "$rootScope", "$scope", "goCnstEnumerated", "goMdlDetailsSvcSeries", "goSvcUtils", "goSvcSlug", "goSvcUserStatus"];
    var pi = {
        template: si.a,
        bindings: {
            product: "<",
            seasons: "<",
            setupConfig: "<"
        },
        controller: mi
    };
    function mi(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s, l, u, d, g = this, p = a.routes.serie, m = a.goEvents, f = m.SEASON_SELECTED, h = m.EPISODE_SELECTED, v = m.PURCHASE_SUCCESS, y = !0;
        function S(e) {
            g.trailerProduct = g.seasons.find(function(t) {
                return t.id === e
            })
        }
        function b(e) {
            r.getEpisode(e).then(function(e) {
                var t = r.getContentWiseParams();
                t && (e.contentWiseParams = t),
                g.playbackProduct = e,
                function(e) {
                    var t = e.id
                      , n = e.name;
                    if (y)
                        y = !1;
                    else {
                        var a = i.encodeId(t, n)
                          , r = "".concat(p, "/").concat(a);
                        g.shareUrl = r,
                        o.changeLocation(r, {
                            id: a
                        })
                    }
                }(e)
            })
        }
        Object.assign(g, e("goMdlDetailsCtrlBillboard", {
            $scope: n
        })),
        g.$onInit = function() {
            g.releaseYear = g.product.year,
            g.description = g.product.description || g.product.shortDescription,
            g.seasonsNumber = g.product.childrenCount,
            g.title = g.product.name,
            g.ageRating = g.product.ageRating,
            g.genres = g.product.genres,
            S(g.setupConfig.seasonId),
            s = t.$on(f, function(e, t) {
                return S(t)
            }),
            l = t.$on(h, function(e, t) {
                Object.keys(t).length && b(t)
            }),
            d = t.$on(v, function() {
                b(g.setupConfig)
            }),
            u = c.$watch("isLoggedIn", function(e, t) {
                e !== t && r.setContentWiseParams(),
                g.showText = c.isLoggedIn
            }),
            g.init({
                hasSubtitles: g.product.subtitles.length > 0,
                hasGenres: g.product.genres.length > 0,
                hasDirectors: g.product.directors.length > 0,
                hasActors: g.product.actors.length > 0,
                hasQualities: g.product.playableMedias > 0,
                hasAudios: g.product.audios.length > 0,
                hasReleaseYear: g.product.year > 0,
                hasShareBtn: !g.product.isAdult,
                hasFollowBtn: !0,
                hasPlayTrailerBtn: !0,
                hasPlayBtn: !0,
                hasRestartBtn: !0,
                hasSeasons: g.product.childrenCount > 0,
                hasSubscribeBtn: !0,
                hasTriangle: !0,
                hasAmazonBtn: !0
            }),
            g.loadImage(),
            g.loadMetadata()
        }
        ,
        g.$onDestroy = function() {
            s(),
            l(),
            u(),
            d()
        }
    }
    var fi = n(315)
      , hi = n.n(fi);
    yi.$inject = ["$q", "goSvcUserStatus", "$filter", "goSvcRights"];
    var vi = {
        template: hi.a,
        bindings: {
            product: "<"
        },
        controller: yi
    };
    function yi(e, t, n, a) {
        "ngInject";
        var r = this
          , o = n("goFltrSpotlight");
        r.$onChanges = function() {
            e.all([a.isPurchasable(r.product), a.isPurchased(r.product)]).then(function(e) {
                var n = Fe()(e, 2)
                  , a = n[0]
                  , o = n[1];
                r.showPriceTriangle = t.isLoggedIn && r.product.price && !r.product.isNetflix && a,
                r.hasSubscriptionPurchaseBtn = t.isAnonymousLoggedIn || a,
                r.hasSubscriptionCancelBtn = o
            }),
            r.product.backgroundImage = o(r.product.bannerDetail, 1600, 900, {
                blur: 20
            })
        }
    }
    var Si = n(314)
      , bi = {
        template: n.n(Si).a,
        controller: function() {
            var e = this;
            e.$onInit = function() {
                e.cast = e.cast.slice(0, 3)
            }
        },
        bindings: {
            cast: "<",
            title: "<",
            productId: "<"
        }
    };
    var Ei = n(313)
      , Ti = n.n(Ei)
      , Ci = (n(557),
    {
        template: Ti.a,
        bindings: {
            description: "<"
        }
    })
      , Pi = n(312)
      , Ii = {
        template: n.n(Pi).a,
        bindings: {
            duration: "="
        }
    }
      , Ai = n(311)
      , Mi = n.n(Ai);
    wi.$inject = ["$q", "$filter", "goSvcTime", "goSvcUtils", "goSvcLiveChannels", "goSvcUniapiParameter", "goSvcUserStatus", "goSvcUser"];
    var Ni = {
        template: Mi.a,
        controller: wi,
        bindings: {
            product: "<"
        }
    };
    function wi(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s = this
          , l = t("translate");
        s.loadText = function(e) {
            var r, o = Fe()(e, 2), c = o[0], u = o[1], d = Math.abs(n.getDiffDaysFromNow(s.product.startTime)), g = t("goFltrDateUniapi"), p = {
                dayOfTheWeek: a.capitalize(g(s.product.startTime, "EEEE")),
                dayNumber: g(s.product.startTime, "d"),
                month: a.capitalize(g(s.product.startTime, "MMMM")),
                time: g(s.product.startTime, "HH:mm"),
                channelName: c.callLetter,
                channelNumber: c.channelMapNumber.get(u) || c.channelNumber
            };
            r = a.isNotAiring(s.product) ? 0 === d ? "today" : 1 === d ? "tomorrow" : d <= 7 ? "next7d" : "other" : "now";
            var m = i.isLoggedIn ? "emittedChannelLoggedIn" : "emittedChannelAnonymous";
            s.emissionChannelTxt = l("common.".concat(m, ".").concat(r), p)
        }
        ,
        s.$onChanges = function() {
            var t = i.isLoggedIn && o.getChannelMappingSync() ? c.getUserChannelMapId() : e.when();
            e.all([r.getChannelById(s.product.liveChannelId), t]).then(s.loadText)
        }
    }
    var Li = n(310)
      , $i = n.n(Li)
      , Ri = (n(555),
    {
        template: $i.a,
        controller: function() {
            "ngInject";
            var e = this;
            e.$onInit = function() {
                e.isVisible = e.product.isNetworkCATCHUP,
                e.emissionDate = e.product.releaseDate
            }
        },
        bindings: {
            product: "<"
        }
    });
    var Di = n(309)
      , _i = {
        template: n.n(Di).a,
        controller: function() {
            var e = this;
            e.$onInit = function() {
                e.genres = e.genres.slice(0, 3)
            }
        },
        bindings: {
            genres: "<",
            productId: "<"
        }
    };
    var Oi = n(308)
      , Ui = n.n(Oi);
    xi.$inject = ["goSvcUserStatus", "goSvcSlug", "goSvcDetails", "$rootScope", "goCnstEnumerated", "goMdlAnalyticsSvcPlayerStats", "goMdlAnalyticsSvcManager", "goSvcUrlChecker", "$location"];
    var ki = {
        template: Ui.a,
        controller: xi
    };
    function xi(e, t, n, a, r, i, c, s, l) {
        "ngInject";
        var u, d, g = this, p = o.caTypes.CONTENT_TYPES.LIVE_SCHEDULE, m = r.goEvents;
        g.showError = function() {
            d ? g.isError = !0 : a.$emit(m.FATAL_ERROR)
        }
        ,
        g.getData = function() {
            var e = t.decodeParamId("lid")
              , a = vt()(e) ? o.caUtils.toPid(p, e) : e;
            n.getLiveSchedule(a).then(function(e) {
                var t = l.path().substring(1).startsWith(r.routes.epg);
                g.product = e,
                !t && s.checkURL(e),
                d ? c.trackEvent("epg::liveDetail", {
                    CHANNELID: e.liveChannelId,
                    PROGRAMID: e.epgProgramId
                }) : c.trackEvent("detail::live", {
                    CONTENTID: e.id
                })
            }).catch(function() {
                return g.showError()
            }).finally(function() {
                i.setDetailLoadTime(),
                g.isLoading = !1
            })
        }
        ,
        g.$onInit = function() {
            g.isLoading = !0,
            d = window.document.body.classList.contains("modal-open"),
            u = e.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return g.getData()
            })
        }
        ,
        g.$onDestroy = function() {
            u()
        }
    }
    n(187);
    var ji = n(123)
      , Bi = n.n(ji);
    Vi.$inject = ["$controller", "$scope", "$rootScope", "$q", "goSvcProduct", "goSvcLiveChannels"];
    var Fi = {
        template: Bi.a,
        controller: Vi,
        bindings: {
            schedule: "<"
        }
    };
    function Vi(e, t, n, a, r, o) {
        "ngInject";
        var i = this;
        Object.assign(i, e("goMdlDetailsCtrlTabs", {
            $scope: t
        })),
        i.$onInit = function() {
            i.id = i.schedule.id,
            i.cwUxr = n.cwTypes.SIMILAR,
            a.all([r.getGenres(i.schedule.genrePids), o.getChannelById(i.schedule.liveChannelId)]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                i.channel = a,
                i.subscriptions = a.subscriptions,
                i.init({
                    product: i.schedule,
                    genres: n
                })
            }).catch(function() {
                i.init({
                    product: i.schedule
                })
            })
        }
    }
    var Hi = n(307)
      , Gi = n.n(Hi)
      , Wi = (n(552),
    {
        template: Gi.a
    })
      , qi = n(306)
      , Yi = n.n(qi);
    n(550);
    Qi.$inject = ["goSvcProduct", "goSvcLiveChannels", "goSvcUtils", "goCnstEnumerated"];
    var zi = {
        template: Yi.a,
        controller: Qi,
        bindings: {
            product: "<"
        }
    };
    function Qi(e, t, n, a) {
        "ngInject";
        var r = this
          , i = o.caTypes.CONTENT_TYPES;
        r.loadLogo = function() {
            r.product.goType === a.goType.LiveProgram ? t.getChannelById(r.product.liveChannelId).then(function(e) {
                var t = e.icon
                  , n = e.logo;
                r.imageUrl = t || n
            }).catch(function() {
                r.imageUrl = null
            }) : (!function() {
                if (!r.product.providerPids) {
                    var e = n.getDeepProperty(r.product, "producer.id");
                    r.product.providerPids = [o.caUtils.toPid(i.COMPANY, e)]
                }
                r.product.distributor || (r.product.distributor = n.getDeepProperty(r.product, "distributor.title"))
            }(),
            e.getLogo(r.product).then(function(e) {
                r.imageUrl = e
            }))
        }
        ,
        r.$onInit = function() {
            r.loadLogo()
        }
    }
    var Ki = n(305)
      , Xi = n.n(Ki);
    Zi.$inject = ["$location", "goCnstApp", "goCnstConfig", "goMdlDetailsSvcMain"];
    var Ji = {
        template: Xi.a,
        controller: Zi,
        bindings: {
            product: "<"
        }
    };
    function Zi(e, t, n, a) {
        "ngInject";
        var r, o = this, i = t.country;
        o.loadMovieMetaInfo = function() {
            o.itemType = "http://schema.org/Movie",
            o.name = o.product.name,
            o.duration = o.product.duration,
            o.ageRating = o.product.ageRating.value,
            o.genre = o.product.genres.map(function(e) {
                return e.name
            }).join(","),
            o.inLanguage = o.product.audioCodes.join(","),
            o.subtitleLanguage = o.product.subtitles.map(function(e) {
                return e.code
            }).join(","),
            o.description = o.product.description,
            o.url = e.absUrl(),
            o.actors = o.product.actors.map(function(e) {
                return e.name
            }),
            o.directors = o.product.directors.map(function(e) {
                return e.name
            }),
            o.country = i,
            o.isFree = o.product.isFree,
            o.isRental = !o.product.isFree && o.product.isTVOD,
            o.isSubscribable = !o.product.isFree && !o.product.isTVOD,
            o.licenseEnd = o.product.licenseEndISO,
            o.licenseStart = o.product.licenseStartISO,
            o.eligibleRegion = n.go.i18n.iso.substring(3),
            o.image = o.loadImage()
        }
        ,
        o.loadImage = function() {
            return (r = a.loadImageBillboard(o.product)).isPortraitImage ? r.portraitImage : r.bkgLandscapeImage
        }
        ,
        o.$onInit = function() {
            o.loadMovieMetaInfo()
        }
    }
    var ec = n(304)
      , tc = n.n(ec);
    ac.$inject = ["$location", "goCnstApp", "goCnstConfig", "goMdlDetailsSvcMain"];
    var nc = {
        template: tc.a,
        controller: ac,
        bindings: {
            serie: "<",
            seasons: "<",
            audioCodes: "<"
        }
    };
    function ac(e, t, n, a) {
        "ngInject";
        var r, o = this, i = t.country;
        o.loadSerieMetaInfo = function() {
            o.name = o.serie.name,
            o.ageRating = o.serie.ageRating.value,
            o.genre = o.serie.genres.map(function(e) {
                return e.name
            }).join(","),
            o.inLanguage = o.audioCodes ? o.audioCodes.join(",") : "",
            o.description = o.serie.description,
            o.url = e.absUrl(),
            o.country = i,
            o.image = o.loadImage(),
            o.datePublished = o.serie.year,
            o.numberOfSeasons = o.serie.childrenCount,
            o.numberOfEpisodes = o.numberOfEpisodes(),
            o.actors = o.serie.actors.map(function(e) {
                return e.name
            }),
            o.directors = o.serie.directors.map(function(e) {
                return e.name
            }),
            o.isFree = o.serie.isFree,
            o.isRental = !o.serie.isFree && o.serie.isTVOD,
            o.isSubscribable = !o.serie.isFree && !o.serie.isTVOD,
            o.licenseStart = o.serie.licenseStartISO,
            o.licenseEnd = o.serie.licenseEndISO,
            o.eligibleRegion = n.go.i18n.iso.substring(3)
        }
        ,
        o.numberOfEpisodes = function() {
            var e = 0;
            return o.seasons.forEach(function(t) {
                var n = t.childrenCount;
                e += n
            }),
            e
        }
        ,
        o.loadImage = function() {
            return (r = a.loadImageBillboard(o.serie)).isPortraitImage ? r.portraitImage : r.bkgLandscapeImage
        }
        ,
        o.$onInit = function() {
            o.loadSerieMetaInfo()
        }
    }
    var rc = n(303)
      , oc = n.n(rc);
    cc.$inject = ["$rootScope", "goSvcUserStatus", "goSvcSlug", "goSvcDetails", "goCnstEnumerated", "goSvcUtils", "goMdlAnalyticsSvcPlayerStats", "goSvcUrlChecker"];
    var ic = {
        template: oc.a,
        controller: cc
    };
    function cc(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s, l, u = this, d = r.goEvents;
        u.preload = function() {
            a.tryPreload(u.movie)
        }
        ,
        u.showError = function() {
            e.$emit(d.FATAL_ERROR)
        }
        ,
        u.loadMovie = function(t) {
            a.getMovie(t).then(function(e) {
                return a.checkAdultAccess(e).then(function() {
                    return e
                })
            }).then(function(e) {
                u.movie = e,
                c.checkURL(u.movie),
                a.trackVodEvent(e)
            }).catch(function() {
                return u.showError()
            }).finally(function() {
                i.setDetailLoadTime(),
                u.isLoading = !1,
                e.$emit(d.CONTENT_UPDATED, u.movie),
                u.preload()
            })
        }
        ,
        u.$onInit = function() {
            u.isLoading = !0,
            s = e.$on(d.PURCHASE_SUCCESS, function() {
                u.loadMovie(n.decodeParamId("id"))
            }),
            l = t.$watchGroup(["isAuth", "isLoggedIn"], function() {
                t.isAnonymousLoggedIn && u.movie && u.movie.isAdult ? o.redirectToHome() : u.loadMovie(n.decodeParamId("id"))
            })
        }
        ,
        u.$onDestroy = function() {
            s(),
            l()
        }
    }
    lc.$inject = ["$controller", "$scope", "$rootScope"];
    var sc = {
        template: Bi.a,
        controller: lc,
        bindings: {
            movie: "<"
        }
    };
    function lc(e, t, n) {
        "ngInject";
        var a = this;
        Object.assign(a, e("goMdlDetailsCtrlTabs", {
            $scope: t
        })),
        a.$onInit = function() {
            a.id = a.movie.id,
            a.cwUxr = n.cwTypes.VOD_SIMILAR,
            a.subscriptions = a.movie.subscriptions,
            a.init({
                product: a.movie,
                genres: a.movie.genres
            })
        }
    }
    var uc = n(302)
      , dc = n.n(uc);
    pc.$inject = ["$scope", "$rootScope", "$routeParams", "$location", "goSvcSubscription", "goSvcUserStatus", "goSvcSlug", "goSvcMetadata", "goSvcLogger", "goSvcUrlChecker", "goMdlPopUpsSvcManager", "goMdlAnalyticsSvcManager", "goSvcNetflix", "goCnstEnumerated", "goSvcRights"];
    var gc = {
        template: dc.a,
        controller: pc
    };
    function pc(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m) {
        "ngInject";
        var f, h, v, y = this, S = s.getLogger("COMPONENT", "goMdlSubscriptionsCmpDetail");
        function b(e) {
            y.isLoading = e
        }
        function E(t) {
            S.error("Error loading subscription", t),
            e.$root.$emit(p.goEvents.FATAL_ERROR)
        }
        function T() {
            var t;
            y.isErrorLoadingLogo = !1,
            c.setTemporalMetadata("subscriptionId", c.setMetadataSubscription),
            (t = parseInt(i.decodeParamId("id"), 10),
            r.get(t).then(function(e) {
                y.subscription = e,
                d.trackEvent("detail::subscription", {
                    CONTENTID: e.id
                })
            })).then(function() {
                y.subscription ? (y.subscription.isNetflix && d.trackEvent("netflix::subscription"),
                g.isNetflixContent(y.subscription) || l.checkURL(y.subscription),
                function(e) {
                    var t = e.getPricingModelsByUserType()[0];
                    t && m.isPurchasable(y.subscription).then(function(e) {
                        if (e) {
                            var n = r.splitPricingModel(t);
                            y.subscription.price = n.price,
                            y.subscription.recurrence = n.recurrence
                        }
                    })
                }(y.subscription),
                c.setMetadataSubscription(y.subscription),
                function(e) {
                    S.debug("Loading recommended contents for subscription", e),
                    !e.isNetflix && r.getRelated(e).then(function(e) {
                        y.subscription.related = e
                    })
                }(y.subscription)) : e.$root.$emit(p.goEvents.FATAL_ERROR, {
                    description: "errors.subscriptions.description",
                    link: "./settings/my-subscriptions"
                })
            }).catch(E).finally(b.bind(null, !1))
        }
        y.onPurchasedCallback = function() {
            b(!0),
            T()
        }
        ,
        y.onCancelledCallback = function() {
            b(!0),
            T()
        }
        ,
        y.$onInit = function() {
            b(!0),
            f = e.$on("$locationChangeSuccess", function() {
                y.subscription && (c.setMetadataSubscription(y.subscription),
                f())
            }),
            n.error && u.openError({
                title: "netflix.error.title",
                message: "netflix.error.message",
                accept: "common.accept"
            }).result.finally(function() {
                a.search("error", null)
            }),
            v = t.$on(p.goEvents.PURCHASE_SUCCESS, function() {
                b(!0),
                T()
            }),
            h = o.$watchCollection("[isAuth, isAnonymousLoggedIn]", function() {
                o.isAuth && T()
            })
        }
        ,
        y.$onDestroy = function() {
            f(),
            v(),
            h()
        }
    }
    var mc = n(131)
      , fc = n.n(mc)
      , hc = n(301)
      , vc = n.n(hc);
    Sc.$inject = ["goSvcSubscription", "$window"];
    var yc = {
        template: vc.a,
        controller: Sc,
        bindings: {
            product: "<"
        }
    };
    function Sc(e, t) {
        "ngInject";
        var n = this;
        function a() {
            n.isCollapsibleVisibile = .92 * t.innerWidth < n.product.liveChannels.length * (Number(fc.a.logoSize) + Number(fc.a.logoMargin)) - Number(fc.a.logoMargin)
        }
        n.$onChanges = function() {
            n.product.hasLiveChannels && e.getLiveChannels(n.product).then(function(e) {
                n.product.liveChannels = e,
                a()
            }),
            t.addEventListener("resize", a)
        }
        ,
        n.$onDestroy = function() {
            t.removeEventListener("resize", a)
        }
    }
    var bc = n(300)
      , Ec = n.n(bc);
    Cc.$inject = ["$q", "$filter", "$window", "goSvcLogger", "goMdlPopUpsSvcManager", "goSvcSubscription", "goSvcUserStatus", "goMdlAnalyticsSvcManager", "goSvcNetflix", "goSvcAuthentication", "goSvcPurchase", "uaConstants", "$rootScope", "goCnstEnumerated", "goSvcAmazon", "goSvcGoogleTagManager"];
    var Tc = {
        template: Ec.a,
        controller: Cc,
        bindings: {
            product: "<",
            callback: "&"
        }
    };
    function Cc(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f) {
        "ngInject";
        var h = this
          , v = a.getLogger("COMPONENT", "goMdlSubscriptionsCmpPurchase")
          , y = t("translate")
          , S = t("goFltrPricingModelText")
          , b = "settings.subscriptions";
        function E() {
            var t = h.product.getPricingModelsByUserType()[0];
            v.debug("Direct purchase started"),
            c.trackEvent("settings::purchaseSubscription", {
                CONTENTID: h.product.subscriptionId,
                CONTENTTYPE: d.CatalogItemType.Subscription,
                PRICEMODELID: (t || {}).id
            }),
            o.isAmazonSubscription(h.product).then(function(t) {
                return (t ? r.openInfo({
                    message: "".concat(b, ".amazonPurchaseInfo.text"),
                    accept: "".concat(b, ".amazonPurchaseInfo.accept"),
                    cancel: "".concat(b, ".amazonPurchaseInfo.cancel")
                }).result.then(function(t) {
                    return t || e(function() {
                        return null
                    })
                }).catch(function() {
                    return e(function() {
                        return null
                    })
                }) : e.when()).then(function() {
                    return u.checkIfPurchasePinIsEnabled()
                }).then(C).then(P).then(function() {
                    return function(e) {
                        v.debug("Purchase succesful!"),
                        g.$emit(p.goEvents.PURCHASE_SUCCESS),
                        I("success", h.product.isDirect()),
                        (t = "".concat(b, ".successfulPurchasePopup.title"),
                        n = "".concat(b, ".successfulPurchasePopup.message"),
                        r.openSuccess({
                            title: t,
                            message: n,
                            accept: "common.accept"
                        })).result.finally(function() {
                            e && m.launchActivationAfterPurchase()
                        });
                        var t, n
                    }(t)
                })
            }).catch(function() {
                I("error", h.product.isDirect()),
                v.debug("Error purchasing subscription"),
                T("".concat(b, ".errorPurchase"))
            })
        }
        function T(e) {
            r.openError({
                title: "common.error.title",
                message: e,
                accept: "common.close"
            })
        }
        function C(t) {
            if (t) {
                var n = h.product.getPricingModelsByUserType()[0]
                  , a = h.product.title
                  , o = y("".concat(b, ".purchasingPin.button"), {
                    price: S(n)
                });
                return r.openPurchaseSubscriptionPin({
                    title: "".concat(b, ".purchasingPin.title"),
                    movie: {
                        name: a
                    },
                    buttonText: o
                }).result.catch(function() {
                    return e(function() {
                        return null
                    })
                })
            }
            return e(function() {
                return null
            })
        }
        function P(e) {
            var t = r.openRedirect({
                message: "".concat(b, ".loading"),
                closable: !1
            });
            return o.purchase(h.product, e).finally(function() {
                return t.dismiss("cancel")
            })
        }
        function I(e, t) {
            f.sendEvent({
                event: "purchaseSuscription",
                status: e,
                idProduct: h.product.subscriptionId,
                contentType: d.CatalogItemType.Subscription,
                priceModelId: (h.product.getPricingModelsByUserType()[0] || {}).id,
                priceValue: (h.product.getPricingModelsByUserType()[0] || {}).value,
                inApp: t,
                userId: Mt.a.MD5(i.profile.id.toString()).toString()
            })
        }
        h.onClick = function() {
            I("init", h.product.isDirect()),
            s.isNetflixContent(h.product) ? s.redirect(h.product) : i.isAnonymousLoggedIn ? l.login().then(g.$emit(p.goEvents.CONTENT_UPDATED, h.product)).catch(se.noop) : h.product.isDirect() ? E() : h.product.isOnlineChannel() ? (v.debug("Online channel purchase started"),
            h.product.url ? n.open(h.product.url, "_blank") : r.openInfo({
                title: h.product.title,
                message: "".concat(b, ".onlineChannelPurchase"),
                accept: "common.continue"
            })) : T("".concat(b, ".errorPurchase"))
        }
    }
    n(547);
    var Pc = n(299)
      , Ic = n.n(Pc);
    Mc.$inject = ["$filter", "$window", "$q", "goSvcLogger", "goMdlPopUpsSvcManager", "goSvcSubscription", "goSvcPurchase", "$rootScope", "goCnstEnumerated", "goMdlAnalyticsSvcManager", "uaConstants"];
    var Ac = {
        template: Ic.a,
        controller: Mc,
        bindings: {
            product: "=",
            callback: "&"
        }
    };
    function Mc(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d = this
          , g = a.getLogger("COMPONENT", "goMdlSubscriptionsCmpPurchase")
          , p = e("translate")
          , m = "settings.subscriptions";
        function f(e) {
            var t = d.product.title;
            return e ? r.openPurchaseSubscriptionPin({
                title: "".concat(m, ".cancelationPin.title"),
                movie: {
                    name: t
                },
                buttonText: p("".concat(m, ".cancelationPin.button"))
            }).result.catch(function() {
                return n(function() {
                    return null
                })
            }) : n(function() {
                return null
            })
        }
        function h(e) {
            var t = r.openRedirect({
                message: "".concat(m, ".loadingCancel"),
                closable: !1
            });
            return o.cancel(d.product, e).finally(function() {
                return t.dismiss("cancel")
            })
        }
        function v() {
            c.$emit(s.goEvents.PURCHASE_SUCCESS),
            r.openSuccess({
                title: "".concat(m, ".successfulCancelPopup.title"),
                message: "".concat(m, ".successfulCancelPopup.message"),
                accept: "common.accept"
            })
        }
        function y(e) {
            r.openError({
                title: "common.error.title",
                message: e,
                accept: "common.close"
            })
        }
        d.onClick = function() {
            o.isCancellationEnabled(d.product).then(function(e) {
                e ? d.product.isDirect() ? (l.trackEvent("settings::cancelSubscription", {
                    CONTENTID: d.product.subscriptionId,
                    CONTENTTYPE: u.CatalogItemType.Subscription
                }),
                i.checkIfPurchasePinIsEnabled().then(f).then(h).then(v).catch(function() {
                    g.debug("Error cancelling subscription"),
                    y("".concat(m, ".errorCanceling"))
                })) : d.product.isOnlineChannel() ? d.product.url ? t.open(d.product.url, "_blank") : r.openInfo({
                    title: d.product.title,
                    message: "".concat(m, ".onlineChannelCancellation"),
                    accept: "common.continue"
                }) : y("".concat(m, ".errorCanceling")) : r.openInfo({
                    title: d.product.title,
                    message: "".concat(m, ".cancellationDisabled"),
                    accept: "common.continue"
                })
            })
        }
    }
    var Nc = n(298)
      , wc = n.n(Nc);
    $c.$inject = ["$filter", "uaConstants", "goSvcUtils", "goSvcRights", "goSvcSubscription"];
    var Lc = {
        template: wc.a,
        controller: $c,
        bindings: {
            product: "<"
        }
    };
    function $c(e, t, n, a, r) {
        "ngInject";
        var o = this
          , i = e("translate")
          , c = e("date")
          , s = t.PurchaseStatus.PendingOBCancellation;
        o.loadCancellingVisibility = function() {
            var e = n.toTimestamp(n.getDeepProperty(o.product, "userRight.endDate"));
            o.product.isCancelling() && r.isAmazonSubscription(o.product).then(function(t) {
                t ? o.cancellingText = i("settings.subscriptions.cancellingAmazon") : o.product.userRight.purchaseStatusId === s ? o.cancellingText = i("settings.subscriptions.cancellationInProgressWithDate", {
                    date: c(e, "dd MMMM")
                }) : o.cancellingText = i("details.expirationMessage.moreThan48Hours", {
                    date: c(e, "dd MMMM")
                })
            })
        }
        ,
        o.$onChanges = function() {
            o.loadCancellingVisibility(),
            a.isNotCompatiblePurchase(o.product).then(function(e) {
                o.isNotCompatiblePurchase = e
            })
        }
    }
    var Rc = n(297)
      , Dc = n.n(Rc);
    Oc.$inject = ["goSvcDetails"];
    var _c = {
        template: Dc.a,
        controller: Oc,
        bindings: {
            product: "<"
        }
    };
    function Oc(e) {
        "ngInject";
        var t = this;
        t.loadIsVisible = function() {
            e.isPlayLiveChannelOnNowButtonVisible(t.product).then(function(e) {
                t.isVisible = e
            })
        }
        ,
        t.onClick = function() {
            t.isLoading = !0,
            e.playLiveChannelOnNow(t.product).finally(function() {
                t.isLoading = !1
            })
        }
        ,
        t.$onChanges = function() {
            t.loadIsVisible()
        }
    }
    var Uc = n(122)
      , kc = n.n(Uc);
    n(186);
    jc.$inject = ["goSvcDetails"];
    var xc = {
        template: kc.a,
        controller: jc,
        bindings: {
            product: "<",
            showText: "<"
        }
    };
    function jc(e) {
        "ngInject";
        var t = this;
        t.onClick = function() {
            t.isLoading = !0,
            e.playLiveChannel(t.product).finally(function() {
                t.isLoading = !1
            })
        }
        ,
        t.loadIsVisible = function() {
            return e.isPlayLiveButtonVisible(t.product).then(function(e) {
                t.isVisible = e
            })
        }
        ,
        t.$onChanges = function() {
            t.loadIsVisible()
        }
    }
    var Bc = n(296)
      , Fc = n.n(Bc);
    Hc.$inject = ["goSvcPlayback", "goSvcDetails", "goCnstEnumerated"];
    var Vc = {
        template: Fc.a,
        controller: Hc,
        bindings: {
            product: "<"
        }
    };
    function Hc(e, t, n) {
        "ngInject";
        var a = this
          , r = n.goType.Season;
        a.onClick = function() {
            a.isLoading = !0,
            a.product.goType === r ? t.getSeason(a.product.id).then(e.playTrailer).finally(function() {
                a.isLoading = !1
            }) : e.playTrailer(a.product).finally(function() {
                a.isLoading = !1
            })
        }
        ,
        a.$onInit = function() {
            a.isLoading = !1
        }
        ,
        a.$onChanges = function() {
            a.isVisible = a.product && a.product.trailerIds.length > 0
        }
    }
    Wc.$inject = ["$rootScope", "$q", "$filter", "goSvcDetails", "goMdlAnalyticsSvcPlayerStats", "goSvcUserStatus", "goCnstEnumerated"];
    var Gc = {
        template: kc.a,
        controller: Wc,
        bindings: {
            product: "<",
            showText: "<"
        }
    };
    function Wc(e, t, n, a, r, o, i) {
        "ngInject";
        var c, s, l = this, u = i.goEvents, d = i.goType.Episode, g = n("translate"), p = !1;
        l.onClick = function() {
            l.isLoading = !0,
            l.setTimeToPlayBtnClicked(),
            (l.product.goType === d ? a.getEpisode(l.product.id) : t.when(l.product)).then(function(e) {
                return a.hasResumeInformation(e).then(function(t) {
                    return l.product.contentWiseParams && (e.contentWiseParams = l.product.contentWiseParams),
                    t ? a.resumeMovie(e) : a.playMovie(e)
                })
            }).finally(function() {
                l.isLoading = !1
            })
        }
        ,
        l.loadIsVisible = function() {
            a.isPlayButtonVisible(l.product).then(function(e) {
                l.isVisible = e
            })
        }
        ,
        l.setTimeToPlayBtnClicked = function() {
            p ? r.resetTimeToPlayBtn() : (r.setTimeToPlayBtn(),
            p = !0)
        }
        ,
        l.loadText = function() {
            var e = l.product.episodeNumber
              , t = l.product.seasonNumber;
            l.btnText = g("details.playEpisode", {
                episode: e,
                season: t
            })
        }
        ,
        l.$onInit = function() {
            c = o.$watchGroup(["isAuth", "isLoggedIn"], function() {
                p = !1
            }),
            s = e.$on(u.PURCHASE_SUCCESS, l.loadIsVisible)
        }
        ,
        l.$onChanges = function() {
            l.product && l.loadText(),
            l.loadIsVisible()
        }
        ,
        l.$onDestroy = function() {
            c(),
            s()
        }
    }
    var qc = n(121)
      , Yc = n.n(qc);
    n(185);
    Qc.$inject = ["goSvcTime", "$filter"];
    var zc = {
        template: Yc.a,
        controller: Qc,
        bindings: {
            product: "<"
        }
    };
    function Qc(e, t) {
        "ngInject";
        var n = this;
        n.loadData = function() {
            var a = e.getTime()
              , r = n.product.endTime - n.product.startTime
              , o = a - n.product.startTime;
            n.startTimeFormatted = t("date")(1e3 * n.product.startTime, "HH:mm"),
            n.endTimeFormatted = t("date")(1e3 * n.product.endTime, "HH:mm"),
            n.isVisible = a > n.product.startTime,
            n.progress = "".concat(Math.round(100 * o / r), "%")
        }
        ,
        n.$onInit = function() {
            n.loadData()
        }
    }
    Xc.$inject = ["goSvcDetails", "$filter", "$rootScope", "goSvcUserStatus", "goCnstEnumerated"];
    var Kc = {
        template: Yc.a,
        controller: Xc,
        bindings: {
            product: "<"
        }
    };
    function Xc(e, t, n, a, r) {
        "ngInject";
        var o, i, c, s = this, l = r.goEvents;
        s.loadData = function() {
            s.startTimeFormatted = t("date")(new Date(0,0,0,0,0,0,0).setSeconds(s.actualProgress), "HH:mm:ss"),
            s.endTimeFormatted = t("date")(new Date(0,0,0,0,0,0,0).setSeconds(s.product.duration), "HH:mm:ss"),
            s.progress = "".concat(Math.round(100 * s.actualProgress / s.product.duration), "%")
        }
        ,
        s.loadIsVisible = function() {
            a.isAnonymousLoggedIn ? s.isVisible = !1 : e.getResumeData(s.product.id).then(function(e) {
                e >= 0 ? (s.isVisible = !0,
                s.actualProgress = e,
                s.loadData()) : s.isVisible = !1
            }).catch(function() {
                s.isVisible = !1
            })
        }
        ,
        s.$onInit = function() {
            s.isLoading = !1,
            i = a.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return s.loadIsVisible()
            }),
            o = n.$on(l.PURCHASE_SUCCESS, function() {
                return s.loadIsVisible()
            }),
            c = n.$on(l.RESUME_UPDATED, function() {
                return s.loadIsVisible()
            })
        }
        ,
        s.$onChanges = function() {
            s.loadIsVisible()
        }
        ,
        s.$onDestroy = function() {
            i(),
            o(),
            c()
        }
    }
    var Jc = n(295)
      , Zc = n.n(Jc);
    n(543);
    ts.$inject = ["$q", "$filter", "$window", "goSvcPurchase", "goSvcDetails", "goCnstEnumerated", "goSvcUserStatus"];
    var es = {
        template: Zc.a,
        controller: ts,
        bindings: {
            product: "<"
        }
    };
    function ts(e, t, n, a, r, o, i) {
        "ngInject";
        var c, s = this, l = n.Math, u = o.goType, d = u.Season, g = u.Episode, p = u.Movie, m = t("translate"), f = t("goFltrCurrency"), h = t("goFltrRecurrence");
        s.getDropdownText = function() {
            return s.product.goType === p ? (e = l.min.apply(l, je()(s.prices.map(function(e) {
                return e.value
            }))),
            m("details.purchaseDropdown.title", {
                price: f(e)
            })) : function() {
                var e = s.product.goType === d ? "library.rentSeason" : "library.rentEpisode"
                  , t = l.min.apply(l, je()(s.prices.map(function(e) {
                    return e.value
                })));
                return m(e, {
                    price: f(t)
                })
            }();
            var e
        }
        ,
        s.getDropdownItemText = function(e) {
            return m("details.purchaseDropdown.quality", {
                quality: m("common.quality.".concat(e.qualityName)),
                price: f(e.value),
                expiration: h(e)
            })
        }
        ,
        s.toggleDropdown = function() {
            s.isOpened = !s.isOpened
        }
        ,
        s.closeDropdown = function() {
            s.isOpened = !1
        }
        ,
        s.onPurchase = function(e) {
            s.isOpened = !1,
            s.isLoading = !0,
            a.purchase(s.product, s.paymentMethod, e).finally(function() {
                s.isLoading = !1,
                s.loadData()
            })
        }
        ,
        s.loadPrices = function() {
            return r.getAvailablePricingModels(s.product).then(function(e) {
                s.prices = e
            })
        }
        ,
        s.loadPaymentMethod = function() {
            return r.getAvailablePaymentMethod(s.product).then(function(e) {
                s.paymentMethod = e
            })
        }
        ,
        s.loadData = function() {
            s.isVisible = !1,
            s.isOpened = !1,
            s.isLoading = !1,
            (s.product.goType === g ? r.isEpisodePurchaseDropdownVisible(s.product) : r.isPurchaseDropdownVisible(s.product)).then(function(t) {
                t && e.all([s.loadPrices(), s.loadPaymentMethod()]).finally(function() {
                    s.isVisible = !0
                })
            })
        }
        ,
        s.$onInit = function() {
            c = i.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return s.loadData()
            })
        }
        ,
        s.$onChanges = function(e) {
            !e.product.isFirstChange() && s.loadData()
        }
        ,
        s.$onDestroy = function() {
            c()
        }
    }
    var ns = n(294)
      , as = n.n(ns);
    os.$inject = ["$filter", "goSvcUtils"];
    var rs = {
        template: as.a,
        controller: os,
        bindings: {
            medias: "<"
        }
    };
    function os(e, t) {
        "ngInject";
        var n = this
          , a = o.caTypes.QUALITY
          , r = e("translate");
        n.$onChanges = function() {
            n.qualities = n.medias && n.medias.filter(function(e) {
                return e.quality !== a.None
            }).sort(function(e, t) {
                return e.quality - t.quality
            }).map(function(e) {
                var t = e.qualityName;
                return r("common.quality.".concat(t))
            }).filter(t.removeDuplicates)
        }
    }
    var is = n(293)
      , cs = n.n(is);
    n(541);
    ls.$inject = ["$rootScope", "$q", "goMdlEpgSvcLive", "goSvcUniapiPvr", "goMdlPopUpsSvcManager", "goSvcCookies", "goSvcUtils", "goSvcLiveOrchestrator", "goMdlAnalyticsSvcManager", "goCnstEnumerated", "uaConstants"];
    var ss = {
        template: cs.a,
        controller: ls,
        bindings: {
            product: "<"
        }
    };
    function ls(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d, g = this, p = l.goEvents.RECORDINGS_UPDATED, m = u.RecordingScheduleType, f = l.servicesTypes, h = f.cPVRServiceTypeName, v = f.rPVRServiceTypeName;
        function y() {
            return a.isRemotePvrEnabled().then(function(e) {
                return e && !o.get("pvrWarningFirstTime") && r.openPvrWarning()
            })
        }
        function S(e) {
            return e.some(function(e) {
                return e.conflicted
            }) && r.openWarning({
                title: "epg.pvr.conflict.title",
                message: "epg.pvr.conflict.message",
                accept: "common.accept"
            }).result
        }
        function b(e) {
            r.openError({
                title: "epg.pvr.error",
                message: e,
                accept: "common.accept"
            })
        }
        function E(e) {
            b("GetAllRecordingSchedules" === i.getDeepProperty(e, "config.uniapi.method") ? "epg.pvr.errorUpdatingInformation" : i.getDeepProperty(e, "error.message"))
        }
        function T() {
            g.processing = !1,
            g.showWarning = !1
        }
        function C(e) {
            se.isDefined(e) && e.stopPropagation()
        }
        function P() {
            g.loadIsVisible().then(function(e) {
                if (e)
                    return a.getRecording(g.product.id, g.product.epgProgramId, g.product.liveChannelId, g.product.startTime).then(function(e) {
                        g.recording = e,
                        g.isRecording = se.isDefined(e)
                    })
            }).catch(function() {
                return se.noop()
            })
        }
        g.onClick = function() {
            g.showWarning = a.isPerformingAction(),
            g.product.epgSerieId ? g.showPopover = !g.showPopover : g.isRecording ? g.cancelRecording() : g.addRecording()
        }
        ,
        g.addRecording = function(e, r) {
            C(r),
            !a.isPerformingAction() && function(e) {
                var r = g.product;
                g.processing = !0,
                t.all([n.getDetailsFromSchedule(r), c.getChannel(r.liveChannelId, !0)]).then(function(t) {
                    var n = Fe()(t, 2)
                      , o = n[0]
                      , c = o.liveProgram
                      , l = o.seasonNumber
                      , u = n[1]
                      , d = u.liveChannelId
                      , p = u.channelNumber
                      , m = u.name
                      , f = u.recordingChannelId
                      , b = c.seriesId;
                    return s.trackEvent("recordings::add", {
                        PROGRAMNAME: r.programName,
                        CHANNELNAME: m,
                        SERIESID: b,
                        ENTIRESERIES: e,
                        PROGRAMID: r.epgProgramId,
                        SERVICETYPE: g.isCloudPvrEnabled ? h : v,
                        TRACKID: i.getDeepProperty(r, "contentWiseParams.trackId", null),
                        UXREFERENCE: i.getDeepProperty(r, "contentWiseParams.uxReference", null)
                    }),
                    a.addRecordingSchedule({
                        scheduleId: r.id,
                        programId: r.epgProgramId,
                        channelId: f,
                        entireSeries: e,
                        channelNumber: p,
                        seriesId: b,
                        seasonNumber: l,
                        liveChannelId: d
                    }).then(S).then(y)
                }).catch(E).finally(T)
            }(e),
            g.showPopover = !1
        }
        ,
        g.cancelRecording = function(e, r) {
            C(r),
            !a.isPerformingAction() && function(e) {
                var r = g.product
                  , o = g.recording
                  , l = o.parentId
                  , u = o.lastModified;
                g.processing = !0,
                g.recording ? t.all([n.getDetailsFromSchedule(r), c.getChannel(r.liveChannelId, !0)]).then(function(t) {
                    var n = Fe()(t, 2)
                      , o = n[0]
                      , c = o.liveProgram
                      , d = o.seasonNumber
                      , p = n[1]
                      , m = p.liveChannelId
                      , f = p.name
                      , y = p.recordingChannelId
                      , S = c.seriesId;
                    return s.trackEvent("recordings::cancel", {
                        PROGRAMNAME: r.programName,
                        CHANNELNAME: f,
                        SERIESID: S,
                        PROGRAMID: r.epgProgramId,
                        SERVICETYPE: g.isCloudPvrEnabled ? h : v,
                        TRACKID: i.getDeepProperty(r, "contentWiseParams.trackId", null),
                        UXREFERENCE: i.getDeepProperty(r, "contentWiseParams.uxReference", null)
                    }),
                    a.cancelRecordingSchedule({
                        scheduleId: r.id,
                        programId: r.epgProgramId,
                        channelId: y,
                        entireSeries: e,
                        recordingScheduleId: l,
                        lastModified: u,
                        seriesId: S,
                        seasonNumber: d,
                        liveChannelId: m
                    })
                }).catch(E).finally(T) : (b("epg.pvr.recordingNotFoundError"),
                T())
            }(e),
            g.showPopover = !1
        }
        ,
        g.getPvrText = function() {
            return g.processing ? "epg.pvr.processing" : g.isRecording ? "epg.pvr.cancel" : "epg.pvr.record"
        }
        ,
        g.switchPopOver = function() {
            a.isPerformingAction() ? g.showWarning = !0 : (g.showWarning = !1,
            g.product.epgSerieId && (g.showPopover = !g.showPopover))
        }
        ,
        g.onCancelRecordingFromPopover = function(e) {
            var t = g.recording.type === m.EntireSeries;
            g.cancelRecording(t, e)
        }
        ,
        g.loadIsVisible = function() {
            return t.all([a.isCloudPvrEnabled(), a.isRemotePvrEnabled(), n.getDetailsFromSchedule(g.product), c.getChannel(g.product.liveChannelId, !0)]).then(function(e) {
                var t = Fe()(e, 4)
                  , n = t[0]
                  , a = t[1]
                  , r = t[2]
                  , o = t[3]
                  , i = r.liveProgram
                  , c = i.showPVR
                  , s = i.showCPVR;
                return g.isVisible = n && s && o.isCpvrManageable || a && c && o.dvr,
                g.isCloudPvrEnabled = n,
                g.isVisible
            })
        }
        ,
        g.$onChanges = function() {
            P()
        }
        ,
        g.$onInit = function() {
            d = e.$on(p, function() {
                return P()
            })
        }
        ,
        g.$onDestroy = function() {
            d()
        }
    }
    var us = n(120)
      , ds = n.n(us);
    ps.$inject = ["goSvcDetails"];
    var gs = {
        template: ds.a,
        controller: ps,
        bindings: {
            product: "<"
        }
    };
    function ps(e) {
        "ngInject";
        var t = this;
        t.loadIsVisible = function() {
            e.isRestartLiveButtonVisible(t.product).then(function(e) {
                t.isVisible = e
            })
        }
        ,
        t.onClick = function() {
            t.isLoading = !0,
            e.playLiveChannelFromBeginning(t.product).finally(function() {
                t.isLoading = !1
            })
        }
        ,
        t.$onChanges = function() {
            t.loadIsVisible()
        }
    }
    fs.$inject = ["$rootScope", "$q", "goSvcDetails", "goSvcUserStatus", "goCnstEnumerated"];
    var ms = {
        template: ds.a,
        controller: fs,
        bindings: {
            product: "<"
        }
    };
    function fs(e, t, n, a, r) {
        "ngInject";
        var o, i, c, s, l = this, u = r.goEvents, d = r.goType.Episode;
        l.loadIsVisible = function() {
            n.isRestartVodButtonVisible(l.product).then(function(e) {
                l.isVisible = e
            })
        }
        ,
        l.onClick = function() {
            l.isLoading = !0,
            (l.product.goType === d ? n.getEpisode(l.product.id) : t.when(l.product)).then(function(e) {
                return l.product.contentWiseParams && (e.contentWiseParams = l.product.contentWiseParams),
                n.playMovie(e)
            }).finally(function() {
                l.isLoading = !1
            })
        }
        ,
        l.$onInit = function() {
            l.isLoading = !1,
            s = a.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return l.loadIsVisible()
            }),
            o = e.$on(u.PURCHASE_SUCCESS, function() {
                return l.loadIsVisible()
            }),
            i = e.$on(u.CONTENT_TAGGED_WATCHED, function() {
                return l.loadIsVisible()
            }),
            c = e.$on(u.CONTENT_TAGGED_COMPLETED, function() {
                return l.loadIsVisible()
            })
        }
        ,
        l.$onChanges = function() {
            l.loadIsVisible()
        }
        ,
        l.$onDestroy = function() {
            s(),
            o(),
            i(),
            c()
        }
    }
    var hs = n(292)
      , vs = n.n(hs);
    n(539);
    Ss.$inject = ["$rootScope", "goSvcUserStatus", "goSvcSlug", "goSvcDetails", "goSvcUtils", "goMdlPlayerSvcPreload", "goMdlDetailsSvcSeries", "goCnstEnumerated", "goMdlAnalyticsSvcPlayerStats", "goSvcUrlChecker"];
    var ys = {
        template: vs.a,
        controller: Ss
    };
    function Ss(e, t, n, a, r, o, i, c, s, l) {
        "ngInject";
        var u, d, g, p = this, m = c.goEvents;
        p.preload = function() {
            o.isSupported(p.movie) && o.vod(p.movie)
        }
        ,
        p.showError = function() {
            e.$emit(m.FATAL_ERROR)
        }
        ,
        p.loadSerie = function(t) {
            i.loadSerie(t).then(function(e) {
                return a.checkAdultAccess(e.serie).then(function() {
                    return e
                })
            }).then(function(e) {
                var n = e.serie
                  , r = e.seasons
                  , o = e.selectedSeason
                  , i = e.episodes
                  , c = e.episode;
                p.serie = n,
                p.seasons = r,
                p.selectedSeason = o,
                p.episodes = i,
                p.episode = c,
                p.setupConfig = o && c ? {
                    seriesId: n.id,
                    seasonId: o.id,
                    episodeId: c.id
                } : {},
                l.checkURL([n, o, c].find(function(e) {
                    return e.id === t
                })),
                a.trackVodEvent(n)
            }).catch(function() {
                p.showError()
            }).finally(function() {
                s.setDetailLoadTime(),
                p.isLoading = !1,
                e.$emit(m.CONTENT_UPDATED, p.episode)
            })
        }
        ,
        p.$onInit = function() {
            p.isLoading = !0,
            i.setContentWiseParams(),
            u = e.$on(m.PURCHASE_SUCCESS, function() {
                p.loadSerie(n.decodeParamId("id"))
            }),
            d = t.$watchGroup(["isAuth", "isLoggedIn"], function() {
                t.isAnonymousLoggedIn && p.serie && p.serie.isAdult ? r.redirectToHome() : p.loadSerie(n.decodeParamId("id"))
            }),
            g = e.$on(m.CONTENT_TAGGED_COMPLETED, function() {
                return p.loadSerie(p.serie.id)
            })
        }
        ,
        p.$onDestroy = function() {
            u(),
            d(),
            g()
        }
    }
    n(537);
    var bs = n(291)
      , Es = n.n(bs);
    Cs.$inject = ["$rootScope", "goMdlDetailsSvcMain", "goMdlDetailsSvcSeries", "goCnstEnumerated", "goMdlAnalyticsSvcManager", "$filter"];
    var Ts = {
        template: Es.a,
        controller: Cs,
        bindings: {
            serie: "<",
            seasons: "<",
            episodes: "<",
            setupConfig: "<"
        }
    };
    function Cs(e, t, n, a, r, o) {
        "ngInject";
        var i, c, s, l = this, u = a.goEvents, d = u.EPISODE_SELECTED, g = u.SEASON_SELECTED, p = "details.upselling", m = o("goMdlDetailsFltrSeason");
        l.registerTab = function(e) {
            var t = this.tabs[e.index];
            this.tabs[e.index] = t || e,
            (!l.tabSelected || l.tabSelected.index > e.index) && (l.tabSelected = e)
        }
        ,
        l.onTabClicked = function(e) {
            l.tabSelected = l.tabs[e],
            l.isSeasonsSelected = 0 === l.tabSelected.index,
            l.isRecommendationsSelected = "details.related" === l.tabSelected.name,
            l.isUpsellingSelected = l.tabSelected.name === p,
            l.isRecommendationsSelected ? r.trackEvent("detail::recommendationSelect") : l.isUpsellingSelected && r.trackEvent("detail::upsellingSelect")
        }
        ,
        l.selectSeason = function(t) {
            r.trackEvent("detail::seasonSelect", {
                CONTENTID: t
            }),
            l.loadingEpisodes = !0,
            l.setupConfig.seasonId = t,
            l.selectedSeason = l.seasons.find(function(e) {
                return e.id === t
            }),
            l.tabs[0].name = m(l.selectedSeason, {
                withEpisode: !1,
                withAbbreviation: !0
            }),
            n.getSeasonEpisodes({
                seasonId: t,
                seriesId: i
            }).then(function(n) {
                l.loadingEpisodes = !1,
                l.episodes = n;
                var a = n[0];
                a ? e.$emit(d, {
                    episodeId: a.id,
                    seasonId: t,
                    seriesId: i
                }) : l.episode = null
            })
        }
        ,
        l.$onInit = function() {
            l.loadingEpisodes = !1,
            c = e.$on(g, function(e, t) {
                return l.selectSeason(t)
            }),
            s = e.$on(d, function(e, t) {
                Object.keys(t).length && function(e) {
                    var t = e.episodeId;
                    l.episodes.forEach(function(e) {
                        e.isSelected = e.id === t
                    }),
                    l.episode = l.episodes.find(function(e) {
                        return e.isSelected
                    });
                    var a = n.getContentWiseParams();
                    a && (l.episode.contentWiseParams = a)
                }(t)
            }),
            l.isSeasonsSelected = !0,
            l.isRecommendationsSelected = !1,
            l.isUpsellingSelected = !1,
            l.tabs = [],
            i = l.setupConfig.seriesId || l.serie.id,
            l.seasons.length ? (l.selectedSeasonId = l.setupConfig.seasonId || l.seasons[0].id,
            l.selectedSeason = l.seasons.find(function(e) {
                return e.id === l.selectedSeasonId
            }),
            l.registerTab({
                name: m(l.selectedSeason, {
                    withEpisode: !1,
                    withAbbreviation: !0
                }),
                index: 0
            })) : (l.isSeasonsSelected = !1,
            l.isRecommendationsSelected = !0),
            e.$emit(d, l.setupConfig)
        }
        ,
        l.$onChanges = function(n) {
            var a = n.episodes;
            t.isUpsellingVisible(l.serie, l.serie.subscriptions).then(function(e) {
                e ? l.registerTab({
                    name: p,
                    index: 2
                }) : l.isUpsellingVisible && (l.tabs.find(function(e) {
                    return e.name === p
                }) && l.tabs.pop(),
                l.isUpsellingSelected && l.onTabClicked(0)),
                l.isUpsellingVisible = e
            }),
            a.isFirstChange() || (e.$emit(d, l.setupConfig),
            l.selectedSeasonId = l.setupConfig.seasonId)
        }
        ,
        l.$onDestroy = function() {
            c(),
            s()
        }
    }
    var Ps = n(290)
      , Is = n.n(Ps);
    n(535);
    Ms.$inject = ["$filter", "$rootScope", "goCnstEnumerated"];
    var As = {
        template: Is.a,
        controller: Ms,
        bindings: {
            seasons: "<",
            selectedSeasonId: "<"
        }
    };
    function Ms(e, t, n) {
        "ngInject";
        var a = this
          , r = n.goEvents.SEASON_SELECTED
          , o = e("goMdlDetailsFltrSeason");
        a.setSelectedSeason = function(e) {
            var t = e || a.selectedSeasonId;
            a.selectedSeason = e ? a.seasons.find(function(e) {
                return e.id === t
            }) : a.seasons[0],
            a.selectedSeasonId = a.selectedSeason ? a.selectedSeason.id : a.selectedSeasonId
        }
        ,
        a.toggleDropdown = function() {
            a.isOpened = !a.isOpened
        }
        ,
        a.onSeasonSelected = function(e) {
            a.selectedSeason.id !== e && a.seasons.find(function(t) {
                var n = t.id;
                return e === n
            }).episodes.length > 0 && (t.$emit(r, e),
            a.setSelectedSeason(e))
        }
        ,
        a.closeDropdown = function() {
            a.isOpened = !1
        }
        ,
        a.$onInit = function() {
            a.isOpened = !1,
            a.seasons.forEach(function(e) {
                e.altTitle = o(e, {
                    widthEpisode: !0,
                    widthAbbreviation: !1
                })
            }),
            a.setSelectedSeason(a.selectedSeasonId)
        }
        ,
        a.$onChanges = function(e) {
            e.selectedSeasonId.isFirstChange() || a.setSelectedSeason(a.selectedSeasonId)
        }
    }
    var Ns = n(289)
      , ws = n.n(Ns);
    $s.$inject = ["$location", "goSvcSocialNetwork"];
    var Ls = {
        template: ws.a,
        controller: $s,
        bindings: {
            name: "<",
            socialNetwork: "<"
        }
    };
    function $s(e, t) {
        "ngInject";
        var n = this;
        n.onClick = function() {
            var a = e.url().substr(1);
            "facebook" === n.socialNetwork ? t.shareFacebook(a, n.name) : "twitter" === n.socialNetwork && t.shareTwitter(a, n.name)
        }
    }
    var Rs = n(288)
      , Ds = n.n(Rs);
    Os.$inject = ["$filter", "goSvcDetails"];
    var _s = {
        template: Ds.a,
        controller: Os,
        bindings: {
            product: "<"
        }
    };
    function Os(e, t) {
        "ngInject";
        var n = this
          , a = e("translate")
          , r = e("goFltrDetailsLink");
        n.loadData = function() {
            n.isVisible = !1,
            n.isLoading = !1,
            t.isSubscribeButtonVisible(n.product).then(function(e) {
                e && t.getSubscribeButtonData(n.product).then(function(e) {
                    n.url = r(e),
                    n.text = a("details.subscribe", {
                        name: e.title
                    })
                }).finally(function() {
                    n.isVisible = e
                })
            })
        }
        ,
        n.$onChanges = function() {
            n.loadData()
        }
    }
    var Us = n(287)
      , ks = n.n(Us);
    js.$inject = ["$q", "goSvcDetails", "goSvcUniapiParameter", "$location"];
    var xs = {
        template: ks.a,
        controller: js,
        bindings: {
            product: "<"
        }
    };
    function js(e, t, n, a) {
        "ngInject";
        var r = this;
        r.onToggleDropdown = function() {
            r.isOpened = !r.isOpened
        }
        ,
        r.closeDropdown = function() {
            r.isOpened = !1
        }
        ,
        r.redirectTo = function(e) {
            a.url(e)
        }
        ,
        r.loadData = function() {
            r.isVisible = !1,
            r.isLoading = !1,
            t.isSubscribeDropdownVisible(r.product).then(function(a) {
                return e.all([t.getCompatibleSubscriptions(r.product), n.getTotalUpsellingSubs()]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    r.subscriptions = n.slice(0, a)
                }).finally(function() {
                    r.isVisible = a
                })
            })
        }
        ,
        r.$onChanges = function() {
            r.loadData()
        }
    }
    var Bs = n(286)
      , Fs = {
        controller: function() {
            var e = this;
            e.$onInit = function() {
                e.subtitles = e.subtitles.map(function(e) {
                    return Object(u.b)(e)
                })
            }
        },
        template: n.n(Bs).a,
        bindings: {
            subtitles: "<"
        }
    };
    var Vs = n(285)
      , Hs = n.n(Vs)
      , Gs = (n(533),
    {
        template: Hs.a,
        controller: function() {
            "ngInject";
            var e = this;
            e.$onChanges = function() {
                e.titleTxt = e.episodeNumber ? "".concat(e.episodeNumber, ". ").concat(e.title) : e.title
            }
        },
        bindings: {
            title: "<",
            episodeNumber: "<?"
        }
    });
    var Ws = n(284)
      , qs = n.n(Ws);
    n(531);
    zs.$inject = ["$q", "$rootScope", "goSvcDetails", "goSvcUserStatus", "goCnstEnumerated"];
    var Ys = {
        template: qs.a,
        controller: zs,
        bindings: {
            product: "<"
        }
    };
    function zs(e, t, n, a, r) {
        "ngInject";
        var o, i, c = this, s = r.goEvents;
        c.loadColor = function() {
            e.all([n.isYellowTriangle(c.product), n.isOrangeTriangle(c.product)]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , a = t[1];
                c.isYellow = n,
                c.isOrange = a
            })
        }
        ,
        c.$onInit = function() {
            i = a.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return c.loadColor()
            }),
            o = t.$on(s.PURCHASE_SUCCESS, function() {
                return c.loadColor()
            })
        }
        ,
        c.onDestroy = function() {
            i(),
            o()
        }
    }
    var Qs = n(283)
      , Ks = n.n(Qs);
    Js.$inject = ["$q", "goSvcAmazon", "goSvcRights", "goSvcUserStatus", "goMdlAnalyticsSvcManager"];
    var Xs = {
        controller: Js,
        template: Ks.a,
        bindings: {
            product: "<"
        }
    };
    function Js(e, t, n, a, r) {
        "ngInject";
        var o, i = this;
        function c() {
            a.isAnonymousLoggedIn ? i.isVisible = !1 : e.all([t.isAmazonContent(i.product), n.isSubscribable(i.product), n.isPurchasable(i.product)]).then(function(e) {
                var t = Fe()(e, 3)
                  , n = t[0]
                  , a = t[1]
                  , r = t[2];
                i.isVisible = n && (a || r)
            })
        }
        i.onClick = function() {
            i.isLoading = !0,
            r.trackEvent("amazon::alreadyUser"),
            t.launchExternalRedirection(i.product).catch(t.showErrorPopUp).finally(function() {
                i.isLoading = !1
            })
        }
        ,
        i.$onInit = function() {
            o = a.$watch("isLoggedIn", c),
            i.isLoading = !1
        }
        ,
        i.$onDestroy = function() {
            o()
        }
    }
    function Zs(e) {
        e.resolveWhen("/details/movie/:id", {
            template: "<go-mdl-details-cmp-movie></go-mdl-details-cmp-movie>"
        }).resolveWhen("/details/live/:lid", {
            template: "<go-mdl-details-cmp-live></go-mdl-details-cmp-live>"
        }).resolveWhen("/details/serie/:id", {
            template: "<go-mdl-details-cmp-serie></go-mdl-details-cmp-serie>"
        }).resolveWhen("/details/subscription/:id", {
            template: "<go-mdl-details-cmp-subscription></go-mdl-details-cmp-subscription>"
        })
    }
    function el(e, t, n) {
        "ngInject";
        var a = {
            hasL7dEmitted: !1,
            hasTriangle: !1,
            hasBars: !0,
            hasSubtitles: !1,
            hasGenres: !1,
            hasDirectors: !1,
            hasActors: !1,
            hasQualities: !1,
            hasAudios: !1,
            hasDuration: !1,
            hasReleaseYear: !1,
            hasEmissionChannel: !1,
            hasSeasons: !1,
            hasLogo: !0,
            hasCatchupBtn: !1,
            hasPurchaseBtn: !1,
            hasPlayBtn: !1,
            hasRestartBtn: !1,
            hasPlayTrailerBtn: !1,
            hasWatchlistBtn: !1,
            hasShareBtn: !0,
            hasPlayLiveBtn: !1,
            hasProgressBar: !1,
            hasProgressBarMovie: !1,
            hasRecordingBar: !1,
            hasRecordBtn: !1,
            hasRestartLiveBtn: !1,
            hasPlayNowBtn: !1,
            hasFollowBtn: !1,
            hasSubscribeBtn: !1
        };
        this.loadImage = function() {
            var t = e.loadImageBillboard(this.product);
            this.bkgLandscapeImage = t.bkgLandscapeImage,
            this.isPortraitImage = t.isPortraitImage,
            this.portraitImage = t.portraitImage
        }
        ,
        this.loadMetadata = function() {
            var e = this.isPortraitImage ? Object.assign({
                url: this.portraitImage
            }, t.imageSizes.cover.coverDetail) : Object.assign({
                url: this.bkgLandscapeImage
            }, {
                width: 1600,
                height: 900
            });
            n.setDetailMetadata(Object.assign(this.product, {
                mainImage: e
            }))
        }
        ,
        this.init = function(e) {
            Object.assign(this, a, e)
        }
    }
    function tl(e, t, n) {
        "ngInject";
        var a = {
            tabSelected: 0,
            tabs: [],
            isRelatedVisible: !1,
            isUpsellingVisible: !1,
            genres: []
        };
        this.onTabClicked = function(e) {
            var t = "details.related" === this.tabs[e].title
              , a = "details.upselling" === this.tabs[e].title;
            this.tabSelected = e,
            t ? n.trackEvent("detail::recommendationSelect") : a && n.trackEvent("detail::upsellingSelect")
        }
        ,
        this.registerTab = function(e) {
            var t = this.tabs[e.index];
            this.tabs[e.index] = t || e
        }
        ,
        this.deselectTab = function(e) {
            this.tabSelected === e.index && (this.tabs[e.index + 1] && this.onTabClicked(e.index + 1));
            0 === e.index && (this.isRelatedVisible = !1)
        }
        ,
        this.loadInformation = function() {
            var e = this;
            this.isRelatedVisible = !this.product.isAdult && this.genres.length > 0,
            t.isUpsellingVisible(this.channel || this.product, this.subscriptions).then(function(t) {
                t && (e.registerTab({
                    name: "details.upselling",
                    index: 1
                }),
                e.isRelatedVisible || (e.tabSelected = 1)),
                e.isUpsellingVisible = t
            })
        }
        ,
        this.resetData = function() {
            this.tabSelected = 0,
            this.tabs = []
        }
        ,
        this.init = function(t) {
            var n = this;
            Object.assign(this, a, t),
            e.$watchGroup(["isAuth", "isLoggedIn"], function() {
                n.resetData(),
                n.loadInformation()
            })
        }
    }
    Zs.$inject = ["$routeProvider"],
    el.$inject = ["goMdlDetailsSvcMain", "goCnstEnumerated", "goSvcMetadata"],
    tl.$inject = ["goSvcUserStatus", "goMdlDetailsSvcMain", "goMdlAnalyticsSvcManager"];
    var nl = n(119)
      , al = n.n(nl);
    ol.$inject = ["goSvcTags", "goMdlPopUpsSvcManager"];
    var rl = {
        template: al.a,
        controller: ol,
        bindings: {
            product: "<"
        }
    };
    function ol(e, t) {
        "ngInject";
        var n = this;
        n.isVisible = function() {
            return !n.product.isAdult
        }
        ,
        n.onClick = function() {
            n.isLoading = !0,
            e.toggleFollow(n.product).catch(function() {
                t.openWarning({
                    title: "popup.follow.error.title",
                    message: "popup.follow.error.message",
                    accept: "common.accept"
                })
            }).then(function() {
                return n.loadData()
            }).finally(function() {
                n.isLoading = !1
            })
        }
        ,
        n.loadData = function() {
            return e.isFollowed(n.product).then(function(e) {
                n.text = e ? "product.follow.added" : "product.follow.title",
                n.isVisible = !n.product.isAdult
            })
        }
        ,
        n.$onChanges = function() {
            n.isLoading = !1,
            n.loadData()
        }
    }
    cl.$inject = ["goSvcTags", "goMdlPopUpsSvcManager", "goCnstEnumerated"];
    var il = {
        template: al.a,
        controller: cl,
        bindings: {
            product: "<"
        }
    };
    function cl(e, t, n) {
        "ngInject";
        var a = this
          , r = n.goType;
        a.isVisible = function() {
            var e = se.isDefined(a.product) && a.product.goType === r.Movie
              , t = a.product.isAdult;
            return e && !t
        }
        ,
        a.onClick = function() {
            a.isLoading = !0,
            e.toggleFavorite(a.product).catch(function() {
                t.openWarning({
                    title: "product.watchList.error.title",
                    message: "product.watchList.error.text",
                    accept: "common.accept"
                })
            }).then(function() {
                return a.loadData()
            }).finally(function() {
                a.isLoading = !1
            })
        }
        ,
        a.loadData = function() {
            return e.isFavorite(a.product).then(function(e) {
                var t = se.isDefined(a.product) && a.product.goType === r.Movie
                  , n = a.product.isAdult;
                a.text = e ? "product.watchList.added" : "product.watchList.title",
                a.isVisible = t && !n
            })
        }
        ,
        a.$onChanges = function() {
            a.isLoading = !1,
            a.loadData()
        }
    }
    function sl(e) {
        "ngInject";
        var t = e("translate");
        return function(e, n) {
            return n.withEpisode ? "".concat(t("product.season"), " ").concat(e.seasonNumber, " (").concat(e.childrenCount, " ").concat(t("product.episode", {
                count: e.childrenCount
            }, "messageformat"), ")") : n.withAbbreviation ? '<span class="season-name__abbreviation">\n              '.concat(t("product.seasonAbbreviation"), " ").concat(e.seasonNumber, '\n            </span>\n            <span class="season-name__long">\n              ').concat(t("product.season"), " ").concat(e.seasonNumber, "\n            </span>") : "".concat(t("product.season"), " ").concat(e.seasonNumber)
        }
    }
    function ll(e, t, n, a, r) {
        "ngInject";
        var o = t("goFltrSpotlight");
        return {
            isUpsellingVisible: function(t, n) {
                return e.all([a.isSubscribable(t), r.getCompatibleIds(n)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && a.length > 0
                })
            },
            loadImageBillboard: function(e) {
                var t = e.videoFrameDetail
                  , n = e.landscapeCoverDetail
                  , a = e.bannerDetail
                  , r = e.coverDetail
                  , i = e.portraitArtDetail
                  , c = e.isNetworkCATCHUP
                  , s = {};
                s.bkgLandscapeImage = (c ? t : n) || a || o(r, 1600, 900, {
                    blur: 20
                }) || o(i, 1600, 900, {
                    blur: 20
                }),
                s.isPortraitImage = !(c ? t : n) && !a,
                s.isPortraitImage && (s.portraitImage = r || i);
                return s
            }
        }
    }
    sl.$inject = ["$filter"],
    ll.$inject = ["$q", "$filter", "goSvcUserStatus", "goSvcRights", "goSvcSubscription"];
    var ul = n(282)
      , dl = n.n(ul);
    function gl(e, t, n, a, r, i, c, s, l) {
        "ngInject";
        var u, d = o.caTypes.CONTENT_TYPES;
        return {
            loadSerie: function(r) {
                var i = this;
                return n.isLoggedIn ? a.getCurrentEpisodesForUsers().then(function(n) {
                    var a = n.map(function(e) {
                        return {
                            seriesId: o.caUtils.getId(e.seriesId),
                            seasonId: o.caUtils.getId(e.seasonId),
                            episodeId: o.caUtils.getId(e.episodeId)
                        }
                    }).find(function(e) {
                        var t = e.seriesId
                          , n = e.seasonId
                          , a = e.episodeId;
                        return t === r || n === r || a === r
                    });
                    return a ? e.when([a]) : t.getCommonProductInfo(r).get()
                }).then(function(e) {
                    var t = Fe()(e, 1)
                      , n = t[0];
                    return g(n)
                }) : t.getCommonProductInfo(r).get().then(function(e) {
                    var t = Fe()(e, 1)
                      , n = t[0];
                    return i.getData(n)
                })
            },
            getData: g,
            getSeason: function(e, t) {
                return p(e).then(function(e) {
                    return i.getSelected(e, t)
                })
            },
            getSerieSeasons: p,
            getSerie: m,
            getSeasonEpisodes: f,
            getEpisode: h,
            getEpisodePosition: function(e) {
                var t = e.seriesId
                  , n = e.seasonId
                  , a = e.episodeId;
                return f({
                    seriesId: t,
                    seasonId: n
                }).then(function(e) {
                    return i.getSelectedPosition(e, a)
                })
            },
            getContentWiseParams: function() {
                return u
            },
            setContentWiseParams: function() {
                var e = s.decodeParamId("id")
                  , t = l.getParams(e);
                t.id === e ? u = t : v()
            },
            clearContentWiseParams: v
        };
        function g(t) {
            var n, a, r, c, s = t.seriesId, l = void 0 === s ? 0 : s, u = t.episodeId, g = void 0 === u ? 0 : u, v = t.seasonId, y = void 0 === v ? 0 : v, S = o.caUtils.toPid(d.SERIE, l);
            return 0 === l ? e.reject("No seriesId value provided") : e.all([m(S), p(S), f({
                seriesId: l,
                seasonId: y
            }), h({
                seriesId: l,
                seasonId: y,
                episodeId: g
            })]).then(function(e) {
                var t = Fe()(e, 4)
                  , o = t[0]
                  , s = t[1]
                  , l = t[2]
                  , u = t[3];
                return n = o,
                a = s,
                c = l,
                r = i.getSelected(s, y),
                {
                    serie: n,
                    seasons: a,
                    episodes: c,
                    selectedSeason: r,
                    episode: u
                }
            })
        }
        function p(e) {
            return r.getNowInvalidationCacheDatetime().then(function(n) {
                return t.getSerieSeasons().get({
                    contentPid: e,
                    cachetime: n
                })
            })
        }
        function m(e) {
            return t.getSerie().get({
                contentPid: e
            }).then(function(e) {
                var t = dl()(e)
                  , n = t[0]
                  , a = t.slice(1);
                return n.actors = a.filter(function(e) {
                    var t = e.type
                      , a = e.pid
                      , r = t === d.PERSON
                      , o = n.actorPids.some(function(e) {
                        return e === a
                    });
                    return r && o
                }),
                n.directors = a.filter(function(e) {
                    var t = e.type
                      , a = e.pid
                      , r = t === d.PERSON
                      , o = n.directorPids.some(function(e) {
                        return e === a
                    });
                    return r && o
                }),
                n
            }).then(function(e) {
                return c.segmentData(e)
            })
        }
        function f(e) {
            var n = e.seriesId
              , a = e.seasonId
              , c = void 0 === a ? 0 : a
              , s = o.caUtils.toPid(d.SERIE, n);
            return r.getNowInvalidationCacheDatetime().then(function(e) {
                return t.getSerieSeasons().get({
                    contentPid: s,
                    cachetime: e
                }).then(function(e) {
                    return i.getSelected(e, c)
                }).then(function(n) {
                    return n ? t.getEpisodes().get({
                        contentPid: n.pid,
                        cachetime: e
                    }).then(function(e) {
                        var n = e.map(function(e) {
                            return e.pid
                        });
                        return n.length ? t.getEpisodesRelations(n).get().then(function(t) {
                            return [e, t]
                        }) : [[], []]
                    }) : [[], []]
                }).then(function(e) {
                    return i.mergeRelations(e)
                }).then(function(e) {
                    return e.forEach(function(e, t) {
                        return Object.assign(e, {
                            analyticsData: {
                                name: "detail::episodeSelect",
                                data: {
                                    CONTENTID: e.id,
                                    CONTENTPOSITION: t
                                }
                            }
                        })
                    }),
                    e
                })
            })
        }
        function h(e) {
            var t = e.seriesId
              , n = e.seasonId
              , a = void 0 === n ? 0 : n
              , r = e.episodeId
              , o = void 0 === r ? 0 : r;
            return f({
                seriesId: t,
                seasonId: a
            }).then(function(e) {
                return i.getSelected(e, o)
            })
        }
        function v() {
            u = null
        }
    }
    function pl(e, t, n, a) {
        "ngInject";
        var r = o.caTypes.RELATIONS
          , i = n.goType;
        return {
            getSelected: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                  , t = arguments.length > 1 ? arguments[1] : void 0;
                return e.find(function(e) {
                    var n = e.id;
                    return n === t
                }) || e[0]
            },
            getSelectedPosition: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                  , t = arguments.length > 1 ? arguments[1] : void 0;
                return e.findIndex(function(e) {
                    var n = e.id;
                    return n === t
                }) || 0
            },
            mergeRelations: function(n) {
                var o = Fe()(n, 2)
                  , i = o[0]
                  , c = o[1];
                return i.forEach(function(e) {
                    var n, o, i = c.filter(function(t) {
                        return t.sourcePid === e.pid
                    });
                    e.actors = i.filter(function(e) {
                        return e.relationType === r.ACTOR
                    }),
                    e.directors = i.filter(function(e) {
                        return e.relationType === r.DIRECTOR
                    });
                    var s = i.filter(function(e) {
                        return e.relationType === r.MEDIA
                    });
                    e.medias = a.getFiltered(s, e.maxQuality),
                    e.playableMedias = e.medias,
                    e.audios = (n = []).concat.apply(n, je()(e.medias.map(function(e) {
                        return e.languageList.split(",")
                    }))).filter(t.removeDuplicates),
                    e.audioCodes = e.audios,
                    e.subtitles = i.filter(function(e) {
                        return e.relationType === r.SUBTITLE
                    }),
                    e.subtitleCodes = (o = []).concat.apply(o, je()(e.subtitles.map(function(e) {
                        return e.languageCode.split(",")
                    }))).filter(t.removeDuplicates)
                }),
                e.when(i)
            },
            getDropdownMinimumLength: function(e) {
                return e.goType === i.Movie ? 1 : 0
            }
        }
    }
    gl.$inject = ["$q", "goSvcCaDetails", "goSvcUserStatus", "goSvcUser", "goSvcCacheInvalidator", "goMdlDetailsSvcUtils", "goSvcCommercialSegmentation", "goSvcSlug", "goMdlAnalyticsSvcContentWise"],
    pl.$inject = ["$q", "goSvcUtils", "goCnstEnumerated", "goSvcMedias"];
    var ml = r.a.module("goMdlDetails", []).controller("goMdlDetailsCtrlBillboard", el).controller("goMdlDetailsCtrlTabs", tl).component("goMdlDetailsCmpCast", bi).component("goMdlDetailsCmpAgeRating", ei).component("goMdlDetailsCmpAudios", ni).component("goMdlDetailsCmpBars", oi).component("goMdlDetailsCmpVodBillboard", li).component("goMdlDetailsCmpBillboardLive", di).component("goMdlDetailsCmpSerieBillboard", pi).component("goMdlDetailsCmpSubscriptionBillboard", vi).component("goMdlDetailsCmpDescription", Ci).component("goMdlDetailsCmpDuration", Ii).component("goMdlDetailsCmpEmitted", Ri).component("goMdlDetailsCmpEmissionChannel", Ni).component("goMdlDetailsCmpGenres", _i).component("goMdlDetailsCmpLive", ki).component("goMdlDetailsCmpLoading", Wi).component("goMdlDetailsCmpLogo", zi).component("goMdlDetailsCmpMeta", Ji).component("goMdlDetailsCmpMetaSerie", nc).component("goMdlDetailsCmpMovie", ic).component("goMdlDetailsCmpMovieTabs", sc).component("goMdlDetailsCmpSubscription", gc).component("goMdlDetailsCmpSubscriptionChannels", yc).component("goMdlDetailsCmpSubscriptionPurchase", Tc).component("goMdlDetailsCmpSubscriptionCancel", Ac).component("goMdlDetailsCmpSubscriptionBars", Lc).component("goMdlDetailsCmpPlayNow", _c).component("goMdlDetailsCmpLiveTabs", Fi).component("goMdlDetailsCmpPlayLive", xc).component("goMdlDetailsCmpPlayVod", Gc).component("goMdlDetailsCmpRecord", ss).component("goMdlDetailsCmpPlayTrailer", Vc).component("goMdlDetailsCmpProgressBar", zc).component("goMdlDetailsCmpProgressBarMovie", Kc).component("goMdlDetailsCmpPurchase", Object(_n.a)(function(e) {
        var t = e.product
          , n = Object(Zn.e)("$filter", "goSvcPurchase", "goSvcUserStatus", "goSvcDetails", "goSvcAuthentication", "goCnstEnumerated")
          , a = Fe()(n, 6)
          , r = a[0]
          , o = a[1]
          , i = a[2]
          , c = a[3]
          , s = a[4]
          , l = a[5].goType
          , u = l.Movie
          , d = l.Episode
          , g = r("translate")
          , p = r("goFltrCurrency")
          , m = r("goFltrRecurrence")
          , f = Object(Qn.useState)(!1)
          , h = Fe()(f, 2)
          , v = h[0]
          , y = h[1]
          , S = Object(Qn.useState)(!1)
          , b = Fe()(S, 2)
          , E = b[0]
          , T = b[1]
          , C = Object(Qn.useState)()
          , P = Fe()(C, 2)
          , I = P[0]
          , A = P[1]
          , M = Object(Qn.useState)()
          , N = Fe()(M, 2)
          , w = N[0]
          , L = N[1]
          , $ = Object(Qn.useState)()
          , R = Fe()($, 2)
          , D = R[0]
          , _ = R[1]
          , O = Object(Zn.c)();
        function U() {
            return (U = Ma()(Ia.a.mark(function e() {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (T(!0),
                            e.prev = 1,
                            !i.isLoggedIn) {
                                e.next = 7;
                                break
                            }
                            return e.next = 5,
                            o.purchase(t, I, w);
                        case 5:
                            e.next = 9;
                            break;
                        case 7:
                            return e.next = 9,
                            s.login();
                        case 9:
                            return e.prev = 9,
                            T(!1),
                            e.finish(9);
                        case 12:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[1, , 9, 12]])
            }))).apply(this, arguments)
        }
        function k(e) {
            return i.isLoggedIn && t.goType === u ? g("details.purchase", {
                quality: g("common.quality.".concat(e.qualityName)),
                price: p(e.value),
                expiration: m(e)
            }) : g("details.purchaseAnonymous")
        }
        return Object(Qn.useEffect)(function() {
            var e;
            c.isPurchaseButtonVisible(t).then((e = Ma()(Ia.a.mark(function e(n) {
                var a, r, o, s, l, u, g, p;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (!n) {
                                e.next = 18;
                                break
                            }
                            if (a = t.goType === d,
                            !i.isLoggedIn || a) {
                                e.next = 14;
                                break
                            }
                            return e.next = 5,
                            Promise.all([c.getAvailablePricingModels(t), c.getAvailablePaymentMethod(t)]);
                        case 5:
                            o = e.sent,
                            s = Fe()(o, 2),
                            l = s[0],
                            u = void 0 === l ? [] : l,
                            g = s[1],
                            p = void 0 === g ? {} : g,
                            r = u[0],
                            L(r),
                            A(p);
                        case 14:
                            y(!i.isLoggedIn || !a),
                            _(k(r)),
                            e.next = 19;
                            break;
                        case 18:
                            y(!1);
                        case 19:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            })),
            function(t) {
                return e.apply(this, arguments)
            }
            ))
        }, [t, O]),
        Kn.a.createElement(Kn.a.Fragment, null, v && Kn.a.createElement("button", {
            className: "go-btn go-btn__xl go-btn__yellow go-btn__icon go-details--btn ".concat(E ? "go-btn__loading" : ""),
            onClick: function() {
                return U.apply(this, arguments)
            }
        }, Kn.a.createElement("span", {
            className: "go-glyphicon go-glyphicon-ticket"
        }), Kn.a.createElement("span", null, D)))
    })).component("goMdlDetailsCmpPurchaseDropdown", es).component("goMdlDetailsCmpQualities", rs).component("goMdlDetailsCmpRestartVod", ms).component("goMdlDetailsCmpRestartLive", gs).component("goMdlDetailsCmpSerie", ys).component("goMdlDetailsCmpSerieTabs", Ts).component("goMdlDetailsCmpSeasonDropdown", As).component("goMdlDetailsCmpShare", Ls).component("goMdlDetailsCmpSubscribe", _s).component("goMdlDetailsCmpSubscribeDropdown", xs).component("goMdlDetailsCmpSubtitles", Fs).component("goMdlDetailsCmpTitle", Gs).component("goMdlDetailsCmpTriangle", Ys).component("goMdlDetailsCmpToggleButtonFollow", rl).component("goMdlDetailsCmpToggleButtonWatchlist", il).component("goMdlDetailsCmpAmazonButton", Xs).filter("goMdlDetailsFltrSeason", sl).factory("goMdlDetailsSvcMain", ll).factory("goMdlDetailsSvcSeries", gl).factory("goMdlDetailsSvcUtils", pl).config(Zs).name;
    function fl(e) {
        var t = {
            template: "<go-mdl-error-cmp-error></go-mdl-error-cmp-error>",
            page: {
                title: "seoMetadata.title.error"
            }
        };
        e.resolveWhen("/page-not-found/:statusCode?", t),
        e.resolveWhen("/error", t)
    }
    fl.$inject = ["$routeProvider"];
    var hl = n(281)
      , vl = n.n(hl)
      , yl = (n(529),
    {
        template: vl.a,
        controller: Sl
    });
    function Sl(e, t, n) {
        var a = this;
        a.$onInit = function() {
            a.error = "/error" === n.path() ? "default" : e.statusCode || ""
        }
        ,
        a.back = function() {
            t.history.back()
        }
    }
    Sl.$inject = ["$routeParams", "$window", "$location"];
    var bl = n(118)
      , El = n.n(bl)
      , Tl = (n(527),
    {
        template: El.a,
        controller: Cl
    });
    function Cl(e, t, n, a, r, o) {
        var i, c, s, l = this, u = a("translate"), d = window.document.querySelector(".go-main--view");
        function g() {
            l.isFatalError = !1,
            d.classList.remove("go-main--view__error")
        }
        function p(e) {
            var t, n;
            t = (e = e || {}).title,
            n = e.description,
            l.title = u(t || "errors.default.title"),
            l.description = u(n || "errors.default.description"),
            l.actionButton = u("errors.default.actionButton"),
            i = e.link,
            l.className = e.className
        }
        function m() {
            t.$on(o.goEvents.FATAL_ERROR, function(e, t) {
                e.stopPropagation(),
                p(t),
                l.isFatalError = !0,
                d.classList.add("go-main--view__error")
            })
        }
        l.action = function() {
            i ? n.path(i) : e.location.reload()
        }
        ,
        l.$onInit = function() {
            c = t.$on("$locationChangeStart", g),
            m(),
            s = r.$watch("[isAuth, isLoggedIn]", function() {
                r.isAuth && g()
            })
        }
        ,
        l.$onDestroy = function() {
            c && c(),
            s && s()
        }
    }
    Cl.$inject = ["$window", "$rootScope", "$location", "$filter", "goSvcUserStatus", "goCnstEnumerated"],
    Il.$inject = ["$filter", "$window", "goSvcSlug", "$uibModalStack", "goSvcLiveDetail"];
    var Pl = {
        template: El.a,
        controller: Il
    };
    function Il(e, t, n, a, r) {
        "ngInject";
        var o = this
          , i = e("translate");
        o.loadDefaultError = function() {
            o.title = i("errors.default.title"),
            o.description = i("errors.default.description"),
            o.actionButtonText = i("errors.default.actionButton"),
            o.action = function() {
                t.location.reload()
            }
        }
        ,
        o.loadExpiredError = function() {
            o.title = i("errors.liveFromSocialMedia.title"),
            o.description = i("errors.liveFromSocialMedia.description"),
            o.actionButtonText = i("errors.liveFromSocialMedia.actionButton"),
            o.action = function() {
                r.closePopup(),
                a.dismissAll()
            }
        }
        ,
        o.$onInit = function() {
            n.decodeParamId("ref") ? o.loadExpiredError() : o.loadDefaultError(),
            o.isFatalError = !0
        }
    }
    var Al = r.a.module("goMdlError", []).component("goMdlErrorCmpError", yl).component("goMdlErrorCmpGeneric", Tl).component("goMdlErrorCmpLive", Pl).config(fl).name;
    function Ml(e) {
        e.resolveWhen("/", {
            template: "<go-mdl-home-cmp-home></go-mdl-home-cmp-home>",
            page: {
                title: "seoMetadata.title.home",
                description: "seoMetadata.description.home",
                eventName: "home::home"
            }
        }).otherwise({
            template: "<go-mdl-error-cmp-error></go-mdl-error-cmp-error>",
            page: {
                eventName: "error::error"
            }
        })
    }
    Ml.$inject = ["$routeProvider"];
    n(525);
    wl.$inject = ["$timeout", "goSvcLibrary", "goSvcUniapiLive", "goSvcUserStatus", "goSvcUniapiParameter"];
    var Nl = {
        template: tr.a,
        controller: wl
    };
    function wl(e, t, n, a, r) {
        "ngInject";
        var o, i = this, c = [];
        i.loadMoreChannels = function() {
            var e, t = i.channels.length, n = c.length;
            t < n && ((e = i.channels).push.apply(e, je()(c.slice(t, t + 5))),
            i.channels.length === n && (i.isAllChannelsLoaded = !0))
        }
        ,
        i.limitTotalChannels = function(e) {
            return r.getHomeCarouselNumber().then(function(t) {
                return e.slice(0, t)
            })
        }
        ,
        i.loadAllChannels = function() {
            return t.getHomeChannels().then(i.limitTotalChannels).then(function(e) {
                c = e
            })
        }
        ,
        i.isCatchupCarousel = function(e) {
            return e.isCatchup && e.hasChildren
        }
        ,
        i.isThematicAreaCarousel = function(e) {
            return !i.isCatchupCarousel(e) && !e.isPersonalExtension
        }
        ,
        i.resetChannels = function() {
            i.isAllChannelsLoaded = !1,
            i.channels = [],
            c = []
        }
        ,
        i.$onInit = function() {
            var t = this;
            o = a.$watchCollection("[isAuth, isLoggedIn]", function() {
                a.isAuth && (i.resetChannels(),
                i.loadAllChannels().then(function() {
                    return e(t.loadMoreChannels, 200)
                }))
            }),
            n.isAvailableInTheInstance().then(function(e) {
                i.isLiveAvailable = e
            })
        }
        ,
        i.$onDestroy = function() {
            o()
        }
        ,
        i.$onDestroy = function() {
            o()
        }
    }
    var Ll = n(117);
    function $l(e, t) {
        "ngInject";
        var n = o.caTypes.CONTENT_TYPES
          , a = o.caTypes.ATTRIBUTES;
        return {
            catalogItems: function(n, r, i) {
                var c = {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    includeAttributes: a.REQUIRES_PIN,
                    includeRelations: [o.caTypes.RELATIONS.PRODUCT_DEPENDENCIES, o.caTypes.RELATIONS.GENRE, o.caTypes.RELATIONS.PROVIDER].join(","),
                    offset: r,
                    limit: i,
                    ca_RequiresPin: !1,
                    fields: ["pid", "title", "callLetter", "channelName", "channelId", "commercializationType", "releaseDate", "start", "end", "Distributor", "Duration", "images.cover", "images.videoFrame", "images.landscapeCover", "images.banner", "images.portraitArt"].join(",")
                };
                function s(t) {
                    var n = {
                        response: {
                            formatter: e.get("goModelCaAbstractContent"),
                            strategy: o.caTypes.RESPONSE_STRATEGY.COUNT
                        },
                        cache: e.get("goMdlCachesSvcStatic")
                    };
                    return Object.assign(n, t)
                }
                return t.isEmptyObject(n) ? o.caInterface.api.rest(o.caUtils.contentChildrenRoute(), c, s()) : o.caInterface.api.restCW(o.caUtils.contentChildrenRoute(), n.useCaseLayout, c, s(n.requestConfig))
            },
            editorials: function(a, r, i) {
                return o.caInterface.api.rest(o.caUtils.contentChildrenRoute(), {
                    contentTypes: n.LINK,
                    offset: r,
                    limit: i,
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    ca_userTypes: a,
                    fields: ["Pid", "Title", "CatalogItemId", "Url", "CatalogItemPid", "DateStart", "images.banner"].join(",")
                }, {
                    response: {
                        formatter: e.get("goModelCaEditorial")
                    },
                    cache: e.get("goMdlCachesSvcStatic")
                })
            },
            commercialSegmentation: function(n) {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS, {
                    ca_deviceTypes: t.getCaDeviceTypes(),
                    includeRelations: o.caTypes.RELATIONS.PRODUCT_DEPENDENCIES,
                    fields: "CommercializationType",
                    pids: n
                }, {
                    cache: e.get("goMdlCachesSvcStatic")
                })
            }
        }
    }
    function Rl(e, t, n, a, r, i, c, s, l, u, d, g) {
        "ngInject";
        var p = d.subscriptionTypes
          , m = o.caTypes.CONTENT_TYPES;
        return {
            getChannelEditorialContents: function(e, t, n) {
                return S(e, t, n).then(h).then(v).then(y)
            },
            getEditorsPickContents: function() {
                return S({}).then(h).then(v).then(y)
            }
        };
        function f(t) {
            return t.hasChildren ? e.when(t) : c.getChannel(t.parentChannelId).then(function(e) {
                return t.parentChannelTitle = e.title,
                t
            })
        }
        function h(e) {
            return i.isLoggedIn && e.some(r.isPresent(p, "catalogItemType")) ? function(e) {
                var n = e.filter(r.isPresent(p, "catalogItemType")).map(function(e) {
                    return r.getProperty(e, "productId")
                });
                return t.getCompatibleIds(n).then(function(t) {
                    var n = t.map(function(e) {
                        return e.subscriptionId
                    });
                    return e.filter(function(e) {
                        return r.isNotPresent(p, "catalogItemType")(e) || r.isPresent(n, "productId")(e)
                    })
                }).catch(function() {
                    return e
                })
            }(e) : e
        }
        function v(t) {
            var a = t.filter(function(e) {
                return !!e.catalogItemPid
            }).map(function(e) {
                return e.catalogItemPid
            }).join(",");
            return a.length ? n.commercialSegmentation(a).get().then(function(n) {
                var a = [];
                return n.forEach(function(e) {
                    t.forEach(function(t) {
                        e.Pid === t.catalogItemPid && (t.commercializationType = e.CommercializationType,
                        t.subscriptions = r.pidsArrayToIdsArray(r.getDeepProperty(e, "Relations.ProductDependenciesPids", []), [m.SUBSCRIPTION]),
                        s.setCommercializationFlags(t),
                        a.push(s.segmentData(t)))
                    })
                }),
                e.all(a).then(function() {
                    return t
                })
            }) : t
        }
        function y(t) {
            var n, a = [];
            return t.forEach(function(e) {
                e.goType === g.goType.VodChannel && (n = c.getChannel(e.productId).then(f).then(function(t) {
                    e.parentChannelId = t.parentChannelId,
                    e.parentChannelTitle = t.parentChannelTitle,
                    e.isCatchup = t.isCatchup,
                    e.isRootCatchup = t.isRootCatchup,
                    e.isRootCatchupChildren = t.isRootCatchupChildren,
                    e.isRoot = t.isRoot,
                    e.isRootChildren = t.isRootChildren
                }).catch(se.noop),
                a.push(n))
            }),
            e.all(a).then(function() {
                return t
            })
        }
        function S(e, t, r) {
            return a.getAsync("RootChannelId").then(function(a) {
                var c = Object.assign({
                    contentPid: o.caUtils.toPid(m.CHANNEL, a),
                    ca_commercialOffer: i.isLoggedIn ? i.profile.commercialOffer : null
                }, e);
                return n.editorials(l.getUserType(), t, r).get(c).then(function(e) {
                    return e.filter(function(e) {
                        var t = e.id
                          , n = e.catalogItemType;
                        return -1 !== t && -1 !== n
                    })
                })
            })
        }
    }
    function Dl(e, t, n, a, r, i, c, s, l) {
        "ngInject";
        return {
            getPagedItems: function(u, d, g, p) {
                return u.isSpecialChannel ? function(e, n, a) {
                    var r = {
                        contentPid: o.caUtils.toPid(o.caTypes.CONTENT_TYPES.CHANNEL, e)
                    };
                    return t.getChannelEditorialContents(r, n, a).then(function(e) {
                        return e.filter(function(e) {
                            var t = e.isAdult;
                            return !t
                        })
                    })
                }(u.id, g, p) : function(t, o, u, d) {
                    var g = t.defaultSortVOD
                      , p = {
                        contentPid: t.pid,
                        ca_commercialOffer: l.isLoggedIn ? l.profile.commercialOffer : null
                    }
                      , m = {
                        px_channel: t.pid
                    };
                    return i.getChannelOrder(g).then(function(e) {
                        return p.orderBy = e || void 0,
                        r.getConfig(o, t.customUxrLayout)
                    }).then(function(a) {
                        var r = t.contentType;
                        return s.isEmptyObject(a) || (Object.assign(m, a.requestParams),
                        Object.assign(p, m)),
                        e.extendFromChannelContentType(p, r),
                        c.getNowInvalidationCacheDatetime(r).then(function(e) {
                            return n.catalogItems(a, u, d).get(Object.assign(p, {
                                cachetime: e
                            }))
                        })
                    }).then(function(e) {
                        return a.segmentData(e.data),
                        e
                    })
                }(u, d, g, p)
            }
        }
    }
    $l.$inject = ["$injector", "goSvcUtils"],
    Rl.$inject = ["$q", "goSvcSubscription", "goMdlHomeSvcCaHome", "goSvcUniapiSettings", "goSvcUtils", "goSvcUserStatus", "goSvcLibrary", "goSvcCommercialSegmentation", "goSvcUser", "goSvcRights", "goMdlHomeCnstHome", "goCnstEnumerated"],
    Dl.$inject = ["goSvcLibrary", "goMdlHomeSvcEditorial", "goMdlHomeSvcCaHome", "goSvcCommercialSegmentation", "goMdlAnalyticsSvcContentWise", "goSvcOrderBy", "goSvcCacheInvalidator", "goSvcUtils", "goSvcUserStatus"];
    var _l = n(45)
      , Ol = n.n(_l)
      , Ul = n(130)
      , kl = n.n(Ul)
      , xl = n(3)
      , jl = n.n(xl)
      , Bl = G.a.imageSets
      , Fl = G.a.goType
      , Vl = o.caTypes.CONTENT_TYPES.CONTENT_LINK
      , Hl = function(e, t) {
        return Wl(e, t ? Bl.placardLandscapeBig : Bl.placardLandscape)
    }
      , Gl = function(e, t) {
        return Wl(e, t ? Bl.placardPortraitBig : Bl.placardPortrait)
    };
    function Wl(e, t) {
        var n = Object(_n.b)("$filter");
        return (0,
        Fe()(n, 1)[0])("goFltrSrcset")(e, t)
    }
    function ql(e) {
        var t = Object(_n.b)("$filter", "$location", "$rootScope")
          , n = Fe()(t, 3)
          , a = n[0]
          , r = n[1]
          , o = n[2]
          , i = a("goFltrDetailsLink")(e)
          , c = e.goType === Fl.Subscription
          , s = e.url
          , l = !c && s && s.indexOf("".concat(r.protocol(), "://").concat(r.host()).concat(V.basePath)) < 0
          , u = {
            onClick: function(t) {
                var n = Object(_n.b)("goMdlPlacardsSvcLink")
                  , a = Fe()(n, 1)[0].open(t, e);
                if (!l) {
                    var c = i.replace("".concat(r.protocol(), "://").concat(r.host()).concat(V.basePath), "");
                    t.preventDefault(),
                    !a && o.$evalAsync(function() {
                        return r.path(c)
                    })
                }
            }
        };
        return "" !== i && (u.href = i,
        u.target = l ? "_blank" : "_self"),
        u
    }
    function Yl() {
        return (Yl = Ma()(Ia.a.mark(function e(t) {
            var n, a, r, i, c, s, l, u, d, g, p, m, f, h, v;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        if (n = Object(_n.b)("goSvcUser", "goSvcRights", "goMdlPlacardsSvcVod", "goSvcUserStatus"),
                        a = Fe()(n, 4),
                        r = a[0],
                        i = a[1],
                        c = a[2],
                        !a[3].isAnonymousLoggedIn) {
                            e.next = 3;
                            break
                        }
                        return e.abrupt("return", null);
                    case 3:
                        return s = o.caUtils.isType(t.pid, Vl) ? t.catalogItemPid : t.pid,
                        e.next = 6,
                        r.getCurrentEpisodesForUsers();
                    case 6:
                        if (l = e.sent,
                        u = l.find(function(e) {
                            var t = e.seriesId
                              , n = e.seasonId;
                            return t === s || n === s
                        })) {
                            e.next = 10;
                            break
                        }
                        return e.abrupt("return", null);
                    case 10:
                        return d = u.episodeId,
                        g = u.seasonId,
                        e.next = 13,
                        Promise.all([i.getRight(o.caUtils.getId(d)), i.getRight(o.caUtils.getId(g)), i.getRight(t)]);
                    case 13:
                        return p = e.sent,
                        m = Fe()(p, 3),
                        f = m[0],
                        h = m[1],
                        v = m[2],
                        e.abrupt("return", f || h || v ? c.getEpisode({
                            productId: o.caUtils.getId(d)
                        }, t) : null);
                    case 19:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function zl(e) {
        var t = Object(_n.b)("$filter")
          , n = Fe()(t, 1)[0];
        return e ? n("translate")("common.episodeNameShort", {
            episode: e.episodeNumber.toLocaleString("es-ES", {
                minimumIntegerDigits: 2,
                useGrouping: !1
            }),
            season: e.seasonNumber.toLocaleString("es-ES", {
                minimumIntegerDigits: 2,
                useGrouping: !1
            })
        }) : ""
    }
    function Ql() {
        return (Ql = Ma()(Ia.a.mark(function e(t) {
            var n, a, r, o, i, c, s, l, u, d, g, p;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return n = Object(_n.b)("$filter", "goSvcRights", "goSvcUserStatus", "goMdlPlacardsSvcPurchase"),
                        a = Fe()(n, 4),
                        r = a[0],
                        o = a[1],
                        i = a[2],
                        c = a[3],
                        s = r("translate"),
                        e.prev = 2,
                        e.next = 5,
                        Promise.all([o.isSubscribable(t), o.isPurchasable(t)]);
                    case 5:
                        if (l = e.sent,
                        u = Fe()(l, 2),
                        d = u[0],
                        g = u[1],
                        !d) {
                            e.next = 13;
                            break
                        }
                        return e.abrupt("return", s("placards.subscribe"));
                    case 13:
                        if (!g) {
                            e.next = 23;
                            break
                        }
                        if (!i.isLoggedIn) {
                            e.next = 21;
                            break
                        }
                        return e.next = 17,
                        c.getMinPricingModelForContent(t.pid);
                    case 17:
                        return p = e.sent,
                        e.abrupt("return", p ? s("placards.trianglePrice", {
                            price: r("goFltrCurrency")(p.value)
                        }) : s("placards.rent"));
                    case 21:
                        if (!i.isAnonymousLoggedIn) {
                            e.next = 23;
                            break
                        }
                        return e.abrupt("return", s("placards.rent"));
                    case 23:
                        e.next = 27;
                        break;
                    case 25:
                        e.prev = 25,
                        e.t0 = e.catch(2);
                    case 27:
                    case "end":
                        return e.stop()
                    }
            }, e, this, [[2, 25]])
        }))).apply(this, arguments)
    }
    function Kl(e) {
        var t = Object(Qn.useState)()
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return function(e) {
                return Yl.apply(this, arguments)
            }(e).then(function(e) {
                return t && r(e)
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function Xl(e) {
        var t = Object(Qn.useState)(!1)
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goMdlPlacardsSvcVod")
          , i = Fe()(o, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && i.isPlayAvailable(e).then(function(e) {
                return t && r(e)
            }).catch(function(e) {
                return t && r(e)
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function Jl(e) {
        var t = Object(Qn.useState)(!1)
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goMdlPlacardsSvcVod")
          , i = Fe()(o, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && i.isResumeAvailable(e).then(function(e) {
                return t && r(e)
            }).catch(function(e) {
                return t && r(e)
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function Zl(e) {
        var t = Object(Qn.useState)(!1)
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goSvcRights")
          , i = Fe()(o, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && i.isSubscribable(e).then(function(e) {
                return t && r(e)
            }).catch(function(e) {
                return t && r(e)
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function eu(e) {
        var t = Object(Qn.useState)("")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && function(e) {
                return Ql.apply(this, arguments)
            }(e).then(function(e) {
                return t && r(e)
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function tu(e) {
        var t = Object(Qn.useState)("")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goMdlPlacardsSvcVod", "goSvcProduct")
          , i = Fe()(o, 2)
          , c = i[0]
          , s = i[1];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && (e.isNetworkCATCHUP ? c.getDistributorInfo(e).then(function() {
                var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).logo;
                return t && r(e)
            }) : s.getLogo(e).then(function(e) {
                return t && r(e)
            })),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function nu(e) {
        var t = Object(Qn.useState)()
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goSvcProduct")
          , i = Fe()(o, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && (e.genrePids && e.genrePids.length ? i.getGenres(e.genrePids).then(function(e) {
                t && r((e || []).map(function(e) {
                    return e.name
                }).join(", "))
            }) : e.genres && r(e.genres.map(function(e) {
                return e.name
            }).join(", "))),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    var au = n(174)
      , ru = n.n(au)
      , ou = {
        yellow: "yellow",
        orange: "orange"
    };
    function iu(e) {
        var t = e.className
          , n = e.color;
        return Kn.a.createElement("div", {
            className: "".concat(t, " ").concat(ru.a.triangle, " ").concat(ru.a[n])
        })
    }
    function cu(e) {
        var t = Object(Qn.useState)("")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goSvcRights")
          , i = Fe()(o, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return Promise.all([i.isSubscribable(e), i.isPurchasable(e)]).then(function(e) {
                var n = Fe()(e, 2)
                  , a = n[0]
                  , o = n[1];
                t && (a ? r(ou.orange) : o && r(ou.yellow))
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function su(e) {
        var t = Object(Qn.useState)("")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , i = Object(Zn.e)("goMdlPlacardsSvcLive")
          , c = Fe()(i, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && c.getChannelLink(o.caUtils.getId(e)).then(function(e) {
                return t && r(e)
            }).catch(),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    var lu = n(19)
      , uu = n.n(lu)
      , du = n(58)
      , gu = n.n(du)
      , pu = n(116)
      , mu = n.n(pu);
    function fu(e) {
        var t = e.className
          , n = e.src
          , a = e.alt
          , r = e.title
          , o = e.srcSet
          , i = e.errorText
          , c = e.loadSpotlightBg
          , s = void 0 === c || c
          , l = e.isPortrait
          , u = void 0 !== l && l
          , d = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter")
        }, [])
          , g = Fe()(d, 1)[0]
          , p = Object(Qn.useMemo)(function() {
            return g("goFltrSpotlight")
        }, []);
        return Kn.a.createElement(mu.a, uu()({
            className: "".concat(t, " ").concat(gu.a.image),
            unloader: i ? Kn.a.createElement("p", {
                className: ra()([gu.a.errorText])
            }, r) : Kn.a.createElement("div", {
                className: ra()([gu.a.error, u && gu.a.errorPortrait])
            }),
            loader: s && Kn.a.createElement("img", {
                className: u ? gu.a.spotlightPortrait : gu.a.spotlight,
                src: p(n, 1, 1, {
                    resize: "CROP"
                })
            })
        }, {
            src: n,
            alt: a,
            title: r,
            srcSet: o
        }))
    }
    var hu = n(50)
      , vu = n.n(hu);
    function yu(e) {
        var t = e.src
          , n = e.className
          , a = e.alt
          , r = e.title
          , o = e.isShadowVisible
          , i = void 0 !== o && o
          , c = e.align
          , s = void 0 === c ? "right" : c
          , l = e.position;
        return Kn.a.createElement(Kn.a.Fragment, null, i && Kn.a.createElement("div", {
            className: vu.a.logoShadow
        }), Kn.a.createElement("div", {
            className: n
        }, Kn.a.createElement("div", {
            className: ra()([vu.a.containerSize, l && vu.a[l]])
        }, Kn.a.createElement("div", {
            className: ra()([vu.a[s], vu.a.container])
        }, Kn.a.createElement(mu.a, uu()({
            className: vu.a.logo
        }, {
            src: t,
            alt: a,
            title: r
        }, {
            unloader: Kn.a.createElement("div", {
                className: vu.a.error
            })
        }))))))
    }
    function Su(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$rootScope")
        })
          , a = Fe()(n, 1)[0]
          , r = t.cover || t.portraitArt
          , o = tu(t)
          , i = cu(t)
          , c = G.a.goEvents.EPISODE_SELECTED;
        return Kn.a.createElement("a", {
            onClick: function() {
                a.$emit(c, {
                    episodeId: t.id,
                    seasonId: t.seasonId,
                    seriesId: t.seriesId
                })
            },
            className: jl.a.placard
        }, Kn.a.createElement("div", {
            className: jl.a.portraitInformation
        }, Kn.a.createElement("h1", {
            className: jl.a.portraitInfoBig
        }, t.name)), Kn.a.createElement(fu, {
            className: jl.a.imagePortrait,
            title: t.name,
            alt: t.name,
            src: r,
            isPortrait: !0
        }), L()(o) && Kn.a.createElement(yu, {
            className: jl.a.logo,
            isShadowVisible: !0,
            src: o
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: i
        }))
    }
    function bu(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter", "$rootScope")
        })
          , a = Fe()(n, 2)
          , r = a[0]
          , o = a[1]
          , i = G.a.goEvents.EPISODE_SELECTED
          , c = t.banner || t.landscapeCover || t.videoFrame
          , s = cu(t)
          , l = tu(t)
          , u = r("translate")("common.episodeNameShortWithDash", {
            episode: t.episodeNumber.toLocaleString("es-ES", {
                minimumIntegerDigits: 2,
                useGrouping: !1
            }),
            season: t.seasonNumber.toLocaleString("es-ES", {
                minimumIntegerDigits: 2,
                useGrouping: !1
            })
        })
          , d = L()(t.banner);
        return Kn.a.createElement("a", {
            onClick: function() {
                o.$emit(i, {
                    episodeId: t.id,
                    seasonId: t.seasonId,
                    seriesId: t.seriesId
                })
            },
            className: jl.a.placard
        }, !d && Kn.a.createElement("div", {
            className: jl.a.lowerPanel
        }, Kn.a.createElement("span", {
            className: jl.a.scheduleTime
        }, u), Kn.a.createElement("span", {
            className: jl.a.scheduleName
        }, t.name)), L()(l) && Kn.a.createElement(yu, {
            className: jl.a.logo,
            src: l
        }), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: t.name,
            alt: t.name,
            src: c
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: s
        }))
    }
    var Eu = n(129)
      , Tu = n.n(Eu);
    function Cu(e) {
        var t = e.className
          , n = e.color
          , a = e.text;
        return Kn.a.createElement("div", {
            className: "".concat(t, " ").concat(Tu.a.triangle)
        }, Kn.a.createElement(iu, {
            color: n
        }), Kn.a.createElement("span", {
            className: "".concat(Tu.a.price, " ").concat(Tu.a[n])
        }, a && Ca()(a)))
    }
    var Pu = n(173)
      , Iu = n.n(Pu)
      , Au = {
        play: "go-glyphicon-play",
        playNow: "go-glyphicon-start-over",
        purchase: "go-glyphicon-ticket",
        info: "go-glyphicon-info",
        subscribe: "go-glyphicon-diamond",
        link: "go-glyphicon-link"
    };
    function Mu(e) {
        var t = e.className
          , n = e.onMouseEnter
          , a = e.onMouseLeave
          , r = e.onClick
          , o = e.type;
        return Kn.a.createElement("span", uu()({
            className: "".concat(t, " ").concat(Iu.a.button)
        }, {
            onMouseEnter: n,
            onMouseLeave: a,
            onClick: r
        }), Kn.a.createElement("i", {
            className: ra()(["go-glyphicon", o, Iu.a[o]])
        }))
    }
    var Nu = n(70)
      , wu = n.n(Nu);
    function Lu(e) {
        var t = e.className
          , n = e.children
          , a = e.waitFor
          , r = e.isLoading
          , o = Object(Qn.useState)(f()(r))
          , i = Fe()(o, 2)
          , c = i[0]
          , s = i[1];
        return Object(Qn.useEffect)(function() {
            s(r || a && a.some(function(e) {
                return f()(e)
            }))
        }, [r, a]),
        Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement("span", {
            className: ra()([t, "loading-wrapper"])
        }, Kn.a.createElement("i", {
            className: ra()([wu.a.loading, wu.a.fade, c && wu.a.shown, "go-glyphicon", "go-glyphicon-loading"])
        })), Kn.a.createElement("div", {
            className: ra()([t, wu.a.fade, !c && wu.a.shown])
        }, n))
    }
    function $u(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter")
        }, [])
          , a = Fe()(n, 1)[0]
          , r = Object(Qn.useMemo)(function() {
            return a("translate")
        }, [])
          , o = cu(t)
          , i = eu(t)
          , c = Object(Qn.useState)(t.title)
          , s = Fe()(c, 2)
          , l = s[0]
          , u = s[1]
          , d = Zl(t);
        function g(e) {
            return function() {
                return u(r(e))
            }
        }
        function p() {
            return function() {
                return u(t.title)
            }
        }
        return Kn.a.createElement("div", {
            className: jl.a.buttons
        }, Kn.a.createElement("h1", {
            className: jl.a.title
        }, l), Kn.a.createElement(Cu, {
            className: jl.a.trianglePrice,
            color: o,
            text: i
        }), Kn.a.createElement(Lu, {
            className: jl.a.loading,
            waitFor: [d]
        }, Kn.a.createElement("div", {
            className: jl.a.buttonsWrapper
        }, d && Kn.a.createElement(Mu, {
            type: Au.subscribe,
            onMouseEnter: g("placards.subscribeContent"),
            onMouseLeave: p(),
            className: jl.a.button
        }), Kn.a.createElement(Mu, {
            type: Au.info,
            onMouseEnter: g("placards.goToDetails"),
            onMouseLeave: p(),
            className: jl.a.button
        }))))
    }
    function Ru(e) {
        var t = e.content
          , n = t.isBig ? t.bannerBig : t.banner
          , a = Hl(n, t.isBig)
          , r = Object(Qn.useMemo)(function() {
            return ql(t)
        }, [t])
          , o = cu(t)
          , i = Object(Qn.useState)(!1)
          , c = Fe()(i, 2)
          , s = c[0]
          , l = c[1];
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                l(!0)
            },
            className: jl.a.placard
        }, r), s && Kn.a.createElement($u, {
            content: t
        }), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: t.title,
            alt: t.title,
            src: n,
            srcSet: a
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: o
        }))
    }
    var Du = n(81)
      , _u = n.n(Du);
    function Ou(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter")
        }, [])
          , a = Fe()(n, 1)[0]
          , r = Object(Qn.useMemo)(function() {
            return a("translate")
        }, [])
          , o = function(e) {
            var t = Object(Qn.useState)(!1)
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goSvcThirdParty")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                return e && r(!!i.getPcExternalUrl(e.externalUrls))
            }, [e]),
            a
        }(t)
          , i = Object(Qn.useState)(t.name)
          , c = Fe()(i, 2)
          , s = c[0]
          , l = c[1];
        function u(e) {
            return function() {
                return l(r(e))
            }
        }
        function d() {
            return function() {
                return l(t.name)
            }
        }
        return Kn.a.createElement("div", {
            className: jl.a.buttons
        }, Kn.a.createElement("h1", {
            className: jl.a.title
        }, s), Kn.a.createElement(Lu, {
            className: jl.a.loading,
            waitFor: [o]
        }, Kn.a.createElement("div", {
            className: jl.a.buttonsWrapper
        }, o && Kn.a.createElement(Mu, {
            type: Au.link,
            onMouseEnter: u("placards.goToChannel"),
            onMouseLeave: d(),
            className: jl.a.button
        }), !o && Kn.a.createElement(Mu, {
            type: Au.info,
            onMouseEnter: u("placards.goToDetails"),
            onMouseLeave: d(),
            className: jl.a.button
        }))))
    }
    function Uu(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("goSvcLibrary", "$location", "goCnstEnumerated")
        }, [])
          , a = Fe()(n, 3)
          , r = a[0]
          , o = a[1]
          , i = a[2]
          , c = Object(Qn.useMemo)(function() {
            return ql(t)
        }, [t])
          , s = Object(Qn.useState)(!1)
          , l = Fe()(s, 2)
          , u = l[0]
          , d = l[1]
          , g = Object(Qn.useState)()
          , p = Fe()(g, 2)
          , m = p[0]
          , f = p[1]
          , h = o.path() !== "/".concat(i.routes.catchup);
        return Object(Qn.useEffect)(function() {
            f(h ? {
                className: jl.a.image,
                src: t.logo || t.banner,
                srcSet: Hl(t.logo || t.banner, t.isBig)
            } : {
                className: _u.a.image,
                src: t.bannerCatchup,
                errorText: !0
            }),
            Ma()(Ia.a.mark(function e() {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2,
                            r.getChannel(t.productId);
                        case 2:
                            t.externalUrls = e.sent.externalUrls;
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            }))()
        }, []),
        Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                d(!0)
            },
            className: ra()([jl.a.placard, _u.a.placardChannel, !h && _u.a.bgkDark])
        }, c), u && Kn.a.createElement(Ou, {
            content: t
        }), Kn.a.createElement("div", {
            className: _u.a.wrap
        }, Kn.a.createElement(fu, uu()({
            title: t.title,
            alt: t.title
        }, m, {
            loadSpotlightBg: !1
        }))))
    }
    function ku(e) {
        var t = e.className
          , n = e.onMouseEnter
          , a = e.onMouseLeave
          , r = e.logoSrc
          , o = e.channelLink
          , i = Object(_n.b)("$location", "$rootScope")
          , c = Fe()(i, 2)
          , s = c[0]
          , l = c[1];
        return Kn.a.createElement(Kn.a.Fragment, null, o && Kn.a.createElement("div", uu()({
            onClick: function(e) {
                e.preventDefault(),
                e.stopPropagation(),
                l.$evalAsync(function() {
                    return s.path(o)
                })
            }
        }, {
            onMouseEnter: n,
            onMouseLeave: a
        }), Kn.a.createElement(yu, {
            className: t,
            src: r
        })))
    }
    function xu() {
        var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).liveChannelId
          , t = Object(Qn.useState)("")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("goSvcLiveChannels")
          , i = Fe()(o, 1)[0];
        return Object(Qn.useEffect)(function() {
            var t = !0;
            return e && i.getChannelById(e).then(function(e) {
                var n = e.icon
                  , a = e.logo;
                return t && r(n || a)
            }),
            function() {
                t = !1
            }
        }, [e]),
        a
    }
    function ju(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("goMdlPlacardsSvcLive", "$filter")
        }, [])
          , a = Fe()(n, 2)
          , r = a[0]
          , o = a[1]
          , i = Object(Qn.useMemo)(function() {
            return o("translate")
        })
          , c = Object(Qn.useState)(t.name)
          , s = Fe()(c, 2)
          , l = s[0]
          , u = s[1]
          , d = Object(Qn.useState)(t.canUpgrade || !1)
          , g = Fe()(d, 1)[0]
          , p = function(e) {
            var t = Object(Qn.useState)(!1)
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goMdlPlacardsSvcLive")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                var t = !0;
                return e && i.isPlayAvailable(e).then(function(e) {
                    return t && r(e)
                }).catch(function(e) {
                    return t && r(e)
                }),
                function() {
                    t = !1
                }
            }, [e]),
            a
        }(t)
          , m = function(e) {
            var t = Object(Qn.useState)(!1)
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goMdlPlacardsSvcLive")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                var t = !0;
                return e && i.isRestartAvailable(e).then(function(e) {
                    return t && r(e)
                }).catch(function() {
                    return t && r(!1)
                }),
                function() {
                    t = !1
                }
            }, [e]),
            a
        }(t)
          , f = xu(t)
          , h = function() {
            var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).liveChannelId
              , t = Object(Qn.useState)()
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goSvcLiveChannels")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                var t = !0;
                return e ? i.getChannelById(e).then(function(e) {
                    var n = e.l7dProviderId;
                    return t && r(n)
                }) : t && r(""),
                function() {
                    t = !1
                }
            }, [e]),
            a
        }(t)
          , v = su(h);
        function y(e) {
            return function() {
                return u(i(e))
            }
        }
        function S() {
            return function() {
                return u(t.name)
            }
        }
        return Kn.a.createElement("div", {
            className: jl.a.buttons
        }, L()(h) && Kn.a.createElement("h1", {
            className: ra()([jl.a.title, h && jl.a.titleLogo])
        }, l), g && Kn.a.createElement(Cu, {
            className: jl.a.trianglePrice,
            color: ou.orange,
            text: i("placards.subscribe")
        }), v && Kn.a.createElement(ku, {
            className: "".concat(jl.a.logo, " ").concat(jl.a.logoWithLink),
            onMouseEnter: y("placards.goToChannel"),
            onMouseLeave: S(),
            channelLink: v,
            logoSrc: f
        }), Kn.a.createElement(Lu, {
            className: jl.a.loading,
            waitFor: [m, p, g]
        }, Kn.a.createElement("div", {
            className: jl.a.buttonsWrapper
        }, m && Kn.a.createElement(Mu, {
            type: Au.playNow,
            onClick: function(e) {
                e.preventDefault(),
                e.stopPropagation(),
                r.playFromBeginning(t)
            },
            onMouseEnter: y("placards.playFromBeginning"),
            onMouseLeave: S(),
            className: jl.a.button
        }), p && Kn.a.createElement(Mu, {
            type: Au.play,
            onClick: function(e) {
                e.preventDefault(),
                e.stopPropagation(),
                r.play(t)
            },
            onMouseEnter: y(t.isAirProgram ? "placards.playLive" : "placards.playChannel"),
            onMouseLeave: S(),
            className: jl.a.button
        }), g && Kn.a.createElement(Mu, {
            type: Au.subscribe,
            onMouseEnter: y("placards.subscribeContent"),
            onMouseLeave: S(),
            className: jl.a.button
        }), Kn.a.createElement(Mu, {
            type: Au.info,
            onMouseEnter: y("placards.goToDetails"),
            onMouseLeave: S(),
            className: jl.a.button
        }))))
    }
    function Bu(e) {
        var t = e.content
          , n = ql(t)
          , a = t.isBig ? t.bannerBig : t.banner
          , r = Hl(a, t.isBig)
          , o = Object(Qn.useState)(!1)
          , i = Fe()(o, 2)
          , c = i[0]
          , s = i[1]
          , l = cu(t);
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                s(!0)
            },
            className: jl.a.placard
        }, n), c && Kn.a.createElement(ju, {
            content: t
        }), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: t.name,
            alt: t.name,
            src: a,
            srcSet: r
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: l
        }))
    }
    var Fu = n(172)
      , Vu = n.n(Fu);
    function Hu(e) {
        var t = e.className
          , n = e.progress;
        return Kn.a.createElement("div", {
            className: "".concat(t, " ").concat(Vu.a.background)
        }, Kn.a.createElement("div", {
            className: Vu.a.progress,
            style: {
                width: "".concat(n, "%")
            }
        }))
    }
    function Gu(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter")
        }, [])
          , a = Fe()(n, 1)[0]
          , r = t.isAirProgram ? t.videoFrame : t.videoFrameUpcoming
          , o = Hl(r, t.isBig)
          , i = ql(t)
          , c = Object(Qn.useState)(!1)
          , s = Fe()(c, 2)
          , l = s[0]
          , u = s[1]
          , d = function(e) {
            var t = Object(Qn.useState)(0)
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1];
            return Object(Qn.useMemo)(function() {
                if (e && e.isAirProgram) {
                    var t = e.endTime - e.startTime
                      , n = Date.now() / 1e3 - e.startTime;
                    r(100 * n / t)
                }
            }, [e]),
            a
        }(t)
          , g = xu(t)
          , p = Object(Qn.useState)(t.name || a("translate")("common.notAvailableText"))
          , m = Fe()(p, 1)[0]
          , f = cu(t);
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                u(!0)
            },
            className: jl.a.placard
        }, i), l && Kn.a.createElement(ju, {
            content: t
        }), Kn.a.createElement("div", {
            className: jl.a.lowerPanel
        }, Kn.a.createElement("span", {
            className: jl.a.datePanel
        }, Kn.a.createElement(La, {
            className: jl.a.recordIcon,
            scheduleId: t.id,
            epgProgramId: t.epgProgramId,
            liveChannelId: t.liveChannelId,
            startTime: t.startTime
        }), Kn.a.createElement("time", {
            className: jl.a.scheduleTime
        }, "".concat(a("goFltrTimeToPeriod")(t), ", ").concat(a("goFltrDateRange")(t)))), Kn.a.createElement("span", {
            className: jl.a.scheduleName
        }, t.name), t.isAirProgram && Kn.a.createElement(Hu, {
            className: jl.a.progressBar,
            progress: d
        })), L()(g) && Kn.a.createElement(yu, {
            className: jl.a.logo,
            isShadowVisible: !0,
            src: g
        }), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: m,
            alt: m,
            src: r,
            srcSet: o
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: f
        }))
    }
    function Wu(e) {
        var t, n = e.content, a = Object(Qn.useMemo)(function() {
            return Object(_n.b)("goMdlPlacardsSvcVod", "$filter", "goMdlPlayerSvcPreload", "goCnstEnumerated", "$rootScope", "ngSpMainCnst", "goMdlPlayerSvcStatus")
        }, []), r = Fe()(a, 7), o = r[0], i = r[1], c = r[2], s = r[3], l = r[4], u = r[5], d = r[6], g = s.goType.Episode, p = Object(Qn.useState)(n), m = Fe()(p, 2), f = m[0], h = m[1], v = Object(Qn.useMemo)(function() {
            return i("translate")
        }, []), y = function(e) {
            var t = Object(Qn.useState)()
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goMdlPlacardsSvcVod")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                var t = !0;
                return (e.goType === G.a.goType.Episode ? i.getEpisode(e) : i.getMovie(e)).then(function(e) {
                    return t && r(e)
                }),
                function() {
                    t = !1
                }
            }, [e]),
            a
        }(f), S = cu(n), b = Zl(n), E = function(e) {
            var t = Object(Qn.useState)(!1)
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goSvcRights")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                var t = !0;
                return e && i.isPurchasable(e).then(function(e) {
                    return t && r(e)
                }).catch(function(e) {
                    return t && r(e)
                }),
                function() {
                    t = !1
                }
            }, [e]),
            a
        }(n), T = eu(n), C = Xl(y), P = Jl(y), I = function(e) {
            var t = Object(Qn.useState)(!1)
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goMdlPlacardsSvcVod")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                e && r(i.isPlayTrailerAvailable(e))
            }, [e]),
            a
        }(y), A = tu(n), M = function(e) {
            var t = Object(Qn.useState)()
              , n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = Object(Zn.e)("goMdlPlacardsSvcVod")
              , i = Fe()(o, 1)[0];
            return Object(Qn.useEffect)(function() {
                var t = !0;
                return e && i.getDistributorInfo(e).then(function(e) {
                    var n = e.l7dProviderId;
                    return t && r(n || "")
                }).catch(function() {
                    return t && r("")
                }),
                function() {
                    t = !1
                }
            }, [e]),
            a
        }(n), N = su(M), w = Object(Qn.useState)(n.name), $ = Fe()(w, 2), R = $[0], D = $[1];
        function _() {
            t = l.$on(u.EVENTS.DESTROYED, function() {
                d.get("product").id === n.productId && (n.goType === g ? o.getEpisode : o.getMovie)(n).then(function(e) {
                    h(e)
                }),
                t()
            })
        }
        function O() {
            return (O = Ma()(Ia.a.mark(function e(t) {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            t.preventDefault(),
                            t.stopPropagation(),
                            o.play(y),
                            _();
                        case 4:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            }))).apply(this, arguments)
        }
        function U() {
            return (U = Ma()(Ia.a.mark(function e(t) {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            t.preventDefault(),
                            t.stopPropagation(),
                            o.playTrailer(y);
                        case 3:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            }))).apply(this, arguments)
        }
        function k() {
            return (k = Ma()(Ia.a.mark(function e(t) {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            t.preventDefault(),
                            t.stopPropagation(),
                            o.play(y),
                            _();
                        case 4:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            }))).apply(this, arguments)
        }
        function x() {
            return (x = Ma()(Ia.a.mark(function e(t) {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            t.preventDefault(),
                            t.stopPropagation(),
                            o.resume(y),
                            _();
                        case 4:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            }))).apply(this, arguments)
        }
        function j(e) {
            return function() {
                return D(v(e))
            }
        }
        function B() {
            return function() {
                return D(n.name)
            }
        }
        return Object(Qn.useEffect)(function() {
            return C && c.isSupported(y) && c.vod(y),
            function() {
                t && t()
            }
        }, [C, y]),
        Object(Qn.useEffect)(function() {
            h(n)
        }, [n]),
        Kn.a.createElement("div", {
            className: jl.a.buttons
        }, L()(M) && Kn.a.createElement("h1", {
            className: ra()([jl.a.title, M && jl.a.titleLogo])
        }, R), Kn.a.createElement(Cu, {
            className: jl.a.trianglePrice,
            color: S,
            text: T
        }), N && Kn.a.createElement(ku, {
            className: "".concat(jl.a.logo, " ").concat(jl.a.logoWithLink),
            onMouseEnter: j("placards.goToChannel"),
            onMouseLeave: B(),
            channelLink: N,
            logoSrc: A
        }), Kn.a.createElement(Lu, {
            className: jl.a.loading,
            waitFor: [b, E, C, P, I]
        }, Kn.a.createElement("div", {
            className: jl.a.buttonsWrapper
        }, P && Kn.a.createElement(Mu, {
            type: Au.playNow,
            onClick: function(e) {
                return O.apply(this, arguments)
            },
            onMouseEnter: j("placards.playFromBeginning"),
            onMouseLeave: B(),
            className: jl.a.button
        }), C && Kn.a.createElement(Mu, {
            type: Au.play,
            onClick: function(e) {
                return k.apply(this, arguments)
            },
            onMouseEnter: j("placards.playVod"),
            onMouseLeave: B(),
            className: jl.a.button
        }), P && Kn.a.createElement(Mu, {
            type: Au.play,
            onClick: function(e) {
                return x.apply(this, arguments)
            },
            onMouseEnter: j("placards.resumeVod"),
            onMouseLeave: B(),
            className: jl.a.button
        }), I && Kn.a.createElement(Mu, {
            type: Au.play,
            onClick: function(e) {
                return U.apply(this, arguments)
            },
            onMouseEnter: j("placards.playTrailer"),
            onMouseLeave: B(),
            className: jl.a.button
        }), E && Kn.a.createElement(Mu, {
            type: Au.purchase,
            onMouseEnter: j("placards.rentContent"),
            onMouseLeave: B(),
            className: jl.a.button
        }), b && Kn.a.createElement(Mu, {
            type: Au.subscribe,
            onMouseEnter: j("placards.subscribeContent"),
            onMouseLeave: B(),
            className: jl.a.button
        }), Kn.a.createElement(Mu, {
            type: Au.info,
            onMouseEnter: j("placards.goToDetails"),
            onMouseLeave: B(),
            className: jl.a.button
        }))))
    }
    function qu(e) {
        var t = e.content
          , n = t.isBig ? t.bannerBig || t.landscapeCoverBig || t.videoFrameBig : t.banner || t.landscapeCover || t.videoFrame
          , a = Hl(n, t.isBig)
          , r = function(e) {
            var t = Object(_n.b)("$filter")
              , n = Fe()(t, 1)[0];
            return e.isNetworkCATCHUP && e.releaseDate > 0 ? n("goFltrEmitted")(e.releaseDate) : void 0
        }(t)
          , o = Object(Qn.useMemo)(function() {
            return ql(t)
        }, [t])
          , i = cu(t)
          , c = L()(t.banner)
          , s = Object(Qn.useState)(!1)
          , l = Fe()(s, 2)
          , u = l[0]
          , d = l[1]
          , g = tu(t);
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                d(!0)
            },
            className: jl.a.placard
        }, o), u && Kn.a.createElement(Wu, {
            content: t
        }), !c && Kn.a.createElement("div", {
            className: jl.a.lowerPanel
        }, r && Kn.a.createElement("time", {
            className: jl.a.scheduleTime
        }, r), Kn.a.createElement("span", {
            className: jl.a.scheduleName
        }, t.name)), g && Kn.a.createElement(yu, {
            className: jl.a.logo,
            isShadowVisible: !0,
            src: g
        }), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: t.name,
            alt: t.name,
            src: n,
            srcSet: a
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: i
        }))
    }
    function Yu(e) {
        var t = e.content
          , n = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter")
        }, [])
          , a = Fe()(n, 1)[0]
          , r = t.cover || t.portraitArt
          , o = Gl(r, t.isBig)
          , i = ql(t)
          , c = cu(t)
          , s = Object(Qn.useState)(!1)
          , l = Fe()(s, 2)
          , u = l[0]
          , d = l[1]
          , g = tu(t)
          , p = nu(t);
        function m() {
            return (m = Ma()(Ia.a.mark(function e() {
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            d(!0);
                        case 1:
                        case "end":
                            return e.stop()
                        }
                }, e, this)
            }))).apply(this, arguments)
        }
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                return m.apply(this, arguments)
            },
            className: jl.a.placard
        }, i), u && Kn.a.createElement(Wu, {
            content: t
        }), Kn.a.createElement("div", {
            className: jl.a.portraitInformation
        }, Kn.a.createElement("h1", {
            className: jl.a.portraitInfoBig
        }, t.name), Kn.a.createElement("h2", {
            className: jl.a.portraitInfoSmall
        }, a("goFltrDuration")(t.duration, !0)), p && Kn.a.createElement("h2", {
            className: jl.a.portraitInfoSmall
        }, p)), Kn.a.createElement(fu, {
            className: jl.a.imagePortrait,
            title: t.name,
            alt: t.name,
            src: r,
            srcSet: o,
            isPortrait: !0
        }), g && Kn.a.createElement(yu, {
            className: jl.a.logo,
            isShadowVisible: !0,
            src: g
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: c
        }))
    }
    function zu(e) {
        var t, n = e.content, a = Object(Qn.useState)(n.name), r = Fe()(a, 2), o = r[0], i = r[1], c = n.isBig ? n.bannerBig : n.banner, s = Hl(c, n.isBig), l = ql(n), u = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter")
        }, []), d = Fe()(u, 1)[0];
        return Kn.a.createElement("a", uu()({
            className: jl.a.placard
        }, l), Kn.a.createElement("div", {
            className: jl.a.buttons
        }, Kn.a.createElement("div", {
            className: jl.a.buttonsWrapper
        }, Kn.a.createElement("h1", {
            className: jl.a.title
        }, o), Kn.a.createElement(Mu, {
            type: Au.link,
            onMouseEnter: (t = "placards.goToLink",
            function() {
                return i(d("translate")(t))
            }
            ),
            onMouseLeave: function() {
                return i(n.name)
            },
            className: jl.a.button
        }))), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: n.name,
            alt: n.name,
            src: c,
            srcSet: s
        }))
    }
    function Qu(e) {
        var t, n = e.content, a = Object(Qn.useMemo)(function() {
            return Object(_n.b)("$filter", "goMdlPlacardsSvcVod", "goMdlPlayerSvcPreload", "$rootScope", "ngSpMainCnst", "goMdlPlayerSvcStatus", "goMdlDetailsSvcSeries")
        }, []), r = Fe()(a, 7), o = r[0], i = r[1], c = r[2], s = r[3], l = r[4], u = r[5], d = r[6], g = Object(Qn.useState)(n), p = Fe()(g, 2), m = p[0], f = p[1], h = Kl(m), v = Xl(h), y = Jl(h), S = Zl(n), b = cu(n), E = eu(n), T = Object(Qn.useState)(n.name), C = Fe()(T, 2), P = C[0], I = C[1];
        function A() {
            t = s.$on(l.EVENTS.DESTROYED, function() {
                var e = u.get("product");
                [e.id, e.seasonId, e.seriesId].includes(n.productId) && d.getSerie(n.pid).then(function(e) {
                    f(e)
                }),
                t()
            })
        }
        function M(e) {
            return function() {
                return I(o("translate")(e))
            }
        }
        function N() {
            return function() {
                return I(n.name)
            }
        }
        function w(e) {
            e.preventDefault(),
            e.stopPropagation(),
            i.play(h),
            A()
        }
        return Object(Qn.useEffect)(function() {
            return h && c.isSupported(h) && c.vod(h),
            function() {
                t && t()
            }
        }, [h]),
        Object(Qn.useEffect)(function() {
            f(n)
        }, [n]),
        Kn.a.createElement("div", {
            className: jl.a.buttons
        }, Kn.a.createElement("h1", {
            className: jl.a.title
        }, P), Kn.a.createElement(Cu, {
            className: jl.a.trianglePrice,
            color: b,
            text: E
        }), Kn.a.createElement(Lu, {
            className: jl.a.loading,
            waitFor: [h, v, y, S]
        }, Kn.a.createElement("div", {
            className: jl.a.buttonsWrapper
        }, S && Kn.a.createElement(Mu, {
            type: Au.subscribe,
            onMouseEnter: function() {
                return M("placards.subscribeContent")
            },
            onMouseLeave: N(),
            className: jl.a.button
        }), y && Kn.a.createElement(Mu, {
            type: Au.playNow,
            onMouseEnter: function() {
                var e = o("translate")("placards.playFromBeginning");
                I("".concat(e, " ").concat(zl(h)))
            },
            onMouseLeave: N(),
            onClick: w,
            className: jl.a.button
        }), v && Kn.a.createElement(Mu, {
            type: Au.play,
            onMouseEnter: function() {
                var e = o("translate")("placards.playVod");
                I("".concat(e, " ").concat(zl(h)))
            },
            onMouseLeave: N(),
            onClick: w,
            className: jl.a.button
        }), y && Kn.a.createElement(Mu, {
            type: Au.play,
            onMouseEnter: function() {
                var e = o("translate")("placards.resumeVod");
                I("".concat(e, " ").concat(zl(h)))
            },
            onMouseLeave: N(),
            onClick: function(e) {
                e.preventDefault(),
                e.stopPropagation(),
                i.resume(h),
                A()
            },
            className: jl.a.button
        }), Kn.a.createElement(Mu, {
            type: Au.info,
            onMouseEnter: M("placards.goToDetails"),
            onMouseLeave: N(),
            className: jl.a.button
        }))))
    }
    function Ku(e) {
        var t = e.content
          , n = t.isBig ? t.bannerBig || t.landscapeCoverBig || t.videoFrameBig : t.banner || t.landscapeCover || t.videoFrame
          , a = Hl(n, t.isBig)
          , r = tu(t)
          , o = cu(t)
          , i = Object(Qn.useState)(!1)
          , c = Fe()(i, 2)
          , s = c[0]
          , l = c[1]
          , u = Object(Qn.useMemo)(function() {
            return ql(t)
        }, []);
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                l(!0)
            },
            className: jl.a.placard
        }, u), s && Kn.a.createElement(Qu, {
            content: t
        }), gt()(t.banner) && Kn.a.createElement("div", {
            className: jl.a.lowerPanel
        }, Kn.a.createElement("span", {
            className: jl.a.scheduleName
        }, t.name)), r && Kn.a.createElement(yu, {
            className: jl.a.logo,
            isShadowVisible: !0,
            src: r
        }), Kn.a.createElement(fu, {
            className: jl.a.image,
            title: t.name,
            alt: t.name,
            src: n,
            srcSet: a
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: o
        }))
    }
    function Xu(e) {
        var t = e.content
          , n = Object(Qn.useState)(!1)
          , a = Fe()(n, 2)
          , r = a[0]
          , o = a[1]
          , i = t.cover || t.portraitArt
          , c = Gl(i, t.isBig)
          , s = Object(Qn.useMemo)(function() {
            return ql(t)
        }, [])
          , l = cu(t)
          , u = tu(t)
          , d = nu(t);
        return Kn.a.createElement("a", uu()({
            onMouseEnter: function() {
                o(!0)
            },
            className: jl.a.placard
        }, s), r && Kn.a.createElement(Qu, {
            content: t
        }), Kn.a.createElement("div", {
            className: jl.a.portraitInformation
        }, Kn.a.createElement("h1", {
            className: jl.a.portraitInfoBig
        }, t.name), d && Kn.a.createElement("h2", {
            className: jl.a.portraitInfoSmall
        }, d)), Kn.a.createElement(fu, {
            className: jl.a.imagePortrait,
            title: t.name,
            alt: t.name,
            src: i,
            srcSet: c,
            isPortrait: !0
        }), u && Kn.a.createElement(yu, {
            className: jl.a.logo,
            isShadowVisible: !0,
            src: u
        }), Kn.a.createElement(iu, {
            className: jl.a.triangle,
            color: l
        }))
    }
    function Ju(e) {
        var t = e.content
          , n = e.isEditorial
          , a = Object(Qn.useMemo)(function() {
            return Object(_n.b)("goSvcUtils")
        }, [])
          , r = Fe()(a, 1)[0]
          , i = G.a.goType
          , c = i.Movie
          , s = i.VodChannel
          , l = i.Serie
          , u = i.Season
          , d = i.Episode
          , g = [c, d]
          , p = o.caTypes.CONTENT_TYPES;
        function m() {
            return t.goType === d && o.caUtils.isType(t.pid, p.EPISODE)
        }
        function f() {
            var e = L()(t.landscapeCover)
              , n = L()(t.videoFrame)
              , a = L()(t.banner);
            return m() && (e || n || a)
        }
        function h() {
            var e = r.isNotAiring(t)
              , n = L()(t.banner);
            return o.caUtils.isType(t.pid, p.LIVE_SCHEDULE) && n && e
        }
        function v() {
            return g.indexOf(t.goType) >= 0 && !m()
        }
        function y() {
            var e = v()
              , n = L()(t.landscapeCover)
              , a = L()(t.videoFrame)
              , r = L()(t.portraitArt)
              , o = L()(t.cover)
              , i = L()(t.banner);
            return e && (n || a || !(n || a || r || o) || i)
        }
        function S(e) {
            return [l, u].indexOf(e.goType) >= 0
        }
        function b() {
            var e = L()(t.landscapeCover)
              , n = L()(t.videoFrame)
              , a = L()(t.banner);
            return S(t) && (e || n || a)
        }
        return Kn.a.createElement("div", {
            onClick: function() {
                return na(t.analyticsData)
            },
            className: ra()([kl.a.main, n && kl.a.bkgDark])
        }, Kn.a.createElement("div", {
            className: kl.a.placard
        }, function() {
            if (!t.__preloaded__) {
                if (m() && !f())
                    return Kn.a.createElement(Su, {
                        content: t
                    });
                if (f())
                    return Kn.a.createElement(bu, {
                        content: t
                    });
                if (a = o.caUtils.isType(t.pid, p.SUBSCRIPTION),
                r = L()(t.catalogItemPid) && o.caUtils.isType(t.catalogItemPid, p.SUBSCRIPTION),
                a || r)
                    return Kn.a.createElement(Ru, {
                        content: t
                    });
                if (t.goType === s)
                    return Kn.a.createElement(Uu, {
                        content: t
                    });
                if (e = o.caUtils.isType(t.pid, p.CONTENT_LINK),
                n = L()(t.catalogItemPid) && o.caUtils.isType(t.catalogItemPid, p.LIVE_CHANNEL),
                e && n || h())
                    return Kn.a.createElement(Bu, {
                        content: t
                    });
                if (o.caUtils.isType(t.pid, p.LIVE_SCHEDULE) && !h())
                    return Kn.a.createElement(Gu, {
                        content: t
                    });
                if (y())
                    return Kn.a.createElement(qu, {
                        content: t
                    });
                if (v() && !y())
                    return Kn.a.createElement(Yu, {
                        content: t
                    });
                if (function() {
                    var e = o.caUtils.isType(t.pid, p.CONTENT_LINK)
                      , n = !t.catalogItemPid;
                    return e && n
                }())
                    return Kn.a.createElement(zu, {
                        content: t
                    });
                if (b())
                    return Kn.a.createElement(Ku, {
                        content: t
                    });
                if (S(t) && !b())
                    return Kn.a.createElement(Xu, {
                        content: t
                    })
            }
            var e, n, a, r
        }()))
    }
    var Zu = r.a.module("goMdlHome", []).component("goMdlHomeCmpEditorsPick", Object(_n.a)(function() {
        var e = Object(Zn.c)()
          , t = Object(Zn.e)("goMdlHomeSvcEditorial", "$filter")
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Qn.useMemo)(function() {
            return r("translate")
        })
          , i = Ll.a.editorial.contents
          , c = Object(Qn.useState)([])
          , s = Fe()(c, 2)
          , l = s[0]
          , u = s[1]
          , d = Object(Qn.useState)()
          , g = Fe()(d, 2)
          , p = g[0]
          , m = g[1]
          , f = Object(Qn.useState)(!1)
          , h = Fe()(f, 2)
          , v = h[0]
          , y = h[1];
        function S() {
            return (S = Ma()(Ia.a.mark(function e() {
                var t;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.prev = 0,
                            e.next = 3,
                            a.getEditorsPickContents();
                        case 3:
                            (t = (t = e.sent).slice(0, i)).forEach(function(e, t) {
                                e.analyticsData = {
                                    name: "home::editorial",
                                    data: {
                                        CATALOGITEMID: e.productId,
                                        CATALOGITEMTYPE: e.catalogItemType,
                                        URL: e.url,
                                        CATALOGITEMPOSITION: t
                                    }
                                }
                            }),
                            m(Object.assign(t[0], {
                                isBig: !0
                            })),
                            u(t.splice(1)),
                            e.next = 13;
                            break;
                        case 10:
                            e.prev = 10,
                            e.t0 = e.catch(0),
                            y(!0);
                        case 13:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[0, 10]])
            }))).apply(this, arguments)
        }
        return Object(Qn.useEffect)(function() {
            !function() {
                S.apply(this, arguments)
            }()
        }, [e]),
        Kn.a.createElement("section", {
            className: Ol.a.main
        }, v && Kn.a.createElement("div", {
            className: Ol.a.error
        }, Kn.a.createElement("h1", {
            className: ra()(Ol.a.errorText, Ol.a.title)
        }, o("home.error.title")), Kn.a.createElement("h2", {
            className: ra()(Ol.a.errorText, Ol.a.errorSubtitle)
        }, o("home.error.subtitle"))), !v && Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement("div", {
            className: Ol.a.editorialBig
        }, p && Kn.a.createElement(Ju, {
            isEditorial: !0,
            content: p
        })), Kn.a.createElement("div", {
            className: Ol.a.editorialSmall
        }, l.map(function(e) {
            return Kn.a.createElement("div", {
                key: e.pid,
                className: Ol.a.placardSmall
            }, Kn.a.createElement(Ju, {
                isEditorial: !0,
                content: e
            }))
        }))))
    })).component("goMdlHomeCmpHome", Nl).constant("goMdlHomeCnstHome", Ll.a).factory("goMdlHomeSvcCaHome", $l).factory("goMdlHomeSvcEditorial", Rl).factory("goMdlHomeSvcHome", Dl).config(Ml).name
      , ed = n(49)
      , td = n.n(ed);
    var nd = n(48)
      , ad = n.n(nd);
    n(500);
    var rd = n(280)
      , od = n.n(rd);
    cd.$inject = ["$rootScope", "$scope", "$location", "goSvcAutoscroll", "goSvcFeature", "goSvcCookies", "goCnstEnumerated"];
    var id = {
        template: od.a,
        controller: cd
    };
    function cd(e, t, n, a, r, o, i) {
        "ngInject";
        var c, s = this;
        s.$onInit = function() {
            s.isHeaderNavigable = !0,
            s.isAndroid = r.os.mobile.android,
            t.$watch(a.isEnabled, function(e) {
                s.enableAutoscroll = e
            }),
            c = e.$on(i.goEvents.NAVIGABLE_HEADER, function(e, t) {
                s.isHeaderNavigable = t
            })
        }
        ,
        s.$onDestroy = function() {
            c()
        }
    }
    var sd = n(279)
      , ld = {
        template: n.n(sd).a,
        controller: ud
    };
    function ud(e) {
        var t = this;
        t.$onInit = function() {
            t.domain = e.absUrl()
        }
    }
    ud.$inject = ["$location"];
    var dd = n(29)
      , gd = n.n(dd)
      , pd = n(35)
      , md = n.n(pd)
      , fd = n(171)
      , hd = n.n(fd);
    function vd(e) {
        var t, n = e.profileID, a = Object(Zn.e)("$filter", "$location", "$rootScope", "goSvcWebStorage", "goMdlCachesSvcBackUrl", "goCnstEnumerated"), r = Fe()(a, 6), o = r[0], i = r[1], c = r[2], s = r[3], l = r[4], u = r[5], d = Object(Zn.b)(), g = Object(Zn.c)(), p = Object(Qn.useState)(!1), m = Fe()(p, 2), f = m[0], h = m[1], v = Object(Qn.useState)(!1), y = Fe()(v, 2), S = y[0], b = y[1], E = Object(Qn.useState)(""), T = Fe()(E, 2), C = T[0], P = T[1], I = Object(Qn.useState)([]), A = Fe()(I, 2), M = A[0], N = A[1], w = Object(Qn.useState)([]), L = Fe()(w, 2), $ = L[0], R = L[1], D = Object(Qn.useRef)(null), _ = Object(Qn.useMemo)(function() {
            return o("translate")
        }, []), O = 3, U = 100, k = 4, x = "search-history", j = "/search";
        function B() {
            return JSON.parse(s.getLocalItem(x) || "{}")[n] || []
        }
        function F() {
            var e = !C || C.length < O
              , t = g && e;
            b(t),
            t && (N(B()),
            R(B()))
        }
        function V(e) {
            var t = JSON.parse(s.getLocalItem(x) || "{}");
            t[n] = e,
            s.setLocalItem(x, JSON.stringify(t))
        }
        function H() {
            h(!1),
            P(""),
            D.current.blur()
        }
        function G(e) {
            l.remove(window.location.href),
            c.$evalAsync(),
            i.path(j).search(u.search.queryParam, e).search(u.search.typeParam, void 0)
        }
        return Object(Qn.useEffect)(function() {
            -1 === window.location.pathname.indexOf(j) && H()
        }, [d]),
        Object(Qn.useEffect)(function() {
            F()
        }, [g]),
        Object(Qn.useEffect)(function() {
            var e = $.map(function(e) {
                return t = e,
                n = C,
                a = new RegExp("(" + n + ")","gi"),
                r = t.split(a).map(function(e, t) {
                    return 0 === e.localeCompare(n) ? Kn.a.createElement("span", {
                        key: t,
                        className: md.a.matched
                    }, e) : e
                }),
                Kn.a.createElement("span", null, r);
                var t, n, a, r
            });
            N(e)
        }, [$]),
        Kn.a.createElement("div", {
            className: md.a.searchBox
        }, Kn.a.createElement("span", {
            className: md.a.placeholder
        }, _("search.placeholder")), Kn.a.createElement("div", {
            className: ra()([md.a.wrapper, f && md.a.boxOpen])
        }, Kn.a.createElement("form", {
            className: md.a.form,
            onSubmit: function(e) {
                if (e.preventDefault(),
                C) {
                    var n = hd()(C);
                    clearTimeout(t),
                    function(e) {
                        if (g) {
                            var t = B()
                              , n = t.findIndex(function(t) {
                                return t.toLowerCase() === e.toLowerCase()
                            });
                            n >= 0 && t.splice(n, 1),
                            (t = [e].concat(t)).length > k && t.pop(),
                            V(t)
                        }
                    }(n),
                    G(n),
                    H()
                }
            }
        }, Kn.a.createElement("input", {
            className: ra()(md.a.box, md.a.msClear),
            type: "text",
            placeholder: _(f ? "search.searchIn" : "search.placeholder"),
            value: C,
            onChange: function(e) {
                return P(e.target.value)
            },
            onFocus: function() {
                na({
                    name: "menu::showSearch"
                }),
                h(!0),
                F()
            },
            onKeyUp: function() {
                var e = C.length >= O;
                F(),
                e && (clearTimeout(t),
                t = setTimeout(function() {
                    G(C)
                }, U))
            },
            ref: D
        }), f && Kn.a.createElement("span", {
            className: md.a.boxClose,
            onClick: function() {
                na({
                    name: "menu::hideSearch"
                }),
                H()
            }
        })), f && S && Kn.a.createElement("div", {
            className: md.a.suggestionsContainer
        }, M.map(function(e, t) {
            return Kn.a.createElement("div", {
                key: t,
                className: md.a.suggestions
            }, Kn.a.createElement("span", {
                className: md.a.title,
                onClick: function() {
                    return na({
                        name: "search::help",
                        data: {
                            SEARCHNAME: e = $[t],
                            SEARCHPOSITION: t,
                            HELPTYPE: "history"
                        }
                    }),
                    G(e),
                    void H();
                    var e
                }
            }, e), Kn.a.createElement("span", {
                className: md.a.remove,
                onClick: function(e) {
                    return function(e, t) {
                        t.preventDefault();
                        var n = hd()($);
                        n.splice(e, 1),
                        V(n),
                        N(n),
                        R(n)
                    }(t, e)
                }
            }, _("search.remove")))
        }))))
    }
    function yd(e) {
        var t = e.handleMenu
          , n = e.isRegister
          , a = Object(Zn.c)()
          , r = Object(Zn.f)()
          , o = Object(Qn.useState)("")
          , i = Fe()(o, 2)
          , c = i[0]
          , s = i[1]
          , l = Object(Zn.e)("$filter", "goSvcSubscription", "goCnstEnumerated")
          , u = Fe()(l, 3)
          , d = u[0]
          , g = u[1]
          , p = u[2]
          , m = Object(Qn.useMemo)(function() {
            return d("translate")
        }, [])
          , f = "header.menu"
          , h = "myTv.myContents"
          , v = "header.myAccount"
          , y = p.routes.settings;
        function S() {
            return (S = Ma()(Ia.a.mark(function e() {
                var t, n;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.prev = 0,
                            e.next = 3,
                            g.isPortalEnabled();
                        case 3:
                            t = e.sent,
                            n = t ? y.mySubscriptions : y.parentalControl,
                            s("./".concat(y.main, "/").concat(n)),
                            e.next = 10;
                            break;
                        case 8:
                            e.prev = 8,
                            e.t0 = e.catch(0);
                        case 10:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[0, 8]])
            }))).apply(this, arguments)
        }
        return Object(Qn.useEffect)(function() {
            !function() {
                S.apply(this, arguments)
            }()
        }, [a]),
        Kn.a.createElement("div", {
            className: ra()([gd.a.firstLevel, n && gd.a.registerHeader])
        }, Kn.a.createElement("a", {
            className: gd.a.logo,
            href: "./",
            title: m("title")
        }, Kn.a.createElement("span", {
            className: ra()([gd.a.logoImage, "go-second-header--logo-image"])
        })), Kn.a.createElement("div", {
            className: gd.a.menu
        }, a && Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement("a", {
            className: ra()([gd.a.menuItem, gd.a.menuIconContents, gd.a.menuIcon]),
            href: "./my-tv",
            title: m(h)
        }, Kn.a.createElement("span", {
            className: gd.a.menuItemText
        }, m(h))), Kn.a.createElement("a", {
            className: ra()([gd.a.menuItem, gd.a.menuIconSettings, gd.a.menuIcon]),
            href: c,
            title: m(v)
        }, Kn.a.createElement("span", {
            className: gd.a.menuItemText
        }, m(v)))), Kn.a.createElement("a", {
            className: ra()([gd.a.menuItem, gd.a.menuIconMain, gd.a.menuItemMain]),
            onClick: t
        }, Kn.a.createElement("span", {
            className: gd.a.menuItemText
        }, m(f))), Kn.a.createElement(vd, {
            profileID: r
        })))
    }
    var Sd = n(42)
      , bd = n.n(Sd);
    function Ed(e) {
        var t, n, a = e.isExpanded, r = e.isRegister, o = Object(Zn.g)(), i = Object(Qn.useState)([]), c = Fe()(i, 2), s = c[0], l = c[1], u = Object(Qn.useState)(!1), d = Fe()(u, 2), g = d[0], p = d[1], m = Object(Qn.useRef)(null), f = Object(Zn.e)("$filter", "$location", "goSvcLibrary", "goSvcUniapiLive", "goSvcThirdParty", "goSvcAdultAccess", "goMdlPopUpsSvcManager", "goSvcSlug", "goCnstConfig", "goCnstEnumerated"), h = Fe()(f, 10), v = h[0], y = h[1], S = h[2], b = h[3], E = h[4], T = h[5], C = h[6], P = h[7], I = h[8], A = h[9], M = Object(Qn.useMemo)(function() {
            return v("translate")
        }, []), N = I.go.goMdlEpg ? I.go.goMdlEpg.routes : [], w = "double-header";
        function L() {
            t || (t = setTimeout(function() {
                m.current && m.current.offsetHeight > bd.a.menubarBreakpoint ? O(w) : _(w),
                t = null
            }, 500),
            m.current && 0 === m.current.offsetHeight && !n && (n = setInterval(function() {
                m.current.offsetHeight > bd.a.menubarBreakpoint ? O(w) : _(w),
                m.current.offsetHeight > 0 && clearInterval(n)
            }, 500)))
        }
        function $() {
            return R.apply(this, arguments)
        }
        function R() {
            return (R = Ma()(Ia.a.mark(function e() {
                var t;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            return e.prev = 0,
                            e.next = 3,
                            b.isAvailableForUser();
                        case 3:
                            t = e.sent,
                            p(t),
                            e.next = 9;
                            break;
                        case 7:
                            e.prev = 7,
                            e.t0 = e.catch(0);
                        case 9:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[0, 7]])
            }))).apply(this, arguments)
        }
        function D() {
            return (D = Ma()(Ia.a.mark(function e(t, n) {
                var a;
                return Ia.a.wrap(function(e) {
                    for (; ; )
                        switch (e.prev = e.next) {
                        case 0:
                            if (na(n.analyticsData),
                            a = E.getPcExternalUrl(n.externalUrls),
                            !n.isAdult) {
                                e.next = 16;
                                break
                            }
                            return t.preventDefault(),
                            e.prev = 4,
                            e.next = 7,
                            T.checkAdultAccess();
                        case 7:
                            e.sent || (y.path(v("goFltrDetailsLink")(n)),
                            y.path("".concat(A.routes.catalog, "/").concat(P.encodeId(n.id, n.title)))),
                            e.next = 14;
                            break;
                        case 11:
                            e.prev = 11,
                            e.t0 = e.catch(4),
                            C.openError({
                                title: "popup.adults.title",
                                message: "popup.adults.withoutAccess",
                                accept: "common.accept"
                            });
                        case 14:
                            e.next = 17;
                            break;
                        case 16:
                            a && E.openLinkInNewTab(t, a);
                        case 17:
                        case "end":
                            return e.stop()
                        }
                }, e, this, [[4, 11]])
            }))).apply(this, arguments)
        }
        function _(e) {
            window.document.querySelector("body").classList.remove(e)
        }
        function O(e) {
            window.document.querySelector("body").classList.add(e)
        }
        return Object(Qn.useEffect)(function() {
            $(),
            S.getHeaderChannels().then(function(e) {
                e.forEach(function(e) {
                    e.analyticsData = {
                        name: "menu::channel",
                        data: {
                            CHANNELVODID: e.id,
                            CHANNELVODNAME: e.title
                        }
                    }
                }),
                l(e)
            })
        }, []),
        Object(Qn.useEffect)(function() {
            L()
        }, [s]),
        Object(Qn.useEffect)(function() {
            return window.addEventListener("resize", L),
            function() {
                return window.removeEventListener("resize", L)
            }
        }, []),
        Object(Qn.useEffect)(function() {
            a ? O("categories-visible") : _("categories-visible")
        }, [a]),
        Object(Qn.useEffect)(function() {
            $()
        }, [o]),
        Kn.a.createElement("div", {
            className: ra()([bd.a.secondLevel, r && bd.a.registerHeader, a ? bd.a.expanded : bd.a.collapsed]),
            ref: m
        }, Kn.a.createElement("nav", {
            className: bd.a.categories
        }, g && Kn.a.createElement("a", {
            className: bd.a.categoriesElement,
            href: N.now,
            title: M("epg.navbar.now"),
            onClick: function() {
                return na({
                    name: "menu::epg"
                })
            }
        }, M("epg.navbar.now")), s.map(function(e) {
            return Kn.a.createElement("a", {
                key: e.id,
                className: ra()([bd.a.categoriesElement, e.isAdult && e.hasChildren && bd.a.adult]),
                href: e.isAdult ? void 0 : v("goFltrDetailsLink")(e),
                onClick: function(t) {
                    return function(e, t) {
                        return D.apply(this, arguments)
                    }(t, e)
                },
                title: e.titleInMenu
            }, e.titleInMenu)
        })))
    }
    function Td(e, t, n) {
        var a = n.linkTarget
          , r = [t.LinkType.HeaderPopupMessage, t.LinkType.FooterPopupMessage]
          , o = {
            Header: "HeaderLinks",
            Footer: "FooterLinks"
        };
        return {
            getHeaderLinks: function() {
                return i(o.Header)
            },
            getFooterLinks: function() {
                return i(o.Footer)
            }
        };
        function i(t) {
            return e.getAsync(t).then(function(e) {
                return e.map(c)
            })
        }
        function c(e) {
            return e.Target = -1 !== r.indexOf(e.Type) ? a.blank : a.self,
            e
        }
    }
    Td.$inject = ["goSvcUniapiSettings", "uaConstants", "goCnstEnumerated"];
    n(495);
    var Cd = r.a.module("goMdlLayout", []).component("goMdlLayoutCmpFirstHeader", Object(_n.a)(function() {
        var e = Object(Zn.c)()
          , t = Object(Qn.useState)([])
          , n = Fe()(t, 2)
          , a = n[0]
          , r = n[1]
          , o = Object(Zn.e)("$filter", "goMdlLayoutSvcLinks")
          , i = Fe()(o, 2)
          , c = i[0]
          , s = i[1]
          , l = Object(Qn.useMemo)(function() {
            return c("translate")
        }, []);
        return Object(Qn.useEffect)(function() {
            s.getHeaderLinks().then(r)
        }, []),
        Kn.a.createElement("div", {
            className: ad.a.firstHeader
        }, Kn.a.createElement("nav", {
            className: "pull-left ".concat(ad.a.nav)
        }, Kn.a.createElement("a", {
            className: ad.a.link,
            href: "./",
            title: l("description")
        }, l("description")), a.map(function(e) {
            return Kn.a.createElement("a", {
                key: e.ID,
                className: ra()([ad.a.link, ad.a.barSeparator]),
                target: e.Target,
                href: e.Url,
                title: e.Title
            }, e.Title)
        }), !e && Kn.a.createElement(oa, {
            className: ra()([ad.a.link, ad.a.barSeparator, "gtm-registration-header-link"]),
            skipAnalytics: !0
        })))
    })).component("goMdlLayoutCmpFooter", Object(_n.a)(function() {
        var e = Object(Qn.useState)([])
          , t = Fe()(e, 2)
          , n = t[0]
          , a = t[1]
          , r = Object(Zn.e)("$filter", "goMdlLayoutSvcLinks")
          , o = Fe()(r, 2)
          , i = o[0]
          , c = o[1]
          , s = Object(Qn.useMemo)(function() {
            return i("translate")
        }, []);
        return Object(Qn.useEffect)(function() {
            c.getFooterLinks().then(a)
        }, []),
        Kn.a.createElement("div", {
            className: td.a.footer
        }, Kn.a.createElement("nav", {
            className: "pull-left ".concat(td.a.links)
        }, n.map(function(e) {
            return Kn.a.createElement("a", {
                key: e.ID,
                className: "".concat(td.a.link, " ").concat(td.a.barSeparator),
                target: e.Target,
                href: e.Url,
                title: e.Title
            }, e.Title)
        }), Kn.a.createElement("a", {
            className: "".concat(td.a.link, " ").concat(td.a.barSeparator),
            href: "sitemap",
            title: s("sitemap.title")
        }, s("sitemap.title"))), Kn.a.createElement("p", {
            className: "pull-right ".concat(td.a.branding)
        }, Kn.a.createElement("span", null, s("branding.copyright")), " ", Kn.a.createElement("span", null, s("branding.brand"))))
    })).component("goMdlLayoutCmpMain", id).component("goMdlLayoutCmpMicrodata", ld).component("goMdlLayoutCmpSecondHeader", Object(_n.a)(function() {
        var e, t = Object(Zn.b)(), n = Object(Qn.useRef)(t), a = Object(Qn.useState)(!1), r = Fe()(a, 2), o = r[0], i = r[1], c = Object(Qn.useState)(!0), s = Fe()(c, 2), l = s[0], u = s[1], d = Object(Zn.e)("goCnstApp"), g = Fe()(d, 1)[0];
        function p() {
            var t = window.pageYOffset || window.document.documentElement.scrollTop
              , a = window.innerWidth >= Ho.a.tabletSize;
            n.current === g.basePath && !t && a ? u(!0) : u(!1),
            clearTimeout(e),
            "none" !== window.document.querySelector("body").style.pointerEvents && (window.document.querySelector("body").style.pointerEvents = "none"),
            e = setTimeout(m, 500)
        }
        function m() {
            window.document.querySelector("body").style.removeProperty("pointer-events")
        }
        return Object(Qn.useEffect)(function() {
            return window.addEventListener("scroll", p),
            function() {
                return window.removeEventListener("scroll", p)
            }
        }, []),
        Object(Qn.useEffect)(function() {
            i(0 === t.indexOf("/registration")),
            t !== g.basePath || window.document.querySelector("body").clientWidth < Ho.a.tabletSize ? u(!1) : u(!0),
            n.current = t
        }, [t]),
        Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement(yd, {
            handleMenu: function() {
                u(!l)
            },
            isRegister: o
        }), Kn.a.createElement(Ed, {
            isExpanded: l,
            isRegister: o
        }))
    })).factory("goMdlLayoutSvcLinks", Td).name;
    function Pd(e) {
        var t = "seoMetadata.title.myTV."
          , n = "seoMetadata.description.myTV."
          , a = "<go-mdl-my-tv-cmp-main-screen></go-mdl-my-tv-cmp-main-screen>";
        e.resolveWhen("/my-tv/watched", {
            template: a,
            page: {
                title: t + "watched",
                description: n + "watched",
                eventName: "mytv::watched"
            }
        }).resolveWhen("/my-tv/watchlist", {
            template: a,
            page: {
                title: t + "watchlist",
                description: n + "watchlist",
                eventName: "mytv::wishlist"
            }
        }).resolveWhen("/my-tv/follow", {
            template: a,
            page: {
                title: t + "follow",
                description: n + "follow",
                eventName: "mytv::seriesFollowed"
            }
        }).resolveWhen("/my-tv/recordings-available", {
            template: a,
            page: {
                title: t + "recordingsAvailable",
                description: n + "recordingsAvailable",
                eventName: "mytv::availableRecordings"
            }
        }).resolveWhen("/my-tv/recordings-programmed", {
            template: a,
            page: {
                title: t + "recordingsProgrammed",
                description: n + "recordingsProgrammed",
                eventName: "mytv::scheduledRecordings"
            }
        }).resolveWhen("/my-tv/rented", {
            template: a,
            page: {
                title: t + "rented",
                description: n + "rented",
                eventName: "mytv::rented"
            }
        }).resolveWhen("/my-tv", {
            redirectTo: "/my-tv/watched"
        })
    }
    Pd.$inject = ["$routeProvider"];
    var Id = n(278)
      , Ad = n.n(Id);
    n(493);
    Nd.$inject = ["$rootScope", "$location", "$route", "$q", "goSvcUserStatus", "goMdlMyTvSvcMyTv", "goSvcUniapiPvr", "goSvcUniapiParameter", "goMdlMyTvCnstMyTv"];
    var Md = {
        template: Ad.a,
        controller: Nd
    };
    function Nd(e, t, n, a, r, o, i, c, s) {
        "ngInject";
        var l, u, d, g, p = s.routes, m = this, f = s.status;
        function h() {
            var e = o.getPath();
            return a.all([c.isTvodEnabled(), i.isPvrServiceAvailable()]).then(function(n) {
                var a = Fe()(n, 2)
                  , r = a[0]
                  , o = a[1]
                  , i = e === p.recordingsAvailable || e === p.recordingsProgrammed
                  , c = e === p.rented;
                return (i && !o || c && !r) && t.path("")
            })
        }
        function v() {
            m.getSection = o.getSection,
            m.currentPath = o.getPath(),
            o.isPvrUserActive().then(function(e) {
                m.isPvrUserActive = e
            }),
            m.status = f.REQUEST,
            m.isLoading = !0,
            g = n.current
        }
        function y() {
            return o.getSections().then(function(e) {
                m.sections = e
            })
        }
        m.toggleMenu = function() {
            m.isOpened = !m.isOpened
        }
        ,
        m.closeMenu = function() {
            m.isOpened = !1
        }
        ,
        m.$onInit = function() {
            m.isOpened = !1,
            l = r.$watchCollection("[isAuth, isLoggedIn]", function() {
                r.isAuth && r.isLoggedIn ? h().then(v).then(y) : r.isAuth && t.path("")
            }),
            d = e.$on("$locationChangeSuccess", function() {
                m.currentPath = o.getPath(),
                m.status = f.REQUEST,
                m.isLoading = !0,
                D()(p, function(t) {
                    t === m.currentPath && (e.$emit("analytics::routeChangeSuccess"),
                    n.current = g)
                }),
                h()
            }),
            u = e.$on("myTv::status", function(e, t) {
                m.status = t,
                m.isLoading = !1
            })
        }
        ,
        m.$onDestroy = function() {
            u && u(),
            d && d(),
            l && l()
        }
    }
    var wd = n(277)
      , Ld = n.n(wd)
      , $d = (n(491),
    {
        template: Ld.a,
        bindings: {
            product: "="
        },
        controller: Rd
    });
    function Rd(e, t) {
        var n, a = this;
        a.$onInit = function() {
            n = t.find(".go-mytv-progress-bar--progress"),
            a.isBarVisible = a.product.resumeValue > 0 || -1 === a.product.resumeValue,
            -1 === a.product.resumeValue || a.product.resumeValue > a.product.duration ? (n.width("100%"),
            a.text = "myTv.table.rows.progressBar.completed") : a.product.resumeValue > 0 && (a.text = e("goFltrTimeLeft")(a.product.resumeValue, a.product.duration),
            n.width(e("goFltrPercentage")(a.product.resumeValue, a.product.duration)))
        }
    }
    Rd.$inject = ["$filter", "$element"];
    var Dd = n(276)
      , _d = n.n(Dd)
      , Od = (n(489),
    {
        template: _d.a,
        controller: Ud
    });
    function Ud(e, t, n, a, r, o, i, c, s, l, u) {
        var d, g, p = this, m = s.AdultFilterType, f = l.goType, h = u.status;
        function v(e) {
            p.dataTable = e
        }
        function y() {
            p.dataTable = null
        }
        function S() {
            var t;
            t = p.dataTable ? d.length <= 0 ? h.EMPTY : h.REQUEST : h.ERROR,
            e.$emit("myTv::status", t)
        }
        function b(e) {
            return d = e,
            e
        }
        function E(e) {
            var t = [];
            return o.isAdultsEnabled().then(function(n) {
                return n && r.canAccess() ? (p.showAdultNotification = !1,
                t = e) : (t = e.filter(function(e) {
                    return !e.isAdult
                }),
                p.showAdultNotification = e.length > t.length),
                t
            })
        }
        function T() {
            p.dataTable.forEach(function(e) {
                e.analyticsData = {
                    name: "mytv::detail",
                    data: {
                        SECTION: "RENTAL",
                        CONTENTID: e.id,
                        CONTENTNAME: e.name
                    }
                }
            })
        }
        p.showAdults = function() {
            i.trackEvent("mytv::adult"),
            r.checkAdultAccess().then(function() {
                p.showAdultNotification = !1,
                v(d),
                S()
            })
        }
        ,
        p.getGenreName = function(e) {
            return e.goType === f.Movie ? e.genres[0].name : t("translate")("epg.genresList.series")
        }
        ,
        p.getDuration = function(e) {
            return e.goType === f.Season ? "" : t("goFltrDuration")(e.duration)
        }
        ,
        p.hideAdultNotification = function() {
            p.showAdultNotification = !1,
            p.dataTable && p.dataTable.length <= 0 && e.$emit("myTv::status", h.EMPTY)
        }
        ,
        p.$onInit = function() {
            p.dateFormat = c.go.date.format.date,
            g = a.$watch("isLoggedIn", function() {
                a.isLoggedIn && o.isAdultsEnabled().then(function(e) {
                    return e ? m.All : m.NonAdultOnly
                }).then(function(e) {
                    var t = n.getMyRentedMovies(e);
                    t.rentedMovies.then(b).then(E).then(v).then(T).catch(y).finally(S),
                    t.resumeValues.then(b).then(E).then(v).then(T)
                })
            })
        }
        ,
        p.$onDestroy = function() {
            g && g()
        }
    }
    Ud.$inject = ["$rootScope", "$filter", "goSvcUniapiPurchase", "goSvcUserStatus", "goSvcAdultAccess", "goSvcUniapiParameter", "goMdlAnalyticsSvcManager", "goCnstConfig", "uaConstants", "goCnstEnumerated", "goMdlMyTvCnstMyTv"];
    var kd = n(275)
      , xd = n.n(kd);
    Bd.$inject = ["$rootScope", "goSvcUserStatus", "goMdlMyTvSvcMyTv", "goSvcTags", "goSvcLogger", "goMdlPopUpsSvcManager", "goCnstConfig", "uaConstants", "goMdlMyTvCnstMyTv", "goCnstEnumerated"];
    var jd = {
        template: xd.a,
        bindings: {
            section: "@"
        },
        controller: Bd
    };
    function Bd(e, t, n, a, r, o, i, c, s, l) {
        "ngInject";
        var u, d, g = r.getLogger("CONTROLLER", "goMdlMyTvCtrlUserTag"), p = this, m = c.TagType, f = m.Follow, h = m.Watched, v = m.Favorite, y = m.Completed, S = l.goType.Episode, b = s.status, E = s.routes;
        function T() {
            var t = b.REQUEST;
            p.contents ? p.contents.length || (t = b.EMPTY) : t = b.ERROR,
            e.$emit("myTv::status", t)
        }
        function C(e) {
            p.contents = e
        }
        function P() {
            p.contents.forEach(function(e) {
                e.analyticsData = {
                    name: "mytv::detail",
                    data: {
                        SECTION: p.section,
                        CONTENTID: e.id,
                        CONTENTNAME: e.name
                    }
                }
            })
        }
        p.removeContent = function(e, t) {
            g.info("Removing product with id", e.id, "and index", t),
            a.untag(function(e) {
                return d === f && 0 === e.seriesId && (e = {
                    goType: S,
                    seriesId: e.id
                }),
                e
            }(e), d).then(function() {
                p.contents.splice(t, 1),
                !p.contents.length && T()
            }).catch(function() {
                o.openWarning({
                    title: "epg.pvr.error",
                    message: "myTv.error.errorPopUpMessage",
                    accept: "common.accept"
                })
            })
        }
        ,
        p.$onInit = function() {
            p.dateFormat = i.go.date.format.date,
            p.contents = [],
            p.infiniteScrollDisabled = !0,
            p.actionText = function() {
                var e;
                switch (n.getPath()) {
                case E.follow:
                    e = "myTv.table.rows.stopFollowing";
                    break;
                case E.watchlist:
                    e = "myTv.table.rows.watchlistRemove";
                    break;
                default:
                    e = "myTv.table.rows.remove"
                }
                return e
            }(),
            u = t.$watch("isLoggedIn", function() {
                t.isLoggedIn && (!function() {
                    switch (n.getPath()) {
                    case E.follow:
                        d = f;
                        break;
                    case E.watched:
                        d = h;
                        break;
                    case E.watchlist:
                        d = v;
                        break;
                    default:
                        d = h
                    }
                }(),
                a.getTaggedProducts(d === h ? [d, y] : d).then(C).then(P).catch(function(e) {
                    p.contents = null,
                    g.warning(e)
                }).finally(T))
            })
        }
        ,
        p.$onDestroy = function() {
            u()
        }
    }
    var Fd = n(274)
      , Vd = n.n(Fd);
    n(487);
    Gd.$inject = ["$filter", "goCnstEnumerated"];
    var Hd = {
        template: Vd.a,
        bindings: {
            product: "=",
            section: "@"
        },
        controller: Gd
    };
    function Gd(e, t) {
        "ngInject";
        var n = this
          , a = t.goType
          , r = a.Season
          , o = a.Episode
          , i = e("translate");
        function c() {
            var e = n.product
              , t = new RegExp("^" + e.seriesName + "[\\W]*","i");
            n.title = function(e) {
                return e.goType === r ? i("common.seasonName", {
                    title: e.seriesName,
                    season: e.seasonNumber
                }) : i("common.episodeName", {
                    title: e.seriesName,
                    season: e.seasonNumber,
                    episode: e.episodeNumber
                })
            }(e),
            n.isClickable = !0,
            n.subtitle = e.goType === o ? e.name.replace(t, "") : ""
        }
        n.$onInit = function() {
            n.product.seriesName ? c() : n.product.name ? (n.title = n.product.name,
            n.isClickable = !0) : (n.title = i("common.notAvailableText"),
            n.isClickable = !1),
            n.analyticsData = {
                name: "mytv::detail",
                data: {
                    SECTION: n.section,
                    CONTENTID: n.product.id,
                    CONTENTNAME: n.product.name
                }
            }
        }
    }
    var Wd = n(26)
      , qd = n.n(Wd)
      , Yd = n(13)
      , zd = n.n(Yd)
      , Qd = n(41)
      , Kd = n.n(Qd)
      , Xd = n(273)
      , Jd = n.n(Xd);
    function Zd(e) {
        var t = e.children
          , n = e.className
          , a = e.toggleClassName
          , r = e.isLoadingItems
          , o = Object(Qn.useRef)()
          , i = Object(Qn.useRef)()
          , c = Object(Qn.useRef)()
          , s = Object(Qn.useState)(!1)
          , l = Fe()(s, 2)
          , u = l[0]
          , d = l[1]
          , g = Object(Qn.useState)()
          , p = Fe()(g, 2)
          , m = p[0]
          , f = p[1]
          , h = Object(Qn.useState)(!1)
          , v = Fe()(h, 2)
          , y = v[0]
          , S = v[1];
        function b() {
            if (u) {
                var e = i.current
                  , t = o.current
                  , n = c.current
                  , a = Math.max.apply(Math, je()([].map.call(e.children, function(e) {
                    return e.offsetWidth
                })))
                  , r = e.offsetWidth
                  , s = a < r ? a : r
                  , l = e.offsetHeight
                  , d = getComputedStyle(t)
                  , g = parseInt(d.marginLeft) + t.offsetWidth
                  , p = parseInt(d.marginTop) + t.offsetHeight
                  , m = parseInt(getComputedStyle(n).marginLeft)
                  , h = t.getBoundingClientRect()
                  , v = h.top
                  , y = h.left
                  , b = window.innerWidth
                  , E = window.innerHeight
                  , T = b - (y + g / 2 + s);
                e.style.left = T < 10 && s < b / 2 ? "".concat(g + m - s, "px") : "initial",
                E - (v + p / 2 + l) < 10 ? (e.style.top = "".concat(-l, "px"),
                f(!0)) : (e.style.top = "initial",
                f(!1))
            }
            S(!0)
        }
        return Object(Qn.useEffect)(function() {
            var e = Jd()(b, 250)
              , t = document.querySelector("body")
              , n = function() {
                window.removeEventListener("resize", e),
                t.removeEventListener("click", a)
            }
              , a = function(e) {
                e.target === o.current || [].some.call(i.current.querySelectorAll(".".concat(Kd.a.item)), function(t) {
                    return e.target === t
                }) || (d(!1),
                n())
            };
            return u && (t.addEventListener("click", a),
            window.addEventListener("resize", e),
            b()),
            n
        }, [u]),
        Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement("button", {
            className: ra()([Kd.a.toggle, a]),
            onClick: function() {
                S(!1),
                d(!u)
            },
            ref: o
        }), u && Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement("div", {
            className: ra()([Kd.a.arrow, y && Kd.a.visible, m ? Kd.a.top : Kd.a.bottom]),
            ref: c
        }), Kn.a.createElement("section", {
            className: ra()([Kd.a.menu, n, y && Kd.a.visible]),
            ref: i
        }, Kn.a.createElement(Lu, {
            className: Kd.a.loading,
            isLoading: !0 === r
        }, t))))
    }
    function eg(e) {
        var t = e.children
          , n = e.onClick
          , a = e.className
          , r = void 0 === a ? "" : a;
        return Kn.a.createElement("div", {
            className: ra()([Kd.a.item, r]),
            onClick: n
        }, t)
    }
    var tg = n(165)
      , ng = n.n(tg)
      , ag = n(36)
      , rg = n.n(ag);
    function og(e) {
        var t = e.children
          , n = e.className;
        return Kn.a.createElement("table", {
            className: ra()([rg.a.table, n])
        }, t)
    }
    function ig(e) {
        var t = e.children
          , n = e.className
          , a = e.onConfirm
          , r = e.onClose
          , o = Object(Zn.e)("$filter")
          , i = (0,
        Fe()(o, 1)[0])("translate");
        return Kn.a.createElement("caption", {
            className: ra()([rg.a.info, n])
        }, Kn.a.createElement("div", {
            className: rg.a.infoWrapper
        }, Kn.a.createElement("p", {
            className: rg.a.text
        }, t), a && Kn.a.createElement("button", {
            className: rg.a.confirm,
            onClick: a
        }, i("common.yes")), Kn.a.createElement("button", {
            className: rg.a.close,
            onClick: r
        }, Kn.a.createElement("i", {
            className: "".concat(rg.a.closeIcon, " go-glyphicon go-glyphicon-cross")
        }))))
    }
    function cg(e) {
        var t = e.children
          , n = e.className;
        return Kn.a.createElement("thead", {
            className: ra()([rg.a.header, n])
        }, t)
    }
    function sg(e) {
        var t = e.children
          , n = e.className;
        return Kn.a.createElement("tbody", {
            className: ra()([rg.a.body, n])
        }, t)
    }
    function lg(e) {
        var t = e.children
          , n = e.className;
        return Kn.a.createElement("tr", {
            className: ra()([rg.a.row, n])
        }, t)
    }
    function ug(e) {
        var t = e.children
          , n = e.className;
        return Kn.a.createElement("th", {
            className: ra()([rg.a.cell, n])
        }, t)
    }
    function dg(e) {
        var t = e.children
          , n = e.className
          , a = ng()(e, ["children", "className"]);
        return Kn.a.createElement("td", uu()({
            className: ra()([rg.a.cell, n])
        }, a), t)
    }
    var gg = {
        routes: {
            watched: "watched",
            watchlist: "watchlist",
            follow: "follow",
            recordingsProgrammed: "recordings-programmed",
            recordingsAvailable: "recordings-available",
            rented: "rented"
        },
        status: {
            EMPTY: "empty",
            REQUEST: "request",
            ERROR: "error"
        }
    }
      , pg = n(23)
      , mg = n.n(pg);
    function fg(e) {
        var t = Object(_n.b)("$rootScope")
          , n = Fe()(t, 1)[0]
          , a = gg.status
          , r = e ? e.length ? a.REQUEST : a.EMPTY : a.ERROR;
        n.$evalAsync(function() {
            return n.$emit("myTv::status", r)
        })
    }
    function hg(e) {
        return function(t) {
            var n = Fe()(t, 2)
              , a = n[0]
              , r = n[1]
              , o = a.map(function(e) {
                var t = Object(_n.b)("goSvcTime")
                  , n = Fe()(t, 1)[0];
                return function(t) {
                    var a = e.find(function(e) {
                        return e.recordingChannelId === t.recordingChannelId
                    }) || {
                        isPvrPlayback: !0
                    }
                      , r = Object(se.getProperty)(a, "isPvrPlayback", !1);
                    return Object.assign(t, {
                        logo: Object(se.getProperty)(a, "logo", null),
                        recordingChannelId: Object(se.getProperty)(a, "recordingChannelId", 0),
                        isPlaybackChannel: r,
                        isPlayback: r && [pg.GvpRecordingState.Running, pg.GvpRecordingState.Finished].includes(t.recordingState) && (!t.deleteTime || n.getDiffHoursFromNow(t.deleteTime) <= 0),
                        isChannelCpvrManageable: Object(se.getProperty)(a, "isCpvrManageable", !1)
                    })
                }
            }(r)).sort(function(e, t) {
                return e.startTime - t.startTime
            })
              , i = e ? function(e) {
                var t = 0;
                return e.map(function(e) {
                    return e.type === pg.RecordingScheduleType.EntireSeries && 0 !== e.seriesId && e.seriesId !== t && (t = e.seriesId,
                    e.isFirstEpisode = !0),
                    e
                })
            }(o) : o;
            return fg(i),
            i
        }
    }
    function vg(e) {
        var t = Object(_n.b)("goSvcCaLive")
          , n = Fe()(t, 1)[0];
        return Promise.all([function(e) {
            var t = Object(_n.b)("goSvcUniapiPvr")
              , n = Fe()(t, 1)[0]
              , a = e ? [pg.GvpRecordingState.Running, pg.GvpRecordingState.Scheduled] : [pg.GvpRecordingState.Finished, pg.GvpRecordingState.Canceled];
            return n.getAllRecordingSchedulesFilter(a)
        }(e), n.channels().get()]).then(hg(e)).catch(function() {
            fg()
        })
    }
    function yg() {
        return fg([]),
        Promise.resolve()
    }
    function Sg(e, t) {
        return bg.apply(this, arguments)
    }
    function bg() {
        return (bg = Ma()(Ia.a.mark(function e(t, n) {
            var a, r, o, i, c, s, l, u, d, g, p, m, f;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return a = n.programName,
                        r = n.seriesId,
                        o = n.programId,
                        i = n.trackId,
                        c = n.uxReference,
                        s = Object(_n.b)("goSvcUniapiPvr", "goMdlAnalyticsSvcManager"),
                        l = Fe()(s, 2),
                        u = l[0],
                        d = l[1],
                        g = G.a.servicesTypes,
                        p = g.cPVRServiceTypeName,
                        m = g.rPVRServiceTypeName,
                        e.next = 5,
                        u.isCloudPvrEnabled();
                    case 5:
                        f = e.sent,
                        d.trackEvent(t, {
                            PROGRAMNAME: a,
                            CHANNELNAME: name,
                            SERIESID: r,
                            PROGRAMID: o,
                            SERVICETYPE: f ? p : m,
                            TRACKID: i,
                            UXREFERENCE: c
                        });
                    case 7:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Eg() {
        return (Eg = Ma()(Ia.a.mark(function e(t) {
            var n, a, r, o;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return n = Object(_n.b)("goSvcUniapiPvr"),
                        a = Fe()(n, 1),
                        r = a[0],
                        e.next = 3,
                        r.isRemotePvrEnabled();
                    case 3:
                        return o = e.sent,
                        e.abrupt("return", o ? vg(t) : yg());
                    case 5:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Tg() {
        return (Tg = Ma()(Ia.a.mark(function e(t) {
            var n, a, r, o;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return n = Object(_n.b)("goSvcUniapiPvr"),
                        a = Fe()(n, 1),
                        r = a[0],
                        e.next = 3,
                        r.isCloudPvrEnabled();
                    case 3:
                        return o = e.sent,
                        e.abrupt("return", o ? vg(t) : yg());
                    case 5:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Cg(e) {
        return Pg.apply(this, arguments)
    }
    function Pg() {
        return (Pg = Ma()(Ia.a.mark(function e(t) {
            var n, a, r, o, i, c;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return n = Object(_n.b)("uasPlaybackService"),
                        a = Fe()(n, 1),
                        r = a[0],
                        e.next = 3,
                        r.GetUserItemsResumeData().then(function(e) {
                            return e.data.Content
                        });
                    case 3:
                        return o = e.sent,
                        i = o.List,
                        c = void 0 === i ? [] : i,
                        e.abrupt("return", c.find(function(e) {
                            return e.ItemId.toString() === t
                        }) || {});
                    case 7:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Ig() {
        return (Ig = Ma()(Ia.a.mark(function e(t, n) {
            var a, r, o, i;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        a = Object(_n.b)("goSvcCaLive", "goSvcPlayback"),
                        r = Fe()(a, 2),
                        o = r[0],
                        i = r[1],
                        o.channels().get().then(function(e) {
                            return e.find(function(e) {
                                return e.recordingChannelId === t.recordingChannelId
                            })
                        }).then(function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            return i.playRecording({
                                recording: t,
                                channel: e,
                                shouldResume: n
                            })
                        });
                    case 2:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Ag(e) {
        return Mg.apply(this, arguments)
    }
    function Mg() {
        return (Mg = Ma()(Ia.a.mark(function e(t) {
            var n, a, r, o, i;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return n = Object(_n.b)("goSvcUniapiPvr"),
                        a = Fe()(n, 1),
                        r = a[0],
                        o = t.id,
                        !(i = t.isProtected) && Sg("recordings::protect", t),
                        e.abrupt("return", r.protectRecording(o, i));
                    case 4:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Ng(e, t) {
        return wg.apply(this, arguments)
    }
    function wg() {
        return (wg = Ma()(Ia.a.mark(function e(t, n) {
            var a, r, o, i, c, s, l, u, d, g;
            return Ia.a.wrap(function(e) {
                for (; ; )
                    switch (e.prev = e.next) {
                    case 0:
                        return a = Object(_n.b)("$translate", "goSvcUniapiPvr", "goMdlPopUpsSvcManager"),
                        r = Fe()(a, 3),
                        o = r[0],
                        i = r[1],
                        c = r[2],
                        s = t.type === pg.RecordingScheduleType.EntireSeries,
                        l = s && n ? "myTv.recordings.seasonCancelWarning" : null,
                        u = n ? "myTv.recordings.cancelMessage" : "myTv.recordings.deleteMessage",
                        e.next = 4,
                        o([l, u]).catch(se.noop);
                    case 4:
                        return d = e.sent,
                        e.next = 7,
                        c.openWarning({
                            title: "myTv.recordings.warningTitle",
                            message: (d[l] || "") + (d[u] || ""),
                            accept: "common.yes",
                            cancel: "common.no",
                            closable: !1
                        }).result;
                    case 7:
                        return g = e.sent,
                        Sg(n ? "recordings::cancel" : "recordings::delete", t),
                        e.abrupt("return", (g ? i.cancelRecordingSchedule({
                            scheduleId: t.scheduleId,
                            programId: t.programId,
                            channelId: t.recordingChannelId,
                            seriesId: t.seriesId,
                            entireSeries: s,
                            recordingScheduleId: n ? t.parentId : t.id,
                            lastModified: t.lastModified
                        }, !n) : Promise.resolve()).then(function() {
                            return g
                        }));
                    case 10:
                    case "end":
                        return e.stop()
                    }
            }, e, this)
        }))).apply(this, arguments)
    }
    function Lg(e) {
        var t = Object(_n.b)("goMdlPopUpsSvcManager");
        Fe()(t, 1)[0].openError({
            title: "epg.pvr.error",
            message: e.message,
            accept: "common.accept"
        })
    }
    var $g = n(170)
      , Rg = n.n($g);
    function Dg(e) {
        var t = e.id
          , n = e.duration
          , a = Object(Zn.e)("$filter", "$rootScope", "goMdlPlayerSvcStatus", "ngSpMainCnst", "ngSpManagerSvc")
          , r = Fe()(a, 5)
          , o = r[0]
          , i = r[1]
          , c = r[2]
          , s = r[3]
          , l = r[4]
          , u = o("translate")
          , d = Object(Qn.useState)()
          , g = Fe()(d, 2)
          , p = g[0]
          , m = g[1]
          , f = Object(Qn.useState)()
          , h = Fe()(f, 2)
          , v = h[0]
          , y = h[1];
        function S(e) {
            e && (m(100 * e / n),
            y(n > e ? n - e : 0))
        }
        return Object(Qn.useEffect)(function() {
            var e = i.$on(s.EVENTS.DESTROYED, function() {
                c.get("product").id === t && S(l.getLastCurrentTime())
            });
            return Cg(t).then(function(e) {
                S(e.Time)
            }),
            function() {
                return e && e()
            }
        }, []),
        p ? Kn.a.createElement(Kn.a.Fragment, null, Kn.a.createElement(Hu, {
            className: Rg.a.progressBar,
            progress: p
        }), Kn.a.createElement("p", {
            className: Rg.a.timeLeft
        }, 0 === v ? u("myTv.table.titles.watched") : u("myTv.table.rows.progressBar.leftTime", {
            value: o("goFltrDuration")(v)
        }))) : null
    }
    var _g = n(169)
      , Og = n.n(_g);
    function Ug(e) {
        var t = e.recording
          , n = Object(Zn.e)("$filter", "goSvcTime")
          , a = Fe()(n, 2)
          , r = a[0]
          , o = a[1]
          , i = r("goFltrExpiresIn")
          , c = r("translate")
          , s = Object(Qn.useState)()
          , l = Fe()(s, 2)
          , u = l[0]
          , d = l[1];
        return Object(Qn.useEffect)(function() {
            t.recordingState === pg.GvpRecordingState.Canceled ? d({
                type: "error",
                text: c("myTv.table.rows.errorRecording")
            }) : t.isPlaybackChannel ? t.deleteTime && -o.getDiffHoursFromNow(t.deleteTime) <= 48 && d({
                type: "warning",
                text: i(t.deleteTime)
            }) : d({
                type: "warning",
                text: c("myTv.table.rows.warningNotTV")
            })
        }, [t]),
        u ? Kn.a.createElement("div", {
            className: ra()([Og.a.message, Og.a[u.type]])
        }, u.text) : null
    }
    function kg() {
        var e = Object(Zn.e)("$rootScope", "$filter", "goSvcUniapiPvr", "goMdlMyTvSvcMyTv", "goSvcCookies", "goMdlPopUpsSvcManager", "goSvcCaLive", "goSvcLiveDetail", "goCnstEnumerated")
          , t = Fe()(e, 9)
          , n = t[0]
          , a = t[1]
          , r = t[2]
          , i = t[3]
          , c = t[4]
          , s = t[5]
          , l = t[6]
          , u = t[7]
          , d = t[8]
          , g = a("translate")
          , p = a("goFltrDuration")
          , m = a("goMdlMyTvFltrRecordingDate")
          , f = Object(Zn.c)()
          , h = Object(Zn.d)("COMPONENT", "CloudRecordings")
          , v = Object(Zn.a)({})
          , y = Fe()(v, 2)
          , S = y[0]
          , b = y[1]
          , E = Object(Zn.a)({})
          , T = Fe()(E, 2)
          , C = T[0]
          , P = T[1]
          , I = Object(Qn.useState)({})
          , A = Fe()(I, 2)
          , M = A[0]
          , N = A[1]
          , w = Object(Qn.useState)({})
          , L = Fe()(w, 2)
          , $ = L[0]
          , R = L[1]
          , D = Object(Qn.useState)([])
          , _ = Fe()(D, 2)
          , O = _[0]
          , U = _[1]
          , k = "recordings-programmed" === i.getPath();
        function x() {
            return function(e) {
                return Tg.apply(this, arguments)
            }(k).then(function(e) {
                U(e)
            }).catch(h.error)
        }
        Object(Qn.useEffect)(function() {
            f && x()
        }, [f]);
        var j = Object(Qn.useCallback)(function(e, t) {
            return function() {
                return e.isPlayback ? e.recordingState === pg.GvpRecordingState.Running ? (r = (a = e).startTime,
                i = a.endTime,
                c = a.channelId,
                s = a.programId,
                void l.liveSchedule().get({
                    startTime: r,
                    endTime: i,
                    liveChannelPids: o.caUtils.toPid(o.caTypes.CONTENT_TYPES.LIVE_CHANNEL, c)
                }).then(function(e) {
                    return e.find(function(e) {
                        return e.epgProgramId === s
                    })
                }).then(function(e) {
                    var t = e.pid
                      , a = e.programName;
                    return n.$evalAsync(function() {
                        return u.redirect(t, a)
                    })
                })) : function(e, t) {
                    return Ig.apply(this, arguments)
                }(e, t) : function() {}
                ;
                var a, r, i, c, s
            }
        }, [O])
          , B = Object(Qn.useCallback)(function(e) {
            var t, n, a = e.id, r = e.isPlayback, o = e.recordingState;
            r && o === pg.GvpRecordingState.Finished ? (R(_t()({}, a, !0)),
            (t = a,
            n = Object(_n.b)("goMdlPlayerSvcMedias"),
            Fe()(n, 1)[0].getMediasRecording(t).then(function(e) {
                return e[0]
            })).then(function(e) {
                var t = e.resume
                  , n = void 0 === t ? {
                    time: 0
                } : t;
                return b(_t()({}, a, n.time > 0))
            }).catch(function(e) {
                return h.error(e)
            }).finally(function() {
                return R(_t()({}, a, !1))
            })) : o === pg.GvpRecordingState.Canceled && P(_t()({}, a, !0))
        }, [O])
          , F = Object(Qn.useCallback)(function(e) {
            var t = e.id;
            return Ma()(Ia.a.mark(function n() {
                var a, r;
                return Ia.a.wrap(function(n) {
                    for (; ; )
                        switch (n.prev = n.next) {
                        case 0:
                            return n.prev = 0,
                            N(_t()({}, t, !0)),
                            n.next = 4,
                            Ag(e);
                        case 4:
                            x(),
                            !e.isProtected && !c.get(d.cookies.blockedRecording.key) && s.openBlockedRecordingWarning(),
                            n.next = 15;
                            break;
                        case 8:
                            n.prev = 8,
                            n.t0 = n.catch(0),
                            a = n.t0.error,
                            r = n.t0.code,
                            void 0 === r ? -1 : r,
                            Lg(a),
                            h.error(a);
                        case 15:
                            return n.prev = 15,
                            N(_t()({}, t, !1)),
                            n.finish(15);
                        case 18:
                        case "end":
                            return n.stop()
                        }
                }, n, this, [[0, 8, 15, 18]])
            }))
        }, [O])
          , V = Object(Qn.useCallback)(function(e) {
            return Ma()(Ia.a.mark(function t() {
                var n, a, o;
                return Ia.a.wrap(function(t) {
                    for (; ; )
                        switch (t.prev = t.next) {
                        case 0:
                            if (t.prev = 0,
                            e.recordingState !== pg.GvpRecordingState.Canceled) {
                                t.next = 5;
                                break
                            }
                            s.openInfo({
                                title: "myTv.recordings.cancelPopup.title",
                                message: "myTv.recordings.cancelPopup.message",
                                accept: "common.accept"
                            }),
                            t.next = 9;
                            break;
                        case 5:
                            return N(_t()({}, e.id, !0)),
                            t.next = 8,
                            Ng(e, k);
                        case 8:
                            x();
                        case 9:
                            t.next = 18;
                            break;
                        case 11:
                            t.prev = 11,
                            t.t0 = t.catch(0),
                            n = t.t0.error,
                            a = t.t0.code,
                            o = void 0 === a ? -1 : a,
                            r.isCancelError(o) ? Lg(n) : x(),
                            h.error(n);
                        case 18:
                            return t.prev = 18,
                            N(_t()({}, e.id, !1)),
                            t.finish(18);
                        case 21:
                        case "end":
                            return t.stop()
                        }
                }, t, this, [[0, 11, 18, 21]])
            }))
        }, [O]);
        return Kn.a.createElement(Kn.a.Fragment, null, O && O.length > 0 && Kn.a.createElement(og, {
            className: ra()([!k && zd.a.available])
        }, Kn.a.createElement(cg, {
            className: [zd.a.header, qd.a.header]
        }, Kn.a.createElement(lg, {
            className: zd.a.row
        }, Kn.a.createElement(ug, {
            className: zd.a.channel
        }, g("myTv.table.titles.channel")), Kn.a.createElement(ug, {
            className: qd.a.title
        }, g("myTv.table.titles.title")), k ? Kn.a.createElement(ug, {
            className: zd.a.recording
        }, Kn.a.createElement("span", {
            className: qd.a.center
        }, g("myTv.table.titles.recordingDate"))) : Kn.a.createElement(ug, {
            className: zd.a.state
        }, Kn.a.createElement("span", {
            className: qd.a.center
        }, g("myTv.table.titles.state"))), Kn.a.createElement(ug, {
            className: qd.a.duration
        }, Kn.a.createElement("span", {
            className: qd.a.center
        }, g("myTv.table.titles.duration"))), Kn.a.createElement(ug, {
            className: zd.a.cancel
        }))), Kn.a.createElement(sg, {
            className: zd.a.body
        }, O.map(function(e) {
            return Kn.a.createElement(Kn.a.Fragment, {
                key: e.id
            }, Kn.a.createElement(lg, {
                className: zd.a.row
            }, Kn.a.createElement(dg, {
                className: zd.a.channel
            }, Kn.a.createElement(yu, {
                src: e.logo,
                className: "go-image",
                alt: e.programName,
                title: e.programName,
                align: "center",
                position: "portrait"
            }), Kn.a.createElement(La, {
                className: zd.a.type,
                scheduleId: e.scheduleId,
                epgProgramId: e.programId,
                liveChannelId: e.channelId,
                startTime: e.startTime,
                showIsConflicted: !1
            })), Kn.a.createElement(dg, {
                className: ra()([qd.a.title, !k && zd.a.big, e.isPlayback && zd.a.link]),
                onClick: j(e, !0),
                onMouseEnter: function() {
                    return B(e)
                }
            }, !k && Kn.a.createElement(Ug, {
                recording: e
            }), Kn.a.createElement("span", null, e.programName)), k && Kn.a.createElement(dg, {
                className: zd.a.recording
            }, Kn.a.createElement("div", {
                className: zd.a.recording
            }, !0 === e.conflicted && Kn.a.createElement(La, {
                className: zd.a.center,
                scheduleId: e.scheduleId,
                epgProgramId: e.programId
            }), e.isFirstEpisode && Kn.a.createElement("span", {
                className: zd.a.center
            }, g("myTv.table.rows.nextEpisode")), Kn.a.createElement("span", {
                className: zd.a.center
            }, m(e, k)))), !k && Kn.a.createElement(dg, {
                className: qd.a.status
            }, Kn.a.createElement(Dg, {
                className: qd.a.progressBar,
                id: e.id,
                duration: e.duration
            })), Kn.a.createElement(dg, {
                className: qd.a.duration
            }, Kn.a.createElement("span", {
                className: qd.a.duration
            }, p(e.duration))), Kn.a.createElement(dg, {
                className: zd.a.buttons,
                onMouseEnter: function() {
                    return B(e)
                }
            }, Kn.a.createElement(Lu, {
                className: zd.a.loading,
                isLoading: !0 === M[e.id]
            }, Kn.a.createElement(Zd, {
                toggleClassName: zd.a.dropdownToggle,
                isLoadingItems: $[e.id]
            }, S[e.id] && Kn.a.createElement(eg, {
                onClick: j(e)
            }, g("myTv.table.rows.fromBeginning")), !C[e.id] && Kn.a.createElement(eg, {
                onClick: F(e)
            }, e.isProtected ? g("myTv.table.rows.unprotect") : g("myTv.table.rows.protect")), Kn.a.createElement(eg, {
                onClick: V(e)
            }, g(k ? "myTv.table.rows.cancel" : "myTv.table.rows.delete")))))))
        }))))
    }
    function xg() {
        var e = Object(Zn.e)("$filter", "goSvcUniapiPvr", "goSvcCookies", "goSvcUserStatus", "goMdlMyTvSvcMyTv")
          , t = Fe()(e, 5)
          , n = t[0]
          , a = t[1]
          , r = t[2]
          , o = t[3]
          , i = t[4]
          , c = n("translate")
          , s = n("goFltrDuration")
          , l = n("goMdlMyTvFltrRecordingDate")
          , u = Object(Zn.c)()
          , d = Object(Zn.d)("COMPONENT", "RemoteRecordings")
          , g = Object(Qn.useState)(!1)
          , p = Fe()(g, 2)
          , m = p[0]
          , f = p[1]
          , h = Object(Qn.useState)(!1)
          , v = Fe()(h, 2)
          , y = v[0]
          , S = v[1]
          , b = Object(Qn.useState)([])
          , E = Fe()(b, 2)
          , T = E[0]
          , C = E[1]
          , P = "recordings-programmed" === i.getPath();
        function I() {
            return function(e) {
                return Eg.apply(this, arguments)
            }(P).then(C).catch(d.error)
        }
        Object(Qn.useEffect)(function() {
            u && I()
        }, [u]),
        Object(Qn.useEffect)(function() {
            T.length && f(r.get("pvrMyTvNotification") !== Mt.a.MD5(o.profile.id.toString()).toString())
        }, [T]);
        var A = Object(Qn.useCallback)(function(e) {
            return Ma()(Ia.a.mark(function t() {
                var n, r, o;
                return Ia.a.wrap(function(t) {
                    for (; ; )
                        switch (t.prev = t.next) {
                        case 0:
                            return S(!0),
                            t.prev = 1,
                            t.next = 4,
                            Ng(e, P);
                        case 4:
                            I(),
                            t.next = 14;
                            break;
                        case 7:
                            t.prev = 7,
                            t.t0 = t.catch(1),
                            n = t.t0.error,
                            r = t.t0.code,
                            o = void 0 === r ? -1 : r,
                            a.isCancelError(o) ? Lg(n) : I(),
                            d.error(n);
                        case 14:
                            return t.prev = 14,
                            S(!1),
                            t.finish(14);
                        case 17:
                        case "end":
                            return t.stop()
                        }
                }, t, this, [[1, 7, 14, 17]])
            }))
        }, [T]);
        return Kn.a.createElement(Kn.a.Fragment, null, T && T.length > 0 && Kn.a.createElement(og, null, m && Kn.a.createElement(ig, {
            onClose: function() {
                f(!1),
                r.createSessionCookie("pvrMyTvNotification", Mt.a.MD5(o.profile.id.toString()).toString())
            }
        }, c("myTv.recordings.notification")), Kn.a.createElement(cg, {
            className: [zd.a.header, qd.a.header]
        }, Kn.a.createElement(lg, {
            className: zd.a.row
        }, Kn.a.createElement(ug, {
            className: zd.a.channel
        }, c("myTv.table.titles.channel")), Kn.a.createElement(ug, {
            className: qd.a.title
        }, c("myTv.table.titles.title")), Kn.a.createElement(ug, {
            className: qd.a.duration
        }, Kn.a.createElement("span", {
            className: qd.a.center
        }, c("myTv.table.titles.duration"))), Kn.a.createElement(ug, {
            className: zd.a.recording
        }, Kn.a.createElement("span", {
            className: qd.a.center
        }, c("myTv.table.titles.recordingDate"))), Kn.a.createElement(ug, {
            className: zd.a.cancel
        }))), Kn.a.createElement(sg, {
            className: zd.a.body
        }, T.map(function(e) {
            return Kn.a.createElement(Kn.a.Fragment, {
                key: e.id
            }, Kn.a.createElement(lg, {
                className: zd.a.row
            }, Kn.a.createElement(dg, {
                className: zd.a.channel
            }, Kn.a.createElement(yu, {
                src: e.logo,
                className: "go-image",
                alt: e.programName,
                title: e.programName,
                align: "center",
                position: "portrait"
            }), P && Kn.a.createElement(La, {
                className: zd.a.type,
                scheduleId: e.scheduleId,
                epgProgramId: e.programId,
                liveChannelId: e.channelId,
                startTime: e.startTime,
                showIsConflicted: !1
            })), Kn.a.createElement(dg, {
                className: ra()([qd.a.cell, qd.a.title, !P && zd.a.big])
            }, Kn.a.createElement("span", {
                className: qd.a.title
            }, e.programName)), Kn.a.createElement(dg, {
                className: qd.a.duration
            }, Kn.a.createElement("span", {
                className: qd.a.duration
            }, s(e.duration))), Kn.a.createElement(dg, {
                className: zd.a.recording
            }, Kn.a.createElement("div", {
                className: zd.a.recording
            }, !0 === e.conflicted && Kn.a.createElement(La, {
                className: zd.a.center,
                scheduleId: e.scheduleId,
                epgProgramId: e.programId
            }), e.isFirstEpisode && Kn.a.createElement("span", {
                className: zd.a.center
            }, c("myTv.table.rows.nextEpisode")), Kn.a.createElement("span", {
                className: zd.a.center
            }, l(e, P)))), Kn.a.createElement(dg, {
                className: zd.a.buttons
            }, Kn.a.createElement("button", {
                className: ra()([qd.a.remove, !y && "enabled"]),
                onClick: A(e)
            }, Kn.a.createElement("i", {
                className: "".concat(qd.a.removeIcon, " go-glyphicon go-glyphicon-cross")
            }), c(P ? "myTv.table.rows.cancel" : "myTv.table.rows.delete")))))
        }))))
    }
    function jg(e) {
        return function(t, n) {
            var a = e("goFltrDateUniapi");
            return n ? a(t.startTime, "dd/MM/yyyy | HH:mm") + a(t.endTime, " - HH:mm") : a(t.startTime, "dd/MM/yyyy")
        }
    }
    function Bg(e, t, n, a, r, o, i) {
        "ngInject";
        var c = [{
            name: "myTv.sections.watched",
            link: "watched",
            buttonText: "myTv.buttonLinks.contents",
            buttonLink: "./",
            emptyUpperText: "myTv.empty.emptyWatchedUpperText",
            emptyLowerText: "myTv.empty.emptyWatchedLowerText",
            eventSection: "WATCHLOG"
        }, {
            name: "myTv.sections.watchlist",
            link: "watchlist",
            buttonText: "myTv.buttonLinks.contents",
            buttonLink: "./",
            emptyUpperText: "myTv.empty.emptyWatchlistUpperText",
            emptyLowerText: "myTv.empty.emptyWatchlistLowerText",
            eventSection: "WISHLIST"
        }, {
            name: "myTv.sections.follow",
            link: "follow",
            buttonText: "myTv.buttonLinks.contents",
            buttonLink: "./",
            emptyUpperText: "myTv.empty.emptyFollowUpperText",
            emptyLowerText: "myTv.empty.emptyFollowLowerText",
            eventSection: "FOLLOW"
        }, {
            name: "myTv.sections.recordingsProgrammed",
            link: "recordings-programmed",
            buttonText: "myTv.buttonLinks.guide",
            buttonLink: "./tv-guide",
            emptyUpperText: "myTv.empty.emptyRecordingsProgrammedUpperText",
            emptyLowerText: "myTv.empty.emptyRecordingsProgrammedLowerText",
            eventSection: "SCHEDULEDRECORDINGS"
        }, {
            name: "myTv.sections.recordingsAvailable",
            link: "recordings-available",
            buttonText: "myTv.buttonLinks.guide",
            buttonLink: "./tv-guide",
            emptyUpperText: "myTv.empty.emptyRecordingsAvailableUpperText",
            emptyLowerText: "myTv.empty.emptyRecordingsAvailableLowerText",
            eventSection: "AVAILABLERECORDINGS"
        }, {
            name: "myTv.sections.rented",
            link: "rented",
            buttonText: "myTv.buttonLinks.rented",
            buttonLink: "./",
            emptyUpperText: "myTv.empty.emptyRentedUpperText",
            emptyLowerText: "myTv.empty.emptyRentedLowerText",
            eventSection: "RENTAL"
        }];
        function s(t, n, a) {
            return c.filter(function(r) {
                return "rented" === r.link && a && (r.buttonLink = e("goFltrDetailsLink")(a)),
                "rented" === r.link && t || "recordings-programmed" === r.link && n || "recordings-available" === r.link && n || ["rented", "recordings-programmed", "recordings-available"].indexOf(r.link) < 0
            })
        }
        return {
            isPvrUserActive: function() {
                return a.isPvrEnabled()
            },
            getSections: function() {
                return t.all([r.isTvodEnabled(), a.isPvrServiceAvailable(), i.isAvailableForUser()]).then(function(e) {
                    var t = Fe()(e, 3)
                      , n = t[0]
                      , a = t[1]
                      , r = t[2]
                      , i = a && r;
                    return o.getTvod().then(function(e) {
                        return s(n, i, e)
                    }).catch(function() {
                        return s(n, i)
                    })
                })
            },
            getSection: function(e) {
                return c.filter(function(t) {
                    return t.link === e
                })[0]
            },
            getPath: function() {
                return n.path().substr(n.path().lastIndexOf("/") + 1)
            }
        }
    }
    jg.$inject = ["$filter"],
    Bg.$inject = ["$filter", "$q", "$location", "goSvcUniapiPvr", "goSvcUniapiParameter", "goSvcLibrary", "goSvcUniapiLive"];
    n(477);
    var Fg = r.a.module("goMdlMyTv", []).config(Pd).component("goMdlMyTvCmpMainScreen", Md).component("goMdlMyTvCmpProgressBar", $d).component("goMdlMyTvCmpRecordings", Object(_n.a)(function() {
        var e = Object(Zn.e)("goSvcUniapiPvr")
          , t = Fe()(e, 1)[0]
          , n = Object(Zn.c)()
          , a = Object(Qn.useState)()
          , r = Fe()(a, 2)
          , o = r[0]
          , i = r[1];
        return Object(Qn.useEffect)(function() {
            n && t.isCloudPvrEnabled().then(function(e) {
                i(e)
            })
        }, [n]),
        f()(o) ? null : o ? Kn.a.createElement(kg, null) : Kn.a.createElement(xg, null)
    })).component("goMdlMyTvCmpRented", Od).component("goMdlMyTvCmpTable", jd).component("goMdlMyTvCmpTitle", Hd).constant("goMdlMyTvCnstMyTv", gg).filter("goMdlMyTvFltrRecordingDate", jg).factory("goMdlMyTvSvcMyTv", Bg).name;
    function Vg(e, t, n, a, r, i, c, s, l, u, d, g) {
        "ngInject";
        var p = o.caTypes.CONTENT_TYPES
          , m = u.goType;
        return {
            open: function(u, h) {
                var v = h.url
                  , y = l.getPcExternalUrl(h.externalUrls);
                if (n.isNetflixContent(h))
                    return n.redirect(h);
                if (d.isAmazonChannel(h))
                    return u.preventDefault(),
                    d.amazonCatchupFlow(h);
                if (y)
                    return !l.openLinkInNewTab(u, y);
                v && v.length || (function(e) {
                    var t = [g.CatalogItemType.None];
                    return a.isPresent(t, "catalogItemType")(e)
                }(h) ? f("home.popupError") : h.goType === m.LiveChannel ? function(n) {
                    var a = (n.startDate || i.getTime()) + 1;
                    c.liveSchedule().get({
                        starttime: a,
                        endtime: a,
                        livechannelpids: o.caUtils.toPid(p.LIVE_CHANNEL, n.productId)
                    }).then(function(t) {
                        if (!(t && t.some(function(e) {
                            if (e.liveChannelId === n.productId)
                                return s.redirect(e.pid, e.name),
                                !0
                        })))
                            return e.reject()
                    }).catch(f).finally(function() {
                        return t.$evalAsync()
                    })
                }(h) : h.goType === m.VodChannel && r.openError({
                    title: "common.error.title",
                    message: "home.error.service",
                    accept: "common.accept"
                }));
                return !1
            }
        };
        function f(e) {
            r.openInfo({
                message: e || "editors.liveChannelError",
                accept: "common.accept"
            })
        }
    }
    function Hg(e, t, n, a, r, i, c, s, l, u) {
        "ngInject";
        var d = l.goType
          , g = t("goFltrDetailsLink");
        return {
            isPlayAvailable: function(e) {
                return e.goType === d.LiveChannel ? c.isLoggedIn ? h(e) : se.isDefined(e.isPlayback) ? e.isPlayback : f(e) : c.isLoggedIn ? h(e) : f(e)
            },
            play: function(t) {
                v(t) || t.goType !== d.LiveChannel ? p(t).then(function(e) {
                    return u.playLiveChannel(e)
                }).catch(e.when) : u.playLiveChannelWithoutSchedule(t).catch(e.when)
            },
            isRestartAvailable: function(t) {
                return (v(t) ? p(t) : e.when(t)).then(function(e) {
                    return u.isRestartLiveButtonVisible(e)
                })
            },
            playFromBeginning: function(t) {
                p(t).then(function(e) {
                    return u.playLiveChannelFromBeginning(e)
                }).catch(e.when)
            },
            getChannelLink: function(e) {
                return s.getChannel(e).then(function(e) {
                    return g(e)
                })
            }
        };
        function p(t) {
            var i = n.getTime() + 1
              , c = o.caUtils.toPid(o.caTypes.CONTENT_TYPES.LIVE_CHANNEL, m(t));
            return a.liveSchedule().get({
                starttime: i,
                endtime: i,
                livechannelpids: c
            }).then(function(e) {
                return r.getScheduleByPid(e[0].pid)
            }).catch(function() {
                return e.when({})
            })
        }
        function m(e) {
            return e.liveChannelId || e.productId
        }
        function f(t) {
            return i.getChannelById(m(t)).then(function(e) {
                return e.isPlayback
            }).catch(function() {
                return e.when(!1)
            })
        }
        function h(t) {
            return i.getUserChannelById(m(t)).then(function(e) {
                return e.urlList.length > 0
            }).catch(function() {
                return e.when(!1)
            })
        }
        function v(e) {
            return o.caUtils.isType(e.pid, o.caTypes.CONTENT_TYPES.CONTENT_LINK)
        }
    }
    function Gg(e, t) {
        "ngInject";
        return {
            getMinPricingModelForContent: function(n) {
                return e.contentPricingModels(n).get().then(function(e) {
                    var n = t.profile.type;
                    return e.filter(function(e) {
                        var t = e.isRecurring
                          , a = e.userType;
                        return !t && a === n
                    }).sort(function(e, t) {
                        return e.value - t.value
                    })[0]
                })
            }
        }
    }
    function Wg(e, t, n, a, r, o, i) {
        "ngInject";
        return {
            isPlayAvailable: function(n) {
                return i.isExpired(n.licenseEnd) ? e.resolve(!1) : e.all([c(n), t.hasResumeInformation(n)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && !a
                })
            },
            isResumeAvailable: function(n) {
                return i.isExpired(n.licenseEnd) ? e.resolve(!1) : e.all([c(n), t.hasResumeInformation(n)]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return n && a
                })
            },
            play: function(e) {
                return t.playMovie(e)
            },
            resume: function(e) {
                return t.resumeMovie(e)
            },
            isPlayTrailerAvailable: function(e) {
                return !e.isExternalCATCHUP && e.trailerIds.length > 0 && !e.hasPlaybackRights
            },
            playTrailer: function(e) {
                n.playTrailer(e)
            },
            getMovie: function(e) {
                return t.getMovie(e.productId).then(function(t) {
                    return s(e, t)
                })
            },
            getDistributorInfo: function(t) {
                var n = B()(t.distributor) ? t.distributor.title : t.distributor;
                return n ? o.getChannelByCallLetter(n).then(function(e) {
                    var t = e.logo
                      , n = e.l7dProviderId;
                    return {
                        logo: t,
                        l7dProviderId: n
                    }
                }).catch(function() {
                    return e.when({})
                }) : e.when({})
            },
            getEpisode: function(e) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e;
                return t.getEpisode(e.productId).then(function(e) {
                    return s(n, e)
                })
            }
        };
        function c(n) {
            return a.isLoggedIn ? t.isPlayButtonVisible(n) : e.when(!1)
        }
        function s(e, t) {
            return Object.assign(t, {
                contentWiseParams: r.getDeepProperty(e, "analyticsData.contentWise")
            })
        }
    }
    Vg.$inject = ["$q", "$rootScope", "goSvcNetflix", "goSvcUtils", "goMdlPopUpsSvcManager", "goSvcTime", "goSvcCaLive", "goSvcLiveDetail", "goSvcThirdParty", "goCnstEnumerated", "goSvcAmazon", "uaConstants"],
    Hg.$inject = ["$q", "$filter", "goSvcTime", "goSvcCaLive", "goSvcSchedules", "goSvcLiveChannels", "goSvcUserStatus", "goSvcLibrary", "goCnstEnumerated", "goSvcDetails"],
    Gg.$inject = ["goSvcCaPurchase", "goSvcUserStatus"],
    Wg.$inject = ["$q", "goSvcDetails", "goSvcPlayback", "goSvcUserStatus", "goSvcUtils", "goSvcLiveChannels", "goSvcTime"];
    var qg = r.a.module("goMdlPlacards", []).component("goMdlPlacardsCmpContent", Object(_n.a)(Ju)).factory("goMdlPlacardsSvcLink", Vg).factory("goMdlPlacardsSvcLive", Hg).factory("goMdlPlacardsSvcPurchase", Gg).factory("goMdlPlacardsSvcVod", Wg).name
      , Yg = n(272)
      , zg = {
        template: n.n(Yg).a
    };
    function Qg(e, t, n, a, r, o, i, c, s) {
        var l, u, d, g = c.EVENTS, p = {};
        function m() {
            n.setup(),
            o.trackPrepareEnd()
        }
        function f() {
            n.stop(),
            a.trackEvent("player::stop"),
            Object.keys(p).forEach(function(e) {
                p[e] && p[e](),
                p[e] = null
            }),
            r.removeSessionId()
        }
        function h() {
            var e = i.get("playingType")
              , r = e === s.goPlayingType.vod
              , c = e === s.goPlayingType.live
              , l = r && 0 === parseInt(t.getCurrentTime(), 10) || c && !u ? "player::play" : "player::resume";
            !u && (u = !0),
            a.trackEvent(l),
            n.sendJoin(),
            d || (d = !0,
            o.trackRenderEnd(),
            o.end())
        }
        function v() {
            n.endJoin(),
            l || (o.trackInitialBufferingEnd(),
            l = !0)
        }
        return {
            init: function() {
                return n.init().then(n.startJoin)
            },
            addListeners: function() {
                i.get("playingType") !== s.goPlayingType.trailer && (r.createSessionId(),
                o.trackRenderStart(),
                o.trackPrepareStart(),
                l = !1,
                d = !1,
                u = !1,
                p[g.CREATED] = e.$on(g.CREATED, m),
                p[g.BUFFERING_START] = e.$on(g.BUFFERING_START, function() {
                    return a.trackEvent("player::buffering")
                }),
                p[g.CANPLAY] = e.$on(g.CANPLAY, v),
                p[g.DESTROYED] = e.$on(g.DESTROYED, f),
                p[g.PLAYING] = e.$on(g.PLAYING, h),
                p[g.MANIFEST_START] = e.$on(g.MANIFEST_START, o.trackManifestStart),
                p[g.MANIFEST_END] = e.$on(g.MANIFEST_END, o.trackManifestEnd),
                p[g.LICENSE_REQUEST_START] = e.$on(g.LICENSE_REQUEST_START, o.trackDrmStart),
                p[g.LICENSE_REQUEST_END] = e.$on(g.LICENSE_REQUEST_END, o.trackDrmEnd),
                p[g.LOADEDMETADATA] = e.$on(g.LOADEDMETADATA, o.trackInitialBufferingStart),
                p[g.PAUSE] = e.$on(g.PAUSE, function() {
                    return a.trackEvent("player::pause")
                }),
                p[g.SEEKED] = e.$on(g.SEEKED, function() {
                    return a.trackEvent("player::seek")
                }))
            }
        }
    }
    function Kg(e) {
        "ngInject";
        return {
            trailers: function(t) {
                return o.caInterface.api.rest(o.caTypes.ROUTES.CONTENTS, {
                    fields: "Pid,PublicUrl,Quality,StreamingType,DRMType",
                    pids: t
                }, {
                    response: {
                        formatter: e.get("goModelCaMedia")
                    }
                })
            }
        }
    }
    function Xg(e, t, n, a, o, i, c, s, l, d, g, p, m, f) {
        "ngInject";
        var h, v, y, S = d.getLogger("SERVICE", "goMdlPlayerSvcCc"), b = f.EVENTS, E = p.goPlayingType, T = E.live, C = E.fabrixLive, P = g.player.timeouts.live.manifestRequest, I = p.goType.LiveProgram, A = m.PlayType.SS, M = p.player, N = M.dash, w = M.smoothStreaming, L = [];
        return {
            getSubtitles: function() {
                return L
            },
            getSubtitleId: D,
            getLiveLanguages: function(e) {
                var a, o = e[0].url;
                a = e[0].playType === A ? w : N;
                return n.get(o, {
                    timeout: P
                }).then(function(e) {
                    var n = (new DOMParser).parseFromString(e.data, "application/xml");
                    if ("parsererror" === n.documentElement.nodeName)
                        return t.reject();
                    for (var o = r.a.element(n).find(a.track), i = [], c = [], s = 0; s < o.length; s++) {
                        var l = o[s]
                          , d = l.getAttribute(a.type).toLowerCase();
                        if (d === a.subtitle || d === a.subtitleVspp) {
                            var g = Object(u.b)(l.getAttribute(a.lang));
                            i.push({
                                code: g
                            })
                        } else if (d === a.audio) {
                            var p = Object(u.b)(l.getAttribute(a.lang));
                            c.push(p)
                        }
                    }
                    return {
                        audios: c,
                        subtitles: i
                    }
                }).catch(function(e) {
                    return S.debug("could not get live audios and subtitles", e),
                    {
                        audios: [],
                        subtitles: []
                    }
                })
            },
            getDefaultLanguages: U,
            init: function() {
                return h = e.$on(b.SUBTITLE_CHANGED, O),
                v = e.$on(b.AUDIO_CHANGED, _),
                y = e.$on(b.DESTROYED, $),
                n = i.get("product"),
                r = (n.subtitles || []).map(function(e) {
                    return a.GetSubtitle({
                        movieId: n.id,
                        subtitleId: e.id
                    }).catch(function() {
                        return t.when({})
                    })
                }),
                t.all(r).then(function(e) {
                    L = e.filter(function(e) {
                        return Object.keys(e).length
                    }).map(function(e) {
                        return c.getDeepProperty(e, "data.Content", {})
                    }).map(function(e) {
                        var t = Object(u.b)(n.subtitles.find(function(t) {
                            var n = t.id;
                            return e.ID === n
                        }).code);
                        return {
                            id: e.ID,
                            code: t,
                            text: t,
                            data: {
                                start: c.getDeepProperty(e, "Subtitles.Start", -1),
                                txt: c.getDeepProperty(e, "Subtitles.Txt", "")
                            }
                        }
                    })
                });
                var n, r
            }
        };
        function $() {
            h && h(),
            v && v(),
            y && y()
        }
        function R(e) {
            if ((a = i.get("playingType")) === T || a === C) {
                var t = (i.get("channel") || {}).id;
                l.set(t, e.audioCode, e.textCode)
            } else {
                var n = i.get("resumeData");
                n && Object.assign(n, e)
            }
            var a
        }
        function D(e) {
            var t = (i.get("product") || {}).subtitles;
            return ((void 0 === t ? [] : t).find(function(t) {
                return Object(u.b)(t.code) === e
            }) || {}).id
        }
        function _() {
            var e = Object(u.b)(o.getSelectedAudioLanguage());
            s.trackEvent("player::audio", {
                ISO: e
            });
            var t = function(e) {
                return U().map(function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , n = Fe()(t, 2)
                      , a = n[0]
                      , r = n[1];
                    if (a === e)
                        return o.getTextLanguages().map(u.b).find(function(e) {
                            return r === e
                        })
                }).filter(function(e) {
                    return e
                })[0]
            }(e);
            t && o.selectTextLanguage(t);
            var n = D(t);
            e && R({
                audioCode: e,
                textCode: t,
                subtitleId: n
            })
        }
        function O() {
            var e = Object(u.b)(o.getSelectedTextLanguage())
              , t = Object(u.b)(o.getSelectedAudioLanguage())
              , n = D(e);
            s.trackEvent("player::subtitle", {
                SUBTITLEID: n || -1,
                ISO: e
            }),
            e && R({
                audioCode: t,
                textCode: e,
                subtitleId: n
            })
        }
        function U() {
            var e = i.get("product");
            return e.goType === I && (e = i.get("channel")),
            e.defaultLanguagesOrder ? e.defaultLanguagesOrder.split(",").map(function(e) {
                return e.split("|").map(function(e) {
                    return e.trim()
                })
            }) : [[]]
        }
    }
    function Jg(e, t, n, a, r, o, i, c, s, l, u, d) {
        "ngInject";
        var g, p, m = s.go.uniapi.player, f = u.EVENTS, h = m.widevineProxy, v = a.getProperty(h, "defaultEnv", ""), y = a.getProperty(h, l.env, v), S = m.recoverableErrorWaitingTime, b = m.validErrorCodes, E = m.ignoredErrorCodes, T = m.networkErrorRecover, C = /Manifest/i, P = {}, I = !1, A = !1;
        function M() {
            g && (t.cancel(g),
            g = null)
        }
        function N(e) {
            var t = a.getDeepProperty(e, "detail.status");
            return !b.some(function(e) {
                return e === t
            }) && !function(e) {
                var t = a.getDeepProperty(e, "detail.message", "")
                  , n = T.messages.some(function(e) {
                    return -1 !== t.toUpperCase().indexOf(e)
                })
                  , r = T.descriptions.some(function(e) {
                    return -1 !== t.toUpperCase().indexOf(e)
                });
                return n && r
            }(e)
        }
        function w() {
            r.openError({
                title: "player.error.title",
                message: "player.error.general",
                accept: "common.accept"
            }).result.finally(d.checkError)
        }
        function L(e, r) {
            function s() {
                i.sendErrorLegacy(r),
                c.trackShakaLegacyError(r),
                p(),
                w()
            }
            if (m = r,
            f = a.getDeepProperty(m, "detail.status", -1),
            !E.some(function(e) {
                return e === f
            })) {
                if (l = r,
                u = a.getDeepProperty(l, "detail.stack", ""),
                d = a.getDeepProperty(l, "detail.url", ""),
                (u.indexOf("LicenseRequest") >= 0 || d === o.get("licenseUrl")) && A)
                    return;
                N(r) || function(e) {
                    var t = a.getDeepProperty(e, "detail.url", "");
                    return -1 !== t.indexOf(y) || C.test(t) && 0 === n.getLastCurrentTime()
                }(r) ? s() : I && !g && (g = t(s, S, !1))
            }
            var l, u, d, m, f
        }
        function $() {
            Object.keys(P).forEach(function(e) {
                P[e] && P[e](),
                P[e] = null
            }),
            t.cancel(g),
            g = null
        }
        function R(e) {
            I = e
        }
        function D(e) {
            A = e
        }
        return {
            init: function(e) {
                p = e
            },
            addListeners: function() {
                P[f.SHAKA_ERROR] = e.$on(f.SHAKA_ERROR, L),
                P[f.PROGRESS] = e.$on(f.PROGRESS, M),
                P[f.DESTROYED] = e.$on(f.DESTROYED, $),
                P[f.BUFFERING_START] = e.$on(f.BUFFERING_START, R.bind(null, !0)),
                P[f.BUFFERING_END] = e.$on(f.BUFFERING_END, R.bind(null, !1)),
                P[f.LICENSE_REQUEST_START] = e.$on(f.LICENSE_REQUEST_START, D.bind(null, !1)),
                P[f.LICENSE_REQUEST_END] = e.$on(f.LICENSE_REQUEST_END, D.bind(null, !0)),
                R(!0)
            },
            onAbort: function(e) {
                c.trackError(e),
                p(),
                e instanceof Error || w()
            }
        }
    }
    function Zg(e, t, n, a, r, o, i, c) {
        "ngInject";
        var s, l, u, d = [], g = i.EVENTS, p = r.getLogger("SERVICE", "goMdlPlayerSvcError");
        return {
            addListeners: function() {
                var t = e.$on(g.SHAKA_ERROR, h)
                  , n = e.$on(g.DESTROYED, m);
                u = e.$on(g.PLAYING, f),
                d.push(t),
                d.push(n),
                d.push(u)
            },
            onAbort: function(e) {
                a.trackShakaError(e),
                o.sendError(e),
                s(),
                e instanceof Error || v()
            },
            init: function(e) {
                s = e,
                l = !1
            }
        };
        function m() {
            d.forEach(function(e) {
                Ka()(e) && e()
            })
        }
        function f() {
            l = !0
        }
        function h(e, n) {
            var r = t.getShakaPlayer();
            !l || r.isBuffering() ? (p.debug("Shaka error unrecoverable, closing player", n),
            o.sendError(n),
            a.trackShakaError(n),
            s(),
            v()) : (p.debug("Shaka error with buffer, player should continue", n),
            r.retryStreaming())
        }
        function v() {
            n.openError({
                title: "player.error.title",
                message: "player.error.general",
                accept: "common.accept"
            }).result.finally(c.checkError)
        }
    }
    function ep(e, t, n, a, r, o, i, c, s, l, d, g, p) {
        "ngInject";
        var m, h, v, y, S, b = i.getLogger("SERVICE", "go.svc.heartbeat"), E = g.goPlayingType, T = p.EVENTS, C = null;
        return {
            addListeners: function(a) {
                c.isLoggedIn && s.get("playingType") !== E.trailer && (S = a,
                v = n.$on(T.PLAYING, function() {
                    (function() {
                        var n = s.get("playingType")
                          , a = n === E.vod ? M : n === E.recording ? w : N;
                        h || (I(),
                        h = t.defer(),
                        P() > 0 ? (a(),
                        C = e(function() {
                            a()
                        }, P(!0))) : C = !1);
                        return h.promise
                    }
                    )().then(R)
                }),
                y = n.$on(T.DESTROYED, function() {
                    L(),
                    v && v(),
                    y && y()
                }))
            }
        };
        function P(e) {
            return f()(m) && (m = r.get("PlaybackHeartbeatInterval") || 0),
            e ? o.toTimestamp(m) : m
        }
        function I() {
            C && e.cancel(C),
            C = null,
            h = null
        }
        function A(e) {
            o.getDeepProperty(e, "data.Content", !0) || (h.resolve(),
            L(),
            b.debug("Heartbeat", "concurrent user"))
        }
        function M() {
            var e = s.get("product")
              , t = l.getCurrentMedia();
            return a.PlaybackHeartBeatVod({
                mediaId: t.mediaQualityId,
                movieId: e.productId,
                playbackHeartBeat: P(),
                playbackTime: $(!0),
                mediaType: "movie"
            }).then(A)
        }
        function N() {
            var e = s.get("product")
              , t = l.getCurrentMedia();
            return a.PlaybackHeartBeatLive({
                channelCallLetter: e.callLetter,
                channelId: e.liveChannelId,
                liveStreamId: t.heartbeatId,
                liveStreamQualityName: t.text,
                playbackHeartBeat: P(),
                mediaType: "live"
            }).then(A)
        }
        function w() {
            var e = s.get("product")
              , t = Object(u.b)(l.getSelectedTextLanguage())
              , n = Object(u.b)(l.getSelectedAudioLanguage());
            return a.PlaybackHeartBeatRecording({
                recordingId: e.id,
                playbackHeartBeat: P(),
                playbackTime: $(!0),
                subtitleCode: t,
                audioCode: n
            }).then(A)
        }
        function L() {
            s.get("playingType") !== E.trailer && I()
        }
        function $(e) {
            var t = l.getCurrentTime();
            return e ? Math.trunc(t) : t
        }
        function R() {
            S(),
            d.openWarning({
                title: "player.concurrencyControlTitle",
                message: "player.concurrencyControlBody",
                accept: "common.accept"
            })
        }
    }
    function tp(e, t, n, a, r, o) {
        var i, c, s, l = n.l7dFix, u = a.EVENTS, d = o.getLogger("SERVICE", "goMdlPlayerSvcL7dFix");
        return {
            addListeners: function() {
                g() && (d.debug("Listeners added"),
                i = e.$on(u.TIMEUPDATE, p),
                c = e.$on(u.DESTROYED, m))
            },
            init: function(e) {
                g() && (s = e,
                d.debug("Init"))
            }
        };
        function g() {
            var e = r.get("product");
            return l.isEnabled && e.isNetworkCATCHUP
        }
        function p() {
            t.getDuration() - t.getCurrentTime() < l.lastSecondsToClose && (d.debug("Closing player because last X seconds has been reached."),
            Ka()(s) && s())
        }
        function m() {
            Ka()(i) && i(),
            Ka()(c) && c(),
            d.debug("Listeners removed")
        }
    }
    function np(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d = l.go.uniapi.player
          , g = d.widevineProxy
          , p = d.playreadyServer
          , m = d.widevineServer
          , f = u.transparentProviders;
        function h() {
            var e = a.get("initialQuality").customData
              , n = l.go.goMdlPlayer.transparentCatchup;
            return t.browser.pc.edge ? e : btoa([e, "keyid=".concat(o.getKID()), "operatorID=".concat(n.HBOOperatorId), "countryID=".concat(n.HBOCountryId)].join("|"))
        }
        return {
            getUrl: function() {
                var e, r = a.get("initialQuality");
                if (a.get("product").isTransparentCATCHUP)
                    e = r.laUrl;
                else if (t.browser.pc.edge) {
                    var o = n.getProperty(p, "defaultEnv", "");
                    e = n.getProperty(p, c.env, o)
                } else if (s.isNew()) {
                    var i = n.getProperty(m, "defaultEnv", "");
                    e = n.getProperty(m, c.env, i)
                } else {
                    var l = n.getProperty(g, "defaultEnv", "");
                    e = n.getProperty(g, c.env, l)
                }
                return a.set("licenseUrl", e),
                e
            },
            getCustomData: function() {
                var e, n = a.get("product"), r = n.transparentProvider === f.HBO && t.browser.pc.edge, o = !n.isTransparentCATCHUP && t.browser.pc.edge;
                return r ? e = h() : o && (e = i.token),
                e
            },
            beforeQualityChange: function() {
                var n = a.get("product").transparentProvider === f.HBO
                  , i = e.when();
                return n && (i = r.getMediasVod(!0).then(function() {
                    t.browser.pc.edge && o.setCustomData(h())
                })),
                i
            },
            configureHBOCustomDataIfEdge: function() {
                var e = a.get("product").transparentProvider
                  , n = t.browser.pc.edge;
                e === f.HBO && n && o.setCustomData(h())
            },
            getLicenseRequestPreprocessor: function() {
                return function(e) {
                    var n = a.get("product")
                      , r = e.headers || e.parameters.requestHeaders
                      , o = n.transparentProvider
                      , c = t.browser.pc.edge
                      , l = !n.isTransparentCATCHUP
                      , u = o === f.HBO;
                    l ? c ? s.isNew() ? (delete r.SOAPAction,
                    r["x-authentication"] = i.token) : r["content-type"] = "text/xml" : r["x-authentication"] = i.token : u && (c ? r["content-type"] = "text/xml" : r["dt-custom-data"] = h())
                }
            }
        }
    }
    function ap(e, t, n, a, r, o, i, c, s, l) {
        var u, d, g = c.goPlayingType, p = l.EVENTS;
        function m() {
            d = t(function() {
                var e, t, c, s;
                r.get("playingType") === g.live && a.getTime() > r.get("product").endTime && (e = a.getTime(),
                t = r.get("product"),
                c = r.get("channel").id,
                (s = n.getNextProgram(e, c)) && (Object.assign(t, s),
                o.updateProgramInfo(t, i.toTimestamp(s.startTime), i.toTimestamp(s.endTime))))
            }, s.go.goMdlPlayer.scheduleUpdateInterval)
        }
        return {
            addListeners: function() {
                m(),
                u = e.$on(p.DESTROYED, function() {
                    u && u(),
                    u = null,
                    d && t.cancel(d),
                    d = null
                })
            }
        }
    }
    function rp(e, t, n, a, r, i, c, s, l, u, d, g, p, m, h, v, y, S, b, E, T, C, P, I, A, M, N, w, L, $, R, D) {
        "ngInject";
        var _, O, U = N.goPlayingType, k = M.player, x = k.timeouts, j = w.EVENTS, B = {};
        return {
            checkFirefoxMac: q,
            destroy: function(e) {
                d.saveResumeData(),
                H(e),
                Object.keys(B).forEach(function(e) {
                    B[e] && B[e](),
                    B[e] = null
                })
            },
            playLiveChannel: z,
            playTrailer: function(t) {
                return _ = t,
                e.all([p.init(), G()]).then(r.getMediasTrailer).then(A.getInitialVodLanguage).then(function(e) {
                    var t = e.medias
                      , n = e.audioCode;
                    return V(),
                    i.startPlayback("video", {
                        medias: t,
                        isNewShaka: P.isNew(),
                        licenseUrl: l.getUrl(),
                        product: s.get("product"),
                        initialQualityValue: s.get("initialQuality").mediaQualityId,
                        shakaConfig: F(U.trailer),
                        licenseRequestPreprocessor: l.getLicenseRequestPreprocessor(),
                        customData: l.getCustomData(),
                        beforeQualityChange: l.beforeQualityChange,
                        initialAudioLanguage: n,
                        texts: C.get()
                    })
                }).catch(function(e) {
                    return O ? O.onAbort(e) : Y(e)
                })
            },
            playVod: function(t) {
                _ = t,
                e.all([p.init(), g.init(), I.init(H), G()]).then(function() {
                    return r.getMediasVod(!0)
                }).then(A.getInitialVodLanguage).then(function(e) {
                    var t = e.medias
                      , n = e.audioCode
                      , a = e.subtitleCode
                      , r = e.defaultLanguagesOrder;
                    return V(),
                    i.startPlayback("video", {
                        medias: t,
                        licenseUrl: l.getUrl(),
                        isNewShaka: P.isNew(),
                        product: s.get("product"),
                        initialQualityValue: s.get("initialQuality").mediaQualityId,
                        shakaConfig: F(U.vod),
                        licenseRequestPreprocessor: l.getLicenseRequestPreprocessor(),
                        customData: l.getCustomData(),
                        beforeQualityChange: l.beforeQualityChange,
                        initialSubtitleLanguage: a,
                        subtitles: p.getSubtitles(),
                        initialAudioLanguage: n,
                        texts: C.get(),
                        resumeTime: d.getResumeTime(),
                        defaultLanguagesOrder: r,
                        bingeWatching: R.getParams(s.get("product"))
                    })
                }).then(l.configureHBOCustomDataIfEdge).catch(function(e) {
                    return O ? O.onAbort(e) : Y(e)
                })
            },
            playRecording: function(t) {
                var n = s.get("product");
                _ = t,
                e.all([p.init(), G()]).then(function() {
                    return r.getMediasRecording(n.id, !1, !0)
                }).then(A.getInitialRecordingLanguage).then(function(e) {
                    var t = e.medias
                      , a = e.audioCode
                      , r = e.subtitleCode;
                    return V(),
                    i.startPlayback("video", {
                        medias: t,
                        licenseUrl: l.getUrl(),
                        isNewShaka: P.isNew(),
                        product: n,
                        initialQualityValue: s.get("initialQuality").mediaQualityId,
                        shakaConfig: F(U.vod),
                        licenseRequestPreprocessor: l.getLicenseRequestPreprocessor(),
                        customData: l.getCustomData(),
                        beforeQualityChange: l.beforeQualityChange,
                        initialSubtitleLanguage: r,
                        subtitles: p.getSubtitles(),
                        initialAudioLanguage: a,
                        texts: C.get(),
                        resumeTime: d.getResumeTime()
                    })
                }).catch(function(e) {
                    return O ? O.onAbort(e) : Y(e)
                })
            },
            playLiveFabrix: Q,
            playFromBeginning: function(t, n) {
                return _ = t,
                n.isRestartTVEnabled ? b.isInsideCDNBuffer().then(function(e) {
                    return e ? K(t) : (s.set("playingType", U.fabrixLive),
                    Q(t))
                }) : e.when(K(t))
            },
            getPopUpInstance: function() {
                return _
            }
        };
        function F(e) {
            var t, n = x[e] || x.default;
            return {
                timestampOnFragments: a.getTimestampOnFragments(),
                minBufferTime: k.minBufferTime,
                streamBufferSize: (t = k.PlayerBufferingTime.split(":"),
                +t[3] + 60 * t[2] + 60 * t[1] * 60 + 24 * t[0] * 60 * 60),
                rangeRequestTimeout: n.rangeRequest,
                licenseRequestTimeout: n.licenseRequest,
                manifestRequestTimeout: n.manifestRequest,
                defaultBandwidthEstimate: k.defaultBandwidthEstimate
            }
        }
        function V() {
            (O = P.isNew() ? v : h).init(H),
            O.addListeners(H)
        }
        function H(e) {
            i.destroy(),
            "boolean" == typeof e && e || _ && _.opened.then(function() {
                return _.dismiss()
            }).catch(se.noop).finally(function() {
                _ = null
            })
        }
        function G() {
            return B[j.CLOSED] = t.$on(j.CLOSED, H),
            y.addListeners(),
            m.addListeners(),
            u.addListeners(H),
            b.addListeners(),
            a.addListeners(),
            g.addListeners(),
            I.addListeners(),
            e.when()
        }
        function W(t) {
            return t.l7dProviderId ? S.getChannel(o.caUtils.getId(t.l7dProviderId)).then(function(e) {
                t.channelLink = n("goFltrDetailsLink")(e)
            }).catch(se.noop) : e.when(!1)
        }
        function q() {
            return E.browser.pc.firefox && E.os.pc.mac ? (T.openError({
                title: "player.fabrix.firefoxMac.title",
                message: "player.fabrix.firefoxMac.message",
                accept: "common.accept"
            }),
            e.reject(new Error("Fabrix in Firefox OS X not available"))) : e.when()
        }
        function Y(e) {
            L.trackShakaError(e),
            $.sendError(e),
            H(),
            T.openError({
                title: "player.error.title",
                message: "player.error.general",
                accept: "common.accept"
            })
        }
        function z(t) {
            var a, o = s.get("product"), u = s.get("channel"), d = 0;
            return _ = t,
            e.all([b.getLiveBuffer(), b.isRestartButtonEnabled(), p.init(), G(), W(u)]).then(function(e) {
                var t = Fe()(e, 2)
                  , n = t[0]
                  , r = t[1];
                d = n,
                a = r
            }).then(r.getMediasLive).then(A.getInitialLiveLanguage).then(function(e) {
                var t = e.medias
                  , r = e.audioCode
                  , g = e.subtitleCode
                  , m = e.defaultLanguagesOrder
                  , h = u.title
                  , v = n("translate")("home.channel.goTo", {
                    title: h
                });
                return V(),
                i.startPlayback("video", {
                    medias: t,
                    isNewShaka: P.isNew(),
                    licenseUrl: l.getUrl(),
                    product: o,
                    channelLinkText: v,
                    channelLink: u.channelLink,
                    channelImage: u.iconBig || u.logoBig,
                    initialQualityValue: s.get("initialQuality").mediaQualityId,
                    startTime: c.toTimestamp(o.startTime),
                    endTime: c.toTimestamp(o.endTime),
                    shakaConfig: F(U.live),
                    licenseRequestPreprocessor: l.getLicenseRequestPreprocessor(),
                    customData: l.getCustomData(),
                    beforeQualityChange: l.beforeQualityChange,
                    subtitles: p.getSubtitles(),
                    initialAudioLanguage: r,
                    initialSubtitleLanguage: g,
                    isRestartTVEnabled: a,
                    liveBuffer: (a || f()(u.isAdvancedCDNServices)) && d,
                    live: !0,
                    texts: C.get(),
                    defaultLanguagesOrder: m,
                    isTeltooActive: D.isActive(),
                    teltooApiKey: D.getApiKey()
                })
            }).catch(function(e) {
                return O ? O.onAbort(e) : Y(e)
            })
        }
        function Q(e) {
            _ = e;
            var t = s.get("channel");
            return G(),
            q().then(W(t)).then(y.init).then(r.getMediasFabrix).then(A.getInitialLiveLanguage).then(function(e) {
                var a = e.medias
                  , r = e.audioCode
                  , o = s.get("product")
                  , u = n("translate")("home.channel.goTo", {
                    title: o.channelName
                });
                return V(),
                i.startPlayback("video", {
                    medias: a,
                    isNewShaka: P.isNew(),
                    licenseUrl: l.getUrl(),
                    product: o,
                    channelLinkText: u,
                    channelLink: t.channelLink,
                    channelImage: t.iconBig || t.logoBig,
                    initialQualityValue: s.get("initialQuality").mediaQualityId,
                    startTime: c.toTimestamp(o.startTime),
                    endTime: c.toTimestamp(o.endTime),
                    shakaConfig: F(U.live),
                    licenseRequestPreprocessor: l.getLicenseRequestPreprocessor(),
                    customData: l.getCustomData(),
                    initialAudioLanguage: r,
                    isFabrixLive: !0,
                    live: !1,
                    texts: C.get(),
                    resumeTime: 0
                })
            }).catch(function(e) {
                return O ? O.onAbort(e) : Y(e)
            })
        }
        function K(e) {
            var n = t.$on(j.LOADEDMETADATA, function() {
                b.seekToAvailableStartTime(),
                n()
            });
            return s.set("playingType", U.live),
            z(e)
        }
    }
    function op(e, t, n, a, r, i, c, s, l, u, d, g, p, m, f, h) {
        "ngInject";
        var v = o.caTypes.CONTENT_TYPES
          , y = m.Quality
          , S = m.StreamingType
          , b = m.PlayType
          , E = t("translate");
        function T(e) {
            var t = s.get("product");
            return e.forEach(function(e) {
                var n = t.medias.filter(function(t) {
                    return t.id === e.id
                })[0]
                  , a = n.qualityName
                  , r = n.quality;
                return e.setHeartbeatId(e.id),
                e.setText(E("common.quality.".concat(a))),
                e.setQualityName(a),
                e.setQuality(r),
                e.setMediaQualityId(r),
                e.setLanguageList(n.languageList),
                e.setPlayType(n.playType),
                e
            }),
            e
        }
        function C(t) {
            var n = s.get("product");
            return M(t).then(function(a) {
                return n ? (s.set("initialQuality", a),
                t) : e.reject(new Error("Cancelled by user before loaded"))
            })
        }
        function P(e, t) {
            var a = f.player.cdnDomains
              , r = new RegExp("(" + a.join("|") + ")","i")
              , o = n.getDeepProperty(e, t, "");
            return c.isHttpsRequiredInPlayer && 0 === o.indexOf("http://") && (o = o.replace("http://", "https://"),
            r.test(o) && (o = o.replace(/([\.|\/]o[0-9a-f]+)\./i, "$1-"))),
            o
        }
        function I(t) {
            var n = s.get("product")
              , a = s.get("channel")
              , r = {
                liveChannelId: a.id,
                startTime: n.startTime,
                endTime: n.endTime
            }
              , o = a.urlList.map(function(e) {
                return d.GetLiveChannelRestartTVUrl(Object.assign({}, r, {
                    streamingType: t,
                    quality: e.quality
                }))
            });
            return e.all(o).then(function(e) {
                return e.map(function(e) {
                    return P(e, "data.Content.Url")
                })
            }).then(function(e) {
                return e.filter(function(e) {
                    return L()(e) && e.length > 0
                })
            }).catch(function() {
                return []
            })
        }
        function A(e, t) {
            var a = s.get("channel");
            return e.map(function(e, r) {
                var o = a.urlList[r]
                  , i = o.quality
                  , c = n.swap(m.Quality)[i];
                return Object.assign({}, o, {
                    url: e,
                    mediaQualityId: o.quality,
                    text: E("common.quality.".concat(c)),
                    qualityName: c,
                    playType: t || o.playType
                })
            })
        }
        function M(t) {
            return t.length ? p.getStartPlaybackQuality().then(function(e) {
                return e > y.Unknown && e <= y.LowDefinition ? function e(n, a) {
                    var r, o, i, c = t.map(function(e) {
                        return e.quality
                    });
                    for (r = n; a ? y.HighDefinitionFull <= r && !i : r <= y.LowDefinition && !i; void (a ? r-- : r++))
                        -1 !== (o = c.indexOf(r)) && (i = t[o]);
                    return i || e(n, !0)
                }(e) : xt()(t).sort(function(e, t) {
                    return e.quality > t.quality
                })[0]
            }) : e.reject()
        }
        return {
            getMediasTrailer: function() {
                var e = (s.get("product").trailerIds || []).map(function(e) {
                    return o.caUtils.toPid(v.MEDIA, e)
                });
                return l.trailers(e.join(",")).get().then(function(e) {
                    return h.getFiltered(e)
                }).then(function(e) {
                    return e.length > 0 ? e.slice(e.length - 1) : []
                }).then(C)
            },
            getMediasVod: function(t) {
                var o = s.get("product")
                  , c = o.playableMedias.map(function(e) {
                    return n.getProperty(e, "id")
                });
                return c.length ? (u.trackGetMediaStart(),
                i.GetMediaUrlsStb({
                    movieId: o.productId,
                    mediaIds: c
                }).then(a("goModelPlayerMedia")).then(T).then(C).finally(function() {
                    u.trackGetMediaEnd(),
                    t && r.removeAll()
                })) : e.reject("Movie does not have medias")
            },
            getMediasLive: function() {
                var t = s.get("channel").urlList;
                return t.length ? (t.forEach(function(e) {
                    var t = e.quality
                      , a = n.swap(m.Quality)[t];
                    e.heartbeatId = e.id,
                    e.text = E("common.quality.".concat(a)),
                    e.qualityName = a,
                    e.quality = t,
                    e.mediaQualityId = t
                }),
                C(t)) : e.reject("Channel does not have medias.")
            },
            getMediaUrl: P,
            getMediasFabrix: function() {
                var t = s.get("channel").urlList.some(function(e) {
                    return e.playType === b.DASHAVC
                })
                  , n = p.getUseVsppDashSync();
                return u.trackGetRestartTVUrlStart(),
                I(n && t ? S.DASHAVC : S.SmoothStreaming).then(function(a) {
                    var r = n && t ? b.DASHAVC : b.SS;
                    return a.length > 0 ? A(a, r) : t ? I(S.SmoothStreaming).then(function(e) {
                        return A(e, b.SS)
                    }) : e.reject()
                }).then(C).finally(u.trackGetRestartTVUrlEnd)
            },
            getMediasRecording: function e(t, n, a) {
                var o = p.getUseVsppDashSync() && !n ? S.DASHAVC : S.SmoothStreaming;
                return Promise.all([g.GetRecordingUrl({
                    recordingId: t,
                    streamingType: o
                }).then(function(e) {
                    return P(e, "data.Content.Url")
                }), Cg(t)]).then(function(n) {
                    var r = Fe()(n, 2)
                      , i = r[0]
                      , c = r[1]
                      , s = c.ItemId
                      , l = c.Time
                      , u = c.AudioCode
                      , d = c.SubtitleCode
                      , g = c.ItemType
                      , p = o === S.DASHAVC
                      , f = m.PlayType
                      , h = f.DASHAVC
                      , v = f.SS;
                    return !i && p && (i = e(t, !0, a)),
                    [{
                        url: i,
                        playType: p ? h : v,
                        quality: y.StandardDefinition,
                        text: E("common.quality.Unknown"),
                        resume: {
                            userId: s,
                            time: l,
                            audioCode: u,
                            subtitleCode: d,
                            itemType: g
                        }
                    }]
                }).then(function(e) {
                    return a ? C(e) : e
                }).finally(function() {
                    return a && r.removeAll()
                })
            },
            getDefault: M
        }
    }
    function ip(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d = r.getLogger("SERVICE", "goMdlPlayerSvcPreload")
          , g = u.player
          , p = g.maxPreloadedFragments
          , m = g.timeouts.vod
          , f = n.Math;
        return {
            isSupported: function(e) {
                return e.isFreeVOD || !e.isAnyCatchup
            },
            vod: function(n) {
                try {
                    return a.setPreloadedVOD("started"),
                    e.all([o.GetUser(), function(t) {
                        var n = t.subtitles.map(function(e) {
                            return i.GetSubtitle({
                                movieId: t.id,
                                subtitleId: e.id
                            })
                        });
                        return e.all(n)
                    }(n), function(n) {
                        var r = n.playableMedias.map(function(e) {
                            var t = e.id;
                            return t
                        });
                        if (!r.length)
                            return e.reject("Not existing media to preload.");
                        return c.GetMediaUrlsStb({
                            movieId: n.id,
                            mediaIds: r
                        }).then(s("goModelPlayerMedia")).then(function(t) {
                            return a.setPreloadedVOD("GetMediaUrlsStb"),
                            function(t, n) {
                                return l.getDefault(t.playableMedias).then(function(t) {
                                    var a = n.filter(function(e) {
                                        var n = e.id;
                                        return n === t.id
                                    })[0];
                                    return a ? e.when(a.url) : e.reject("Not existing media to preload.")
                                })
                            }(n, t)
                        }).then(function(n) {
                            return t.get(n, {
                                timeout: m.manifestRequest
                            }).then(function(t) {
                                var r = (new DOMParser).parseFromString(t.data, "application/xml");
                                return a.setPreloadedVOD("manifest"),
                                "parsererror" === r.documentElement.nodeName ? e.reject() : e.all([h(r, n, "video"), h(r, n, "audio")])
                            })
                        }).then(function(e) {
                            return a.setPreloadedVOD("all"),
                            e
                        }).catch(function(t) {
                            return a.setPreloadedVOD("error"),
                            e.reject(t)
                        })
                    }(n)]).catch(se.noop)
                } catch (e) {
                    d.info("Error preloading VOD")
                }
            },
            vodCa: function(n) {
                var r = n.medias
                  , o = n.deviceQuality
                  , i = n.rightQuality;
                try {
                    a.setPreloadedVOD("started");
                    var c = f.max(o, i)
                      , s = r.find(function(e) {
                        var t = e.quality;
                        return t === c
                    });
                    if (s) {
                        var l = s.url;
                        return a.setPreloadedVOD("all"),
                        t.get(l, {
                            timeout: m.manifestRequest
                        }).then(function(t) {
                            var n = (new DOMParser).parseFromString(t.data, "application/xml");
                            return a.setPreloadedVOD("manifest"),
                            "parsererror" === n.documentElement.nodeName ? e.reject() : e.all([h(n, l, "video"), h(n, l, "audio")])
                        }).then(function(e) {
                            return a.setPreloadedVOD("all"),
                            e
                        }).catch(function(t) {
                            return a.setPreloadedVOD("error"),
                            e.reject(t)
                        })
                    }
                    return a.setPreloadedVOD("error"),
                    e.reject()
                } catch (e) {
                    d.info("Error preloading VOD ca", e)
                }
            }
        };
        function h(n, a, r) {
            var o = a.replace(/[Mm]anifest/, "")
              , i = n.querySelector('SmoothStreamingMedia > StreamIndex[Type="' + r + '"]')
              , c = function(e) {
                return Array.from(e.querySelectorAll("QualityLevel")).map(function(e) {
                    return parseInt(e.getAttribute("Bitrate"), 10)
                }).sort(function(e, t) {
                    return e - t
                })[0]
            }(i)
              , s = (o + i.getAttribute("Url")).replace(/\{bitrate\}/, c)
              , l = 0
              , u = Array.from(i.querySelectorAll("c")).slice(0, p).map(function(e) {
                var n = s.replace(/\{start time\}/, l)
                  , a = t.get(n, {
                    timeout: m.rangeRequest
                });
                return l += parseInt(e.getAttribute("d"), 10),
                a
            });
            return e.all(u)
        }
    }
    function cp(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        "ngInject";
        var p = d.EVENTS
          , m = g.goPlayingType
          , f = g.goEvents
          , h = o.getLogger("SERVICE", "goMdlPlayerSvcRestart")
          , v = {}
          , y = 1e3;
        function S() {
            D()(v, function(e) {
                return e && e()
            })
        }
        function b() {
            h.error("A problem has occurred with RestartTV"),
            e.$emit(p.BUFFERING_END)
        }
        function E() {
            var e = a.get("product");
            A().then(function(t) {
                var n = r.getTime() - t;
                i.seek(u.toTimestamp(n < e.startTime ? e.startTime : n + 30)),
                i.getVideoElement().play()
            })
        }
        function T() {
            s.trackEvent("player::restartCDN"),
            h.info("RestartTV with CDN buffer"),
            E()
        }
        function C() {
            var t = a.get("playingType") === m.fabrixLive;
            s.trackEvent("player::live"),
            t ? e.$emit(g.goEvents.PLAY_LIVE) : i.seek(r.getTime(!0))
        }
        function P() {
            s.trackEvent("player::restart"),
            c.checkContract().then(function() {
                return M()
            }).then(function(t) {
                a.get("channel").isRestartTVEnabled ? t ? T() : (s.trackEvent("player::restartFabrix"),
                e.$emit(g.goEvents.PLAY_FABRIX_LIVE)) : T()
            }).catch(b)
        }
        function I() {
            var n = i.getCurrentTime() / y
              , o = a.get("channel")
              , c = a.get("product")
              , s = a.get("playingType") === m.fabrixLive
              , u = a.get("playingType") === m.live
              , d = n > c.endTime + g.restartTV.BACK_TO_LIVE_BOUND;
            s && d ? e.$emit(f.PLAY_LIVE) : u && o.isAdvancedCDNServices && t.all([l.isL7dServiceAvailable(), A()]).then(function(e) {
                var t = Fe()(e, 2)
                  , a = t[0]
                  , o = t[1];
                if (a) {
                    var i = r.getTime() - o - 5;
                    o > 0 && i > n && E()
                }
            })
        }
        function A() {
            return n.getCDNBuffer()
        }
        function M() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a.get("product");
            return A().then(function(t) {
                var n = e.startTime;
                return r.getTime() - t < n
            })
        }
        return {
            addListeners: function() {
                v[p.RESTART_TV] = e.$on(p.RESTART_TV, P),
                v[p.DESTROYED] = e.$on(p.DESTROYED, S),
                v[p.GO_LIVE] = e.$on(p.GO_LIVE, C),
                v[p.TIMEUPDATE] = e.$on(p.TIMEUPDATE, I)
            },
            getLiveBuffer: A,
            isInsideCDNBuffer: M,
            isRestartButtonEnabled: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : a.get("channel");
                return l.isL7dServiceAvailable().then(function(n) {
                    if (n)
                        return e.isRestartTVEnabled ? t.when(!0) : A().then(function(t) {
                            return Boolean(e.isAdvancedCDNServices && t > 0)
                        })
                })
            },
            seekToAvailableStartTime: E
        }
    }
    function sp(e, t, n, a, r) {
        "ngInject";
        var o = a.goPlayingType;
        return {
            init: function() {
                var e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).id;
                return (t.get("playingType") === o.recording ? n.getMediasRecording(e) : n.getMediasVod()).then(function(e) {
                    t.set("resumeData", e[0].resume)
                })
            },
            saveResumeData: function() {
                var n = t.get("playingType")
                  , a = t.get("product")
                  , i = t.get("isUpperBoundReached");
                e.isLoggedIn && (n === o.vod ? r.setMovieResumeData(a, i) : n === o.recording && r.setItemResumeData(a, i))
            },
            getResumeTime: function() {
                return t.get("isPlaybackResume") && (t.get("resumeData") || {}).time
            }
        }
    }
    function lp(e, t, n, a, r, o, i, c, s, l, u) {
        "ngInject";
        var d, g, p, m, f, h, v, y = 1e3, S = s.EVENTS, b = c.TagType, E = u.go.uniapi.player.params, T = E.PlayerResumeLowerBound, C = E.PlayerResumeUpperBound, P = l.goPlayingType;
        return {
            init: function() {
                return f = !1,
                m = !1,
                o.getPlayerResumeBounds().then(function(e) {
                    e && (v = vt()(e.lower) ? e.lower : T,
                    h = vt()(e.upper) ? e.upper : C)
                })
            },
            addListeners: function() {
                a.get("playingType") === P.vod && i.isLoggedIn && (d = t.$on(S.DESTROYED, I),
                g = t.$on(S.LOADEDMETADATA, L))
            },
            checkAndTagCompleted: function() {
                !f && N()
            }
        };
        function I() {
            Ka()(d) && d(),
            Ka()(g) && g(),
            A()
        }
        function A() {
            e.cancel(p),
            p = null
        }
        function M() {
            var e = n.getCurrentTime();
            return n.getDuration() - e < h
        }
        function N() {
            var e = a.get("product");
            f = !0,
            r.tag(e, b.Completed, !0).then(function() {
                a.set("isUpperBoundReached", !0),
                t.$emit(l.goEvents.CONTENT_TAGGED_COMPLETED),
                A()
            })
        }
        function w() {
            var e;
            !m && n.getCurrentTime() > v && !M() && (e = a.get("product"),
            m = !0,
            r.tag(e, b.Watched, !0).then(function() {
                t.$emit(l.goEvents.CONTENT_TAGGED_WATCHED)
            })),
            !f && M() && N()
        }
        function L() {
            var t;
            t = a.get("product"),
            r.isCompleted(t).then(function(e) {
                e && r.untag(t, b.Completed)
            }),
            A(),
            p = e(w, y)
        }
    }
    function up(e) {
        "ngInject";
        return {
            get: function() {
                return e.audiosAndSubtitles
            }
        }
    }
    Qg.$inject = ["$rootScope", "ngSpManagerSvc", "goMdlAnalyticsSvcYoubora", "goMdlAnalyticsSvcPlayer", "goMdlAnalyticsSvcManager", "goMdlAnalyticsSvcPerformance", "goMdlPlayerSvcStatus", "ngSpMainCnst", "goCnstEnumerated"],
    Kg.$inject = ["$injector"],
    Xg.$inject = ["$rootScope", "$q", "$http", "uasMovieService", "ngSpManagerSvc", "goMdlPlayerSvcStatus", "goSvcUtils", "goMdlAnalyticsSvcPlayer", "goMdlPlayerSvcTvSession", "goSvcLogger", "goCnstSetup", "goCnstEnumerated", "uaConstants", "ngSpMainCnst"],
    Jg.$inject = ["$rootScope", "$timeout", "ngSpManagerSvc", "goSvcUtils", "goMdlPopUpsSvcManager", "goMdlPlayerSvcStatus", "goMdlAnalyticsSvcYoubora", "goMdlAnalyticsSvcPlayer", "goCnstConfig", "goCnstApp", "ngSpMainCnst", "goMdlPlayerSvcTeltoo"],
    Zg.$inject = ["$rootScope", "ngSpManagerSvc", "goMdlPopUpsSvcManager", "goMdlAnalyticsSvcPlayer", "goSvcLogger", "goMdlAnalyticsSvcYoubora", "ngSpMainCnst", "goMdlPlayerSvcTeltoo"],
    ep.$inject = ["$interval", "$q", "$rootScope", "uasPlaybackService", "goSvcUniapiSettings", "goSvcUtils", "goSvcLogger", "goSvcUserStatus", "goMdlPlayerSvcStatus", "ngSpManagerSvc", "goMdlPopUpsSvcManager", "goCnstEnumerated", "ngSpMainCnst"],
    tp.$inject = ["$rootScope", "ngSpManagerSvc", "goCnstSetup", "ngSpMainCnst", "goMdlPlayerSvcStatus", "goSvcLogger"],
    np.$inject = ["$q", "goSvcFeature", "goSvcUtils", "goMdlPlayerSvcStatus", "goMdlPlayerSvcMedias", "ngSpManagerSvc", "uaScope", "goCnstApp", "goMdlPlayerSvcVersion", "goCnstConfig", "goCnstEnumerated"],
    ap.$inject = ["$rootScope", "$interval", "goSvcLiveOrchestrator", "goSvcTime", "goMdlPlayerSvcStatus", "ngSpManagerSvc", "goSvcUtils", "goCnstEnumerated", "goCnstConfig", "ngSpMainCnst"],
    rp.$inject = ["$q", "$rootScope", "$filter", "goMdlPlayerSvcVsppFix", "goMdlPlayerSvcMedias", "ngSpManagerSvc", "goSvcUtils", "goMdlPlayerSvcStatus", "goMdlPlayerSvcLicenseServer", "goMdlPlayerSvcHeartbeat", "goMdlPlayerSvcResume", "goMdlPlayerSvcTag", "goMdlPlayerSvcCc", "goMdlPlayerSvcLiveData", "goMdlPlayerSvcErrorLegacy", "goMdlPlayerSvcError", "goMdlPlayerSvcAnalytics", "goSvcLibrary", "goMdlPlayerSvcRestart", "goSvcFeature", "goMdlPopUpsSvcManager", "goMdlPlayerSvcTexts", "goMdlPlayerSvcVersion", "goMdlPlayerSvcL7dFix", "goMdlPlayerSvcLanguages", "goCnstSetup", "goCnstEnumerated", "ngSpMainCnst", "goMdlAnalyticsSvcPlayer", "goMdlAnalyticsSvcYoubora", "goSvcBingeWatching", "goMdlPlayerSvcTeltoo"],
    op.$inject = ["$q", "$filter", "goSvcUtils", "goSvcCast", "goMdlCachesSvcGetMedias", "uasPlaybackService", "goSvcFeature", "goMdlPlayerSvcStatus", "goMdlPlayerSvcCaResources", "goMdlAnalyticsSvcPerformance", "uasEpgService", "uasNetworkPvrService", "goSvcUniapiParameter", "uaConstants", "goCnstSetup", "goSvcMedias"],
    ip.$inject = ["$q", "$http", "$window", "goMdlAnalyticsSvcPlayerStats", "goSvcLogger", "uasUserService", "uasMovieService", "uasPlaybackService", "goSvcCast", "goMdlPlayerSvcMedias", "goCnstSetup"],
    cp.$inject = ["$rootScope", "$q", "goSvcUniapiParameter", "goMdlPlayerSvcStatus", "goSvcTime", "goSvcLogger", "ngSpManagerSvc", "goSvcL7d", "goMdlAnalyticsSvcPlayer", "goSvcUser", "goSvcUtils", "ngSpMainCnst", "goCnstEnumerated"],
    sp.$inject = ["goSvcUserStatus", "goMdlPlayerSvcStatus", "goMdlPlayerSvcMedias", "goCnstEnumerated", "goSvcTags"],
    lp.$inject = ["$interval", "$rootScope", "ngSpManagerSvc", "goMdlPlayerSvcStatus", "goSvcTags", "goSvcUniapiParameter", "goSvcUserStatus", "uaConstants", "ngSpMainCnst", "goCnstEnumerated", "goCnstConfig"],
    up.$inject = ["goCnstTranslations"];
    var dp = n(271);
    function gp(e, t) {
        "ngInject";
        var n, a = t.getLogger("SERVICE", "goMdlPlayerSvcTvSession"), r = e.$watch("isLoggedIn", function(e) {
            e && ((n = new dp.a("goTvSessions")).version(1).stores({
                tvSession: "liveChannelId,audio,subtitle"
            }),
            r())
        });
        return {
            set: function(e, t, r) {
                return n ? n.tvSession.put({
                    liveChannelId: e,
                    audio: t,
                    subtitle: r
                }).catch(function(n) {
                    return a.debug("Error storing data for live channel ".concat(e, ": {\n              audio: ").concat(t, ",\n              subtitle ").concat(r, "\n            }"), n)
                }) : Promise.resolve()
            },
            get: function(e) {
                return n ? n.tvSession.get(e).then(function(e) {
                    return e ? {
                        audioCode: e.audio,
                        subtitleCode: e.subtitle
                    } : void 0
                }).catch(function(t) {
                    return a.debug("Error retrieving data for live channel ".concat(e), t)
                }) : Promise.resolve()
            },
            deleteUserTvSession: function() {
                return n ? n.tvSession.clear().catch(function(e) {
                    return a.debug("Error clearing TV session database", e)
                }) : Promise.resolve()
            }
        }
    }
    function pp(e, t, n) {
        "ngInject";
        var a = t.goType;
        return {
            isNew: function() {
                var t = e.get("initialQuality");
                if (!t) {
                    var r = e.get("product")
                      , o = e.get("channel")
                      , i = function(e, t) {
                        return !e && t || e && e.goType === a.LiveProgram
                    }(r, o) ? o.urlList : r.medias;
                    t = i[0]
                }
                return t && t.playType === n.PlayType.DASHAVC
            }
        }
    }
    function mp(e, t, n, a, r, o, i, c, s) {
        var l, u = o.CommercializationType, d = c.vsppFix, g = s.EVENTS, p = n.getLogger("SERVICE", "goMdlPlayerSvcVspp");
        return {
            addListeners: function() {
                var n;
                d.enabled && m() && (a = e.$on(g.CANPLAY, function() {
                    var e, n;
                    p.log("Watching VSPP stream for frozen periods. Interval:", d.interval, "millis Seek:", d.seek, "seconds"),
                    n = r.getVideoElement(),
                    l = t(function() {
                        var t = e === n.currentTime && !n.paused;
                        t && (p.log("VSPP frozen detected in", n.currentTime, "fix launched"),
                        n.currentTime += d.seek),
                        e = n.currentTime
                    }, d.interval),
                    a()
                }),
                n = e.$on(g.DESTROYED, function() {
                    n && n(),
                    t.cancel(l)
                }));
                var a
            },
            isVSPPFixableStream: m,
            getTimestampOnFragments: function() {
                return c.vsspTimestampOnFragments && m()
            }
        };
        function m() {
            var e = a.get("product").commercializationType === u.NetworkCatchup
              , t = a.get("playingType") === i.goPlayingType.fabrixLive
              , n = a.get("playingType") === i.goPlayingType.live;
            return e || t || n
        }
    }
    function fp(e, t, n, a, r, o, i) {
        "ngInject";
        var c = n.languages
          , s = c.audio
          , l = c.subtitle
          , d = c.autoCode
          , g = c.offCode
          , p = c.originalCode
          , m = -1
          , f = r.getLogger("SERVICE", "goMdlPlayerSvcLanguages");
        return {
            getInitialVodLanguage: function(e) {
                var t = a.getSubtitles();
                return y(e).then(function(n) {
                    return h(e, t, n)
                }).then(function(n) {
                    var a = n.audioCode
                      , r = n.subtitleCode
                      , o = t.find(function(e) {
                        return r === e.code
                    });
                    return f.debug("audioCode", a, "subtitleCode", r),
                    {
                        medias: e,
                        audioCode: a,
                        subtitleCode: r,
                        subtitleId: o ? o.id : m
                    }
                })
            },
            getInitialLiveLanguage: function(t) {
                return e.all([a.getLiveLanguages(t), function() {
                    var t = i.get("channel");
                    if (!t)
                        return v();
                    return o.get(t.id).then(function(t) {
                        return t ? e.when(t) : v()
                    })
                }()]).then(function(e) {
                    var n = Fe()(e, 2)
                      , a = n[0]
                      , r = a.audios
                      , o = a.subtitles
                      , i = n[1];
                    return h(t = t.map(function(e) {
                        return e.languageList = r.join(","),
                        e
                    }), o, i)
                }).then(function(e) {
                    var n = e.audioCode
                      , a = e.subtitleCode;
                    return f.debug("audioCode", n, "subtitleCode", a),
                    {
                        medias: t,
                        audioCode: n,
                        subtitleCode: a
                    }
                })
            },
            getInitialRecordingLanguage: function(t) {
                return e.all([a.getLiveLanguages(t), y(t)]).then(function(e) {
                    var n = Fe()(e, 2)
                      , a = n[0]
                      , r = a.audios
                      , o = a.subtitles
                      , i = n[1];
                    return h(t = t.map(function(e) {
                        return e.languageList = r.join(","),
                        e
                    }), o, i)
                }).then(function(e) {
                    var n = e.audioCode
                      , a = e.subtitleCode;
                    return f.debug("audioCode", n, "subtitleCode", a),
                    {
                        medias: t,
                        audioCode: n,
                        subtitleCode: a
                    }
                })
            }
        };
        function h(e, t, n) {
            var r, o, i = n.audioCode, c = n.subtitleCode;
            return i !== d && i !== p && c !== d ? (r = b(e).find(function(e) {
                return e === i
            }),
            o = t.find(function(e) {
                return e.code === c
            }),
            {
                audioCode: r || S(e),
                subtitleCode: o ? o.code : g
            }) : function(e, t, n) {
                var r, o, i = n.audioCode, c = n.subtitleCode, s = a.getDefaultLanguages();
                if (i !== d && i !== p)
                    s = s.filter(function(e) {
                        return e[0] === i
                    }),
                    (r = b(e).find(function(e) {
                        return e === i
                    })) && (o = s.map(function(e) {
                        return e[1]
                    }).find(function(e) {
                        return t.some(function(t) {
                            return t.code === e
                        })
                    }) || g);
                else if (c !== d)
                    s = s.filter(function(e) {
                        return e[1] === c
                    }),
                    (o = t.map(function(e) {
                        return e.code
                    }).find(function(e) {
                        return e === c
                    })) && (r = s.map(function(e) {
                        return e[0]
                    }).find(function(t) {
                        return b(e).some(function(e) {
                            return e === t
                        })
                    }) || S(e));
                else {
                    var l = s.find(function(n) {
                        var a = Fe()(n, 2)
                          , r = a[0]
                          , o = a[1];
                        return b(e).some(function(e) {
                            return e === r
                        }) && t.some(function(e) {
                            return o === g || e.code === o
                        })
                    }) || []
                      , u = Fe()(l, 2)
                      , m = u[0];
                    r = void 0 === m ? void 0 : m;
                    var f = u[1];
                    o = void 0 === f ? void 0 : f
                }
                return r && o ? {
                    audioCode: r,
                    subtitleCode: o
                } : null
            }(e, t, {
                audioCode: i,
                subtitleCode: c
            }) || function(e) {
                return {
                    audioCode: S(e),
                    subtitleCode: g
                }
            }(e)
        }
        function v() {
            return e.all([t.getUserPreference(s), t.getUserPreference(l)]).then(function(e) {
                var t = Fe()(e, 2);
                return {
                    audioCode: t[0],
                    subtitleCode: t[1]
                }
            }).catch(function() {
                return {
                    audioCode: d,
                    subtitleCode: d
                }
            })
        }
        function y(t) {
            var n = t[0].resume;
            if (n && n.userId > 0) {
                n.audioCode = n.audioCode !== m.toString() ? Object(u.b)(n.audioCode) : d;
                var r = a.getSubtitles().find(function(e) {
                    var t = e.id;
                    return n.subtitleId === t
                });
                return n.subtitleCode = r ? r.code : n.subtitleCode && n.subtitleCode !== m.toString() ? Object(u.b)(n.subtitleCode) : g,
                e.when(n)
            }
            return v()
        }
        function S(e) {
            return b(e)[0]
        }
        function b(e) {
            var t = e[0].languageList;
            return t ? t.split(",").map(u.b) : []
        }
    }
    function hp(e, t, n) {
        "ngInject";
        return {
            isActive: a,
            checkError: function() {
                a() && e.cleanCache()
            },
            getApiKey: function() {
                return a() ? n.go.teltooApiKey : ""
            }
        };
        function a() {
            var n = e.getTeltooChannelIdsSync()
              , a = t.get("channel");
            return a && n.includes(a.id)
        }
    }
    gp.$inject = ["goSvcUserStatus", "goSvcLogger"],
    pp.$inject = ["goMdlPlayerSvcStatus", "goCnstEnumerated", "uaConstants"],
    mp.$inject = ["$rootScope", "$interval", "goSvcLogger", "goMdlPlayerSvcStatus", "ngSpManagerSvc", "uaConstants", "goCnstEnumerated", "goCnstSetup", "ngSpMainCnst"],
    fp.$inject = ["$q", "goSvcUser", "goCnstEnumerated", "goMdlPlayerSvcCc", "goSvcLogger", "goMdlPlayerSvcTvSession", "goMdlPlayerSvcStatus"],
    hp.$inject = ["goSvcUniapiParameter", "goMdlPlayerSvcStatus", "goCnstConfig"];
    var vp = r.a.module("goMdlPlayer", []).component("goMdlPlayerCmpContainer", zg).factory("goMdlPlayerSvcAnalytics", Qg).factory("goMdlPlayerSvcCaResources", Kg).factory("goMdlPlayerSvcCc", Xg).factory("goMdlPlayerSvcErrorLegacy", Jg).factory("goMdlPlayerSvcError", Zg).factory("goMdlPlayerSvcHeartbeat", ep).factory("goMdlPlayerSvcL7dFix", tp).factory("goMdlPlayerSvcLicenseServer", np).factory("goMdlPlayerSvcLiveData", ap).factory("goMdlPlayerSvcManager", rp).factory("goMdlPlayerSvcMedias", op).factory("goMdlPlayerSvcPreload", ip).factory("goMdlPlayerSvcRestart", cp).factory("goMdlPlayerSvcResume", sp).factory("goMdlPlayerSvcStatus", function() {
        var e = {
            playingType: null,
            product: null,
            isUpperBoundReached: !1,
            resumeData: null,
            isPlaybackResume: !1,
            channel: null,
            initialQuality: null
        }
          , t = Object.assign({}, e);
        return {
            reset: function() {
                t = Object.assign({}, e)
            },
            get: function(e) {
                return t[e]
            },
            set: function(e, n) {
                t[e] = n
            }
        }
    }).factory("goMdlPlayerSvcTag", lp).factory("goMdlPlayerSvcTexts", up).factory("goMdlPlayerSvcTvSession", gp).factory("goMdlPlayerSvcVersion", pp).factory("goMdlPlayerSvcLanguages", fp).factory("goMdlPlayerSvcVsppFix", mp).factory("goMdlPlayerSvcTeltoo", hp).name;
    n(475);
    function yp(e, t) {
        e.browserList = t.browserList.slice(0, 3)
    }
    function Sp(e, t) {
        "ngInject";
        e.closePopup = function() {
            t.closePopup(),
            e.$dismiss()
        }
    }
    function bp(e, t, n, a) {
        t.disablePin = function() {
            n.disableParentalPin(t.model.pin).then(e.close).catch(function() {
                t.error = !0
            })
        }
        ,
        t.pinRegex = new RegExp(a.pin.pattern),
        t.maxLength = a.pin.length,
        t.error = !1,
        t.model = {}
    }
    function Ep(e, t) {
        e.title = t.title,
        e.message = t.message,
        e.bodyClass = t.bodyClass,
        e.cancel = t.cancel,
        e.accept = t.accept,
        e.closable = t.closable
    }
    function Tp(e, t, n) {
        e.activate = function() {
            n.activate().then(t.close)
        }
    }
    function Cp(e, t) {
        t.$watch("isLoggedIn", function(t) {
            t && e.close()
        })
    }
    function Pp(e, t, n, a, r) {
        t.submit = function(a) {
            n.checkParentalPin(a).then(e.close).catch(function() {
                t.error = !0
            })
        }
        ,
        a && a.title ? t.title = a.title : t.title = "popup.pin.name",
        a && a.info ? t.info = a.info : t.info = "popup.pin.toPlay",
        t.maxLength = parseInt(r.pin.length),
        t.pinRegex = new RegExp(r.pin.pattern),
        t.error = !1,
        t.model = {}
    }
    function Ip(e, t, n) {
        e.paymentMethods = n.paymentMethods,
        e.selectPaymentMethod = function(e) {
            t.close(e)
        }
    }
    function Ap(e, t, n, a, r, o) {
        var i = o.features
          , c = !1;
        r && r.isTransparentCatchup ? (e.browserList = a.suggestedBrowsersForTransparentCatchup,
        e.messages = n.transparentCatchupMessages,
        e.title = "player.playbackWarning.title") : (e.browserList = a.suggestedBrowsersByOs,
        e.messages = n.messages,
        e.isToggleVisible = e.messages.length > 0 && n.isPlaybackAllowed,
        e.title = n.title || "player.playbackWarning.title",
        e.hideBrowserSuggestions = n.hideBrowserSuggestions,
        e.toggleRemember = function() {
            var e = i.cookie.key;
            (c = !c) ? t.createExpirationCookie(e, c, i.cookie.expiration) : t.expire(e)
        }
        )
    }
    function Mp(e, t, n) {
        e.id = t.id,
        e.$on("modal.closing", function() {
            n.stop()
        })
    }
    function Np(e, t, n, a, r, o) {
        var i = n("translate");
        t.submit = function(n) {
            a.checkPurchasePin(n).then(function() {
                e.close(n)
            }).catch(function() {
                t.error = !0
            })
        }
        ,
        t.title = r.title || "popup.purchase.toRent",
        t.buttonText = r.buttonText || i("library.rent", {
            quality: i("common.quality." + r.price.qualityName),
            price: n("goFltrCurrency")(r.price.value)
        }),
        t.maxLength = o.pin.length,
        t.pinRegex = new RegExp(o.pin.pattern),
        t.error = !1,
        t.movie = r.movie,
        t.model = {}
    }
    function wp(e, t, n, a) {
        var r = a.cookies.pvrWarning;
        e.close = function(e) {
            e && n.createUserExpirationCookie(r.key, e, r.expiration),
            t.close()
        }
    }
    function Lp(e, t) {
        e.message = t.message
    }
    function $p(e, t, n) {
        var a, r;
        t.os.mobile.android ? (a = "GooglePlayUrl",
        r = "Google Play") : t.os.mobile.ios && (a = "AppleStoreUrl",
        r = "App Store"),
        n.getAsync(a).then(function(t) {
            e.osLink = t || "",
            e.marketName = r
        })
    }
    yp.$inject = ["$scope", "options"],
    Sp.$inject = ["$scope", "goSvcLiveDetail"],
    bp.$inject = ["$uibModalInstance", "$scope", "goSvcUniapiPin", "goCnstEnumerated"],
    Ep.$inject = ["$scope", "options"],
    Tp.$inject = ["$scope", "$uibModalInstance", "goSvcL7d"],
    Cp.$inject = ["$uibModalInstance", "goSvcUserStatus"],
    Pp.$inject = ["$uibModalInstance", "$scope", "goSvcUniapiPin", "options", "goCnstEnumerated"],
    Ip.$inject = ["$scope", "$uibModalInstance", "options"],
    Ap.$inject = ["$scope", "goSvcCookies", "goSvcFeature", "goSvcBrowser", "options", "goCnstEnumerated"],
    Mp.$inject = ["$scope", "options", "goSvcPlayback"],
    Np.$inject = ["$uibModalInstance", "$scope", "$filter", "goSvcUniapiPin", "options", "goCnstEnumerated"],
    wp.$inject = ["$scope", "$uibModalInstance", "goSvcCookies", "goCnstEnumerated"],
    Lp.$inject = ["$scope", "options"],
    $p.$inject = ["$scope", "goSvcFeature", "goSvcUniapiSettings"];
    var Rp = n(115)
      , Dp = n.n(Rp)
      , _p = (n(473),
    n(114))
      , Op = n.n(_p)
      , Up = n(113)
      , kp = n.n(Up)
      , xp = n(112)
      , jp = n.n(xp)
      , Bp = (n(471),
    n(111))
      , Fp = n.n(Bp)
      , Vp = (n(469),
    n(110))
      , Hp = n.n(Vp)
      , Gp = (n(467),
    n(109))
      , Wp = n.n(Gp)
      , qp = n(108)
      , Yp = n.n(qp)
      , zp = (n(465),
    n(107))
      , Qp = n.n(zp)
      , Kp = (n(463),
    n(106))
      , Xp = n.n(Kp)
      , Jp = (n(461),
    n(78))
      , Zp = n.n(Jp)
      , em = n(105)
      , tm = n.n(em)
      , nm = n(104)
      , am = n.n(nm)
      , rm = (n(459),
    n(103))
      , om = n.n(rm);
    n(457);
    function im(e, t, n, a, r, o, i) {
        "ngInject";
        var c = !1
          , s = {};
        function l(t) {
            var n, r = t.class + JSON.stringify(t.options);
            return s[r] ? n = {
                result: a.reject()
            } : (s[r] = 1,
            (n = e.open({
                component: t.component,
                template: t.template,
                controller: t.controller,
                backdrop: !!f()(t.backdrop) || t.backdrop,
                keyboard: !!f()(t.keyboard) || t.keyboard,
                windowClass: ["go-mdl-pop-ups", t.class].join(" "),
                animation: !1,
                resolve: {
                    options: function() {
                        return t.options
                    }
                }
            })).result.finally(function() {
                delete s[r]
            })),
            n
        }
        function u(e, t) {
            return l({
                template: kp.a,
                controller: "goMdlPopUpsCtrlInfo",
                options: t,
                class: e,
                backdrop: !1 !== t.closable || "static",
                keyboard: !1 !== t.closable
            })
        }
        function d(e) {
            c = e
        }
        n.onpopstate = function() {
            d(!0),
            t.getTop() && t.dismissAll()
        }
        ;
        var g = r.$on("$routeChangeStart", function() {
            var e = t.getAll().find(function(e) {
                return "player-container" === i.getDeepProperty(e, "value.modalScope.id")
            })
              , n = window.location.href.indexOf(G.a.routes.serie) >= 0
              , a = e && n;
            t.getTop() && !a && t.dismissAll()
        });
        return {
            destroy: function() {
                g()
            },
            openPlaybackMessages: function(e) {
                return l({
                    template: Qp.a,
                    controller: "goMdlPopUpsCtrlPlaybackMessages",
                    options: e,
                    class: "playback-messages warning"
                })
            },
            openLiveDetails: function(e) {
                return l({
                    template: Fp.a,
                    controller: "goMdlPopUpsCtrlLive",
                    options: e,
                    class: "live"
                })
            },
            openLogin: function(e) {
                return l({
                    template: Hp.a,
                    controller: "goMdlPopUpsCtrlLogin",
                    options: e,
                    class: "login"
                })
            },
            openParentalPin: function(e) {
                return l({
                    template: Wp.a,
                    controller: "goMdlPopUpsCtrlParentalPin",
                    options: e,
                    class: "parental"
                })
            },
            openDisableParental: function(e) {
                return l({
                    template: Op.a,
                    controller: "goMdlPopUpsCtrlDisableParental",
                    options: e,
                    class: "disable-parental"
                })
            },
            openPlayer: function(e) {
                return l({
                    template: Xp.a,
                    controller: "goMdlPopUpsCtrlPlayer",
                    options: e,
                    class: "player",
                    backdrop: "static"
                })
            },
            openPurchasePin: function(e) {
                return l({
                    template: Zp.a,
                    controller: "goMdlPopUpsCtrlPurchasePin",
                    options: e,
                    class: "purchase"
                })
            },
            openPurchaseSubscriptionPin: function(e) {
                return l({
                    template: Zp.a,
                    controller: "goMdlPopUpsCtrlPurchasePin",
                    options: e,
                    class: "purchase subscription"
                })
            },
            openPvrWarning: function(e) {
                return l({
                    template: tm.a,
                    controller: "goMdlPopUpsCtrlPvrWarning",
                    options: e,
                    class: "pvr-warning info"
                })
            },
            openBlockedRecordingWarning: function(e) {
                return l({
                    component: "goMdlPopUpsCmpBlockedRecording",
                    options: e,
                    class: "pvr-warning info"
                })
            },
            openSmartBanner: function(e) {
                return l({
                    template: om.a,
                    controller: "goMdlPopUpsCtrlSmartBanner",
                    options: e,
                    class: "smart-banner"
                })
            },
            openError: function(e) {
                return u("error", e)
            },
            openSuccess: function(e) {
                return u("success", e)
            },
            openWarning: function(e) {
                return u("warning", e)
            },
            openInfo: function(e) {
                return u("info", e)
            },
            openRedirect: function(e) {
                return l({
                    template: am.a,
                    controller: "goMdlPopUpsCtrlRedirect",
                    options: e,
                    class: "redirect",
                    backdrop: !1 !== e.closable || "static",
                    keyboard: !1 !== e.closable
                })
            },
            openBrowserWarning: function(e) {
                return l({
                    template: Dp.a,
                    controller: "goMdlPopUpsCtrlBrowserWarning",
                    options: e,
                    class: "browser-warning",
                    keyboard: !1,
                    backdrop: !1
                })
            },
            openPaymentMethod: function(e) {
                return l({
                    template: Yp.a,
                    controller: "goMdlPopUpsCtrlPaymentMethod",
                    options: e,
                    class: "payment-method"
                })
            },
            openL7dActivation: function(e) {
                return o.trackEvent("settings::l7dPopUp"),
                l({
                    template: jp.a,
                    controller: "goMdlPopUpsCtrlL7dActivation",
                    options: e,
                    class: "l7d-activation"
                })
            },
            isBrowserNavigation: function() {
                return c
            },
            setBrowserNavigation: d
        }
    }
    im.$inject = ["$uibModal", "$uibModalStack", "$window", "$q", "$rootScope", "goMdlAnalyticsSvcManager", "goSvcUtils"];
    var cm = r.a.module("goMdlPopUps", []).controller("goMdlPopUpsCtrlBrowserWarning", yp).controller("goMdlPopUpsCtrlLive", Sp).controller("goMdlPopUpsCtrlDisableParental", bp).controller("goMdlPopUpsCtrlInfo", Ep).controller("goMdlPopUpsCtrlL7dActivation", Tp).controller("goMdlPopUpsCtrlLogin", Cp).controller("goMdlPopUpsCtrlParentalPin", Pp).controller("goMdlPopUpsCtrlPaymentMethod", Ip).controller("goMdlPopUpsCtrlPlaybackMessages", Ap).controller("goMdlPopUpsCtrlPlayer", Mp).controller("goMdlPopUpsCtrlPurchasePin", Np).controller("goMdlPopUpsCtrlPvrWarning", wp).controller("goMdlPopUpsCtrlRedirect", Lp).controller("goMdlPopUpsCtrlSmartBanner", $p).directive("goMdlPopUpsDrctBrowserWarning", function() {
        return {
            template: Dp.a
        }
    }).directive("goMdlPopUpsDrctDisableParental", function() {
        return {
            template: Op.a
        }
    }).directive("goMdlPopUpsDrctInfo", function() {
        return {
            template: kp.a
        }
    }).directive("goMdlPopUpsDrctL7dActivation", function() {
        return {
            template: jp.a
        }
    }).directive("goMdlPopUpsDrctLive", function() {
        return {
            template: Fp.a
        }
    }).directive("goMdlPopUpsDrctLogin", function() {
        return {
            template: Hp.a
        }
    }).directive("goMdlPopUpsDrctParentalPin", function() {
        return {
            template: Wp.a
        }
    }).directive("goMdlPopUpsDrctPaymentMethod", function() {
        return {
            template: Yp.a
        }
    }).directive("goMdlPopUpsDrctPlaybackMessages", function() {
        return {
            template: Qp.a
        }
    }).directive("goMdlPopUpsDrctPlayer", function() {
        return {
            template: Xp.a
        }
    }).directive("goMdlPopUpsDrctPurchasePin", function() {
        return {
            template: Zp.a
        }
    }).directive("goMdlPopUpsDrctPvrWarning", function() {
        return {
            template: tm.a
        }
    }).directive("goMdlPopUpsDrctRedirect", function() {
        return {
            template: am.a
        }
    }).directive("goMdlPopUpsDrctSmartBanner", function() {
        return {
            template: om.a
        }
    }).component("goMdlPopUpsCmpBlockedRecording", Object(_n.a)(function(e) {
        var t = e.modalInstance
          , n = Object(Zn.e)("$filter", "goSvcCookies", "goCnstEnumerated")
          , a = Fe()(n, 3)
          , r = a[0]
          , o = a[1]
          , i = a[2]
          , c = r("translate")
          , s = t.dismiss
          , l = t.close;
        return Kn.a.createElement("section", null, Kn.a.createElement("header", {
            className: "modal-header"
        }, Kn.a.createElement("button", {
            className: "close-button",
            onClick: s
        }, Kn.a.createElement("i", {
            className: "go-glyphicon go-glyphicon-cross"
        }))), Kn.a.createElement("article", {
            className: "modal-body"
        }, Kn.a.createElement("p", {
            className: "title"
        }, c("epg.pvr.firstTimeBlockedRecording"))), Kn.a.createElement("footer", {
            className: "modal-footer"
        }, Kn.a.createElement("button", {
            type: "button",
            className: "go-btn go-btn__blue",
            onClick: function() {
                var e = i.cookies.blockedRecording
                  , t = e.key
                  , n = e.expiration;
                o.createUserExpirationCookie(t, !0, n),
                l()
            }
        }, c("common.close"))))
    })).factory("goMdlPopUpsSvcManager", im).name;
    function sm(e) {
        e.resolveWhen("/search", {
            template: "<go-mdl-search-cmp-results></go-mdl-search-cmp-results>",
            page: {
                eventName: "search::search",
                canonical: "/search"
            }
        })
    }
    sm.$inject = ["$routeProvider"];
    var lm = n(270)
      , um = n.n(lm)
      , dm = (n(455),
    {
        template: um.a,
        bindings: {
            query: "<",
            total: "<",
            altTotal: "<"
        },
        controller: gm
    });
    function gm(e, t, n) {
        var a, r, o = this;
        function i() {
            t.getFilters().then(c).then(s)
        }
        function c(e) {
            o.type = e.type,
            o.sortingTranslationKey = e.sorting.translationKey
        }
        function s() {
            o.breadcrumbsLoaded = !0
        }
        o.$onChanges = function() {
            var e = [o.total, o.altTotal];
            t.getFilters().then(function() {
                o.totalLoaded = !isNaN(parseInt(e[0], 10))
            })
        }
        ,
        o.$onInit = function() {
            a = n.$watchCollection("[isAuth, isLoggedIn]", function() {
                n.isAuth && i()
            }),
            r = e.$on("$locationChangeStart", function() {
                i()
            })
        }
        ,
        o.$onDestroy = function() {
            a && a(),
            Ka()(r) && r()
        }
    }
    gm.$inject = ["$scope", "goMdlSearchSvcFilter", "goSvcUserStatus"];
    var pm = n(269)
      , mm = n.n(pm);
    n(453);
    hm.$inject = ["$sanitize", "goSvcRights", "goSvcCatalog", "goSvcUserStatus"];
    var fm = {
        template: mm.a,
        bindings: {
            query: "<",
            applyFilters: "=",
            searchType: "<",
            total: "<"
        },
        controller: hm
    };
    function hm(e, t, n, a) {
        "ngInject";
        var r = this;
        r.$onInit = function() {
            r.sanitizedQuery = e(r.query),
            a.$watchGroup(["isAuth", "isLoggedIn"], function() {
                n.isShowSubscribedOnly().then(function(e) {
                    r.isShowSubscribedToggleVisible = t.canFilterSubscribedContent(),
                    r.isShowSubscribedOnly = e
                })
            })
        }
    }
    var vm = n(268)
      , ym = n.n(vm);
    n(451);
    bm.$inject = ["$scope", "$routeParams", "$q", "$location", "goSvcUserStatus", "goMdlSearchSvcMain", "goMdlSearchSvcFilter", "goSvcUtils", "goSvcOrderBy", "goMdlThematicAreaSvcMain", "goMdlAnalyticsSvcContentWise", "goSvcRights", "goSvcCatalog", "goCnstEnumerated", "goMdlSearchCnstSearch", "goMdlAnalyticsSvcManager"];
    var Sm = {
        template: ym.a,
        controller: bm
    };
    function bm(e, t, n, a, r, o, i, c, s, l, u, d, g, p, m, f) {
        "ngInject";
        var h, v, y = p.search.typeParam, S = p.contentWiseTypes, b = S.SEARCH, E = S.SEARCH_GHOST, T = m.includeAdults, C = t.hasOwnProperty(y) ? t[y] : m.searchFields, P = this, I = n.defer().promise, A = {};
        function M() {
            return d.canFilterSubscribedContent() ? g.isShowSubscribedOnly().then(function(e) {
                Object.assign(A, {
                    showSubscribedOnly: e
                }),
                P.showSubscribedOnly = e
            }) : (a.search("showSubscribedOnly", null),
            n.resolve())
        }
        function N(e) {
            return u.isUXRAvailable(e).then(function() {
                return u.createUXR(e)
            }).then(function(t) {
                P.cwUxr = t,
                v = e
            })
        }
        function w(e, t) {
            return 0 === e || !P.searchType || t.id === P.searchType.id
        }
        function L(e, t) {
            var n = e.sorting
              , a = e.type
              , o = e.showSubscribedOnly
              , i = a.id;
            return s.getSelectedOrder(n.id).then(function(e) {
                var n = Object.assign({
                    term: P.query,
                    searchFields: C,
                    ca_requiresPin: T,
                    ca_commercialOffer: r.isLoggedIn ? r.profile.commercialOffer : null,
                    ca_subscriptions: o ? r.profile.subscriptionsFilter : null,
                    orderBy: e
                }, t);
                return l.getSearchItems(i, n, v)
            })
        }
        function $(e) {
            return P.count = e.count,
            e
        }
        function R() {
            return P.errorMessage = "search.error.noResults",
            n.reject()
        }
        function D(e, t) {
            return P.searchType = P.searchType || e,
            n.when(t)
        }
        function _(e) {
            return e.data.forEach(function(e, t) {
                var n = {
                    CONTENTID: e.id,
                    CONTENTNAME: e.name,
                    CONTENTPOSITION: t,
                    CONTENTTYPE: A.type.title,
                    CONTENTPRODUCTTYPE: c.toProductTypeFromGoType(e.goType)
                }
                  , a = u.createObj(e.id, e.trackId, P.cwUxr);
                e.analyticsData = {
                    data: n,
                    name: "search::detail",
                    contentWise: a
                }
            }),
            e
        }
        function O() {
            h = r.$watchCollection("[isAuth, isLoggedIn]", function() {
                r.isAuth && (P.noContents = !1,
                P.message = "",
                P.errorMessage = "",
                I = i.getFilters().then(function(e) {
                    A = e
                }).then(M),
                P.query = t[p.search.queryParam],
                o.setTitleAndDescription(P.query))
            })
        }
        P.getSearchResults = function(e, t) {
            return P.message = "",
            I.then(i.getFilters).then(function(e) {
                return o.trackEvent(P.query, e)
            }).then(function() {
                return function(e, t) {
                    var a = {
                        offset: e,
                        limit: t,
                        enableSuggestions: !1
                    };
                    return w(e, m.type.STRICT) ? N(b).then(function() {
                        return L(A, a)
                    }) : n.when()
                }(e, t)
            }).then(function(a) {
                return function(e, t, a) {
                    var r = {
                        offset: e,
                        limit: t,
                        enableSuggestions: !1,
                        px_search_related: !0
                    };
                    return c.getProperty(a, "count") ? D(m.type.STRICT, a) : w(e, m.type.GHOST) ? N(E).then(function() {
                        return L(A, r)
                    }).catch(function() {
                        return n.when(a)
                    }) : n.when()
                }(e, t, a)
            }).then(function(a) {
                return function(e, t, a) {
                    var r = {
                        offset: e,
                        limit: t,
                        enableSuggestions: !0
                    };
                    return c.getProperty(a, "count") ? D(m.type.GHOST, a) : w(e, m.type.FUZZY) ? N(b).then(function() {
                        return L(A, r)
                    }).then(function(e) {
                        return D(m.type.FUZZY, e)
                    }) : n.when()
                }(e, t, a)
            }).then(o.addFilteredValues).then(_).then($).then(function(n) {
                return function(e, t, n) {
                    return A.showSubscribedOnly ? P.count ? P.count <= t + n && L(Object.assign({}, A, {
                        showSubscribedOnly: !1
                    }), {
                        offset: 0,
                        limit: 0
                    }).then(function(e) {
                        e.count > P.count && (P.message = "upselling.message.someContents")
                    }) : (P.message = "upselling.message.noContents",
                    P.noContents = !0) : P.message = t || e.data.length ? "" : "search.error.noResults",
                    e
                }(n, e, t)
            }).catch(R)
        }
        ,
        P.applyFilters = function(e) {
            f.trackEvent("subscribed::toggle", {
                CHANNELID: "",
                VALUE: e.isToggleSwitchOn ? "ON" : "OFF"
            });
            var t = e.isToggleSwitchOn
              , n = void 0 === t ? A.showSubscribedOnly : t;
            Object.assign(A, e, {
                showSubscribedOnly: n
            }),
            o.changeSearchLocation(A, P.query)
        }
        ,
        P.$onInit = function() {
            O(),
            e.$on("$locationChangeStart", function(e, t, n) {
                g.cleanUrlFiltersOnPathChange(t, n)
            })
        }
        ,
        P.$onDestroy = function() {
            h()
        }
    }
    var Em = {
        searchFields: CONTENTAPI.caTypes.SEARCH_FIELDS.KEYWORDS,
        includeAdults: !1,
        type: {
            STRICT: {
                id: 1,
                translationKey: "search.strictSearch"
            },
            GHOST: {
                id: 2,
                translationKey: "search.ghostSearch"
            },
            FUZZY: {
                id: 3,
                translationKey: "search.fuzzySearch"
            }
        }
    };
    function Tm(e, t, n) {
        "ngInject";
        var a = n.go.date.format.weekDay
          , r = e("date");
        return function(e) {
            var n = t.toTimestamp(e)
              , o = new Date
              , i = new Date(n).getDay()
              , c = o.getDay()
              , s = "";
            return vt()(e) && (s = c === i ? "common.date.today" : c + 1 === i ? "common.date.tomorrow" : r(n, a)),
            s
        }
    }
    function Cm(e, t, n, a, r, i, c) {
        "ngInject";
        var s = c.catalog
          , l = s.types
          , u = xt()(s.orderBy).slice(1)
          , d = o.caTypes.CHANNEL_CONTENT_TYPE
          , g = n.getType
          , p = i.go.live
          , m = l.all.concat(l.vod);
        return u[0].isDefault = !0,
        {
            getTypes: function() {
                var e = v();
                return t.all([t.when(e), g(e)]).then(n.setSelectedItem)
            },
            getSortings: function() {
                var e = a.getSearchDefaultOrderingsIds().then(function(e) {
                    return e.map(function(e) {
                        return u.filter(function(t) {
                            var n = t.id;
                            return n === e
                        })[0]
                    })
                });
                return t.all([e, h()]).then(function(e) {
                    return e[0].map(function(t) {
                        return t.selected = t.id === e[1].id,
                        t
                    })
                })
            },
            getFilters: function() {
                return t.all([g(v()), h()]).then(function(e) {
                    var t = Fe()(e, 2)
                      , n = t[0]
                      , a = t[1];
                    return {
                        type: n,
                        sorting: a
                    }
                })
            },
            isSingleTypeSearch: function(e) {
                return e === d.VOD || e === d.LIVE || e === d.L7D
            }
        };
        function f(e) {
            return vt()(e) ? e : a.getSearchSelectedOrderKey()
        }
        function h() {
            return a.getChannelOrderKey(parseInt(e.sort, 10)).then(f).then(function(e) {
                return u.filter(function(t) {
                    return t.id === e
                })[0]
            })
        }
        function v() {
            return r.checkInstanceAvailability().then(function(e) {
                var t = e || p ? m : l.vod;
                return p && (t = t.concat(l.live)),
                e && (t = t.concat(l.l7d)),
                t
            })
        }
    }
    function Pm(e, t, n, a, r, o) {
        "ngInject";
        var i = o.go.live
          , c = e("goMdlSearchFltrWeekDay")
          , s = e("goFltrDateUniapi");
        return {
            setTitleAndDescription: function(e) {
                n.setMetadataSearch(e)
            },
            trackEvent: function(e, t) {
                return a.trackEvent("search::contentType", {
                    SEARCHNAME: e,
                    SORTTYPESELECTED: t.sorting.id,
                    CONTENTTYPE: t.type.title
                }),
                t
            },
            addFilteredValues: function(e) {
                var t = r.getTime();
                return e.data.forEach(function(e) {
                    e.startTimeWeekDay = c(e.startTime),
                    e.startTimeText = s(e.startTime),
                    e.isAirProgram = e.startTime <= t
                }),
                e
            },
            changeSearchLocation: function(e, n) {
                var a = e.sorting
                  , r = e.showSubscribedOnly
                  , o = e.type
                  , c = {
                    q: n,
                    sort: a.id,
                    showSubscribedOnly: r && r.toString()
                };
                i && (c.type = o.title),
                t.path("search").search(c)
            }
        }
    }
    Tm.$inject = ["$filter", "goSvcUtils", "goCnstConfig"],
    Cm.$inject = ["$routeParams", "$q", "goSvcCatalog", "goSvcOrderBy", "goSvcL7d", "goCnstConfig", "goCnstEnumerated"],
    Pm.$inject = ["$filter", "$location", "goSvcMetadata", "goMdlAnalyticsSvcManager", "goSvcTime", "goCnstConfig"];
    var Im = r.a.module("goMdlSearch", []).config(sm).component("goMdlSearchCmpBreadcrumbs", dm).component("goMdlSearchCmpHeader", fm).component("goMdlSearchCmpResults", Sm).constant("goMdlSearchCnstSearch", Em).filter("goMdlSearchFltrRemoveQuotes", function() {
        return function(e) {
            return e.match(/^".*?"$/) ? e.replace(/\"/g, "") : e
        }
    }).filter("goMdlSearchFltrWeekDay", Tm).factory("goMdlSearchSvcFilter", Cm).factory("goMdlSearchSvcMain", Pm).name;
    function Am(e, t) {
        var n = t.routes
          , a = "/".concat(n.catchup)
          , r = "/".concat(n.catalog)
          , o = "/".concat(n.contents)
          , i = "<go-mdl-thematic-area-cmp-contents></go-mdl-thematic-area-cmp-contents>";
        e.resolveWhen(a, {
            template: "<go-mdl-thematic-area-cmp-catchup-grid></go-mdl-thematic-area-cmp-catchup-grid>",
            page: {
                title: "seoMetadata.title.catchupChannel.main",
                description: "seoMetadata.description.catchupChannel.main",
                eventName: "catchupChannel::grid",
                canonical: a
            }
        }).resolveWhen(a + "/:category", {
            template: "<go-mdl-thematic-area-cmp-catchup-channel></go-mdl-thematic-area-cmp-catchup-channel>",
            page: {
                eventName: "catchupChannel::channel"
            }
        }).resolveWhen(a + "/:category" + o, {
            template: i,
            page: {
                eventName: "catchupChannel::home"
            }
        }).resolveWhen(a + "/:category" + o + "/:genre", {
            template: i,
            page: {
                eventName: "catchupChannel::home"
            }
        }).resolveWhen(r + "/:category?/:genre?", {
            template: "<go-mdl-thematic-area-cmp-vod-channel></go-mdl-thematic-area-cmp-vod-channel>",
            page: {
                eventName: "thematicArea::home"
            }
        })
    }
    Am.$inject = ["$routeProvider", "goCnstEnumerated"];
    var Mm = n(267)
      , Nm = n.n(Mm)
      , wm = (n(449),
    {
        template: Nm.a,
        bindings: {
            total: "<"
        },
        controller: Lm
    });
    function Lm(e, t, n) {
        var a, r, o = this;
        function i() {
            t.getFilters().then(c).then(s)
        }
        function c(e) {
            o.type = e.type.translationKey,
            o.genre = e.genre,
            o.sortingTranslationKey = e.sorting.translationKey
        }
        function s() {
            o.breadcrumbsLoaded = !0
        }
        o.$onChanges = function() {
            o.totalLoaded = !isNaN(parseInt(o.total, 10))
        }
        ,
        o.$onInit = function() {
            a = e.$on("$locationChangeStart", function() {
                i()
            }),
            r = n.$watchCollection("[isAuth, isLoggedIn]", function() {
                n.isAuth && i()
            })
        }
        ,
        o.$onDestroy = function() {
            r && r(),
            a && a()
        }
    }
    Lm.$inject = ["$scope", "goSvcCatalog", "goSvcUserStatus"];
    var $m = n(266)
      , Rm = n.n($m)
      , Dm = (n(447),
    {
        template: Rm.a,
        controller: "goMdlThematicAreaCtrlCatchup"
    })
      , _m = n(265)
      , Om = n.n(_m);
    km.$inject = ["goSvcSlug", "goSvcCatalog"];
    var Um = {
        template: Om.a,
        controller: km
    };
    function km(e, t) {
        "ngInject";
        var n = this
          , a = o.caTypes.NEXT_LEVEL_TYPE.Carousel;
        n.$onInit = function() {
            e.decodeParamId("genre") ? n.showCarousel = !1 : t.getCategory().then(function(e) {
                n.showCarousel = e.nextLevel === a && e.hasChildren
            }).catch(function() {
                n.showCarousel = !1
            })
        }
    }
    var xm = n(264)
      , jm = {
        template: n.n(xm).a,
        controller: "goMdlThematicAreaCtrlCatchup"
    }
      , Bm = (n(445),
    n(263))
      , Fm = n.n(Bm);
    Hm.$inject = ["$scope", "$location", "$q", "$filter", "$timeout", "goSvcSlug", "goMdlThematicAreaSvcMain", "goSvcUserStatus", "goSvcCatalog", "goSvcUtils", "goMdlPopUpsSvcManager", "goSvcMetadata", "goSvcUniapiParameter", "goSvcOrderBy", "goSvcAdultAccess", "goMdlAnalyticsSvcManager", "goSvcUrlChecker", "goMdlAnalyticsSvcContentWise", "goSvcCommercialSegmentation", "goCnstConfig", "goCnstEnumerated", "goSvcRights"];
    var Vm = {
        template: Fm.a,
        controller: Hm
    };
    function Hm(e, t, n, a, r, i, c, s, l, u, d, g, p, m, f, h, v, y, S, b, E, T) {
        "ngInject";
        var C, P, I = E.catalog.types, A = o.caTypes.CONTENT_TYPES, M = b.go.live, N = this, w = E.contentWiseTypes.TA_PAGE, L = {}, $ = n.defer().promise;
        function R() {
            return N.currentChannel.isAdult ? f.checkAdultAccess().then(function(e) {
                return e ? n(function() {
                    return null
                }) : N.currentChannel
            }).catch(function() {
                return f.showMessageAndRedirect(),
                n(function() {
                    return null
                })
            }) : n.when()
        }
        function D(e) {
            y.createUXR(w, e.customUxrSearch).then(function(e) {
                N.cwUxr = e
            })
        }
        function _(e) {
            return l.isShowSubscribedOnly().then(function(t) {
                return Object.assign(L, {
                    showSubscribedOnly: t
                }),
                N.showSubscribedOnly = t,
                e
            })
        }
        function O(e) {
            if (T.canFilterSubscribedContent()) {
                if ((e.isCatchup || e.nextLevel === o.caTypes.NEXT_LEVEL_TYPE.Carousel) && e.hasChildren)
                    return l.getGenre().then(function(e) {
                        return e.showSubscribedFilter ? _(e) : (t.search("showSubscribedOnly", null),
                        e)
                    });
                if (e.showSubscribedFilter)
                    return _(e)
            }
            return t.search("showSubscribedOnly", null),
            n.resolve(e)
        }
        function U() {
            return l.getCategory().then(function(e) {
                return N.isCatchup = e.isCatchup,
                N.category = e,
                N.showType = M,
                L.genre ? (N.currentChannel = L.genre,
                N.currentChannel.parentChannelId = e.id,
                N.currentChannel.parentChannelTitle = e.title,
                N.currentChannel.parentChannelLogo = e.logo,
                N.currentChannel.parentChannelBanner = e.banner,
                v.checkURL(L.genre, e)) : (N.currentChannel = e,
                v.checkURL(e)),
                e
            })
        }
        function k() {
            g.setChannelMetadata(N.currentChannel)
        }
        function x() {
            var e = N.isCatchup ? "catchupChannel" : "thematicArea"
              , t = e.toUpperCase();
            return function(n) {
                var a = {
                    GENREID: L.genre && L.genre.id,
                    GENRENAME: L.genre && L.genre.title,
                    SORTTYPESELECTED: L.sorting.id
                };
                return a.CONTENTTYPE = M ? L.type.title.toUpperCase() : I.vod[0].title,
                a["".concat(t, "ID")] = n.id,
                a["".concat(t, "NAME")] = i.encode(n.title),
                h.trackEvent("".concat(e, "::filter"), a),
                n
            }
        }
        function j(e, t, n) {
            var a = Object.assign({}, L, n)
              , r = a.sorting
              , i = a.type
              , l = a.showSubscribedOnly;
            return m.getSelectedOrder(r.id).then(function(n) {
                return c.getItems(i.id, {
                    contentPid: o.caUtils.toPid(A.CHANNEL, N.currentChannel.id),
                    ca_requiresPin: (a = N.currentChannel.isAdult,
                    a ? null : a),
                    ca_commercialOffer: s.isLoggedIn ? s.profile.commercialOffer : null,
                    ca_subscriptions: l ? s.profile.subscriptionsFilter : null,
                    orderBy: n,
                    offset: e,
                    limit: t
                }, w, N.currentChannel);
                var a
            })
        }
        function B(e) {
            return N.count = e.count,
            e
        }
        function F() {
            N.errorMessage = "common.error.catalogItems"
        }
        function V() {
            C = s.$watchCollection("[isAuth, isLoggedIn]", function() {
                s.isAuth && (N.showSubscribedOnlyGrid = !1,
                N.message = "",
                N.errorMessage = "",
                $ = l.getFilters().then(function(e) {
                    L = e,
                    N.showGenre = !!L.genre
                }).then(U).then(O).then(D).then(H).then(R).then(k))
            })
        }
        function H() {
            var e = L.genre || N.currentChannel;
            t.replace(),
            t.path(a("goFltrDetailsLink")(e))
        }
        function G(e) {
            return e.data.forEach(function(e, t) {
                var n = {
                    CONTENTID: e.id,
                    CONTENTNAME: e.name,
                    CONTENTTYPE: u.swap(o.caTypes.CHANNEL_CONTENT_TYPE)[N.category.contentType],
                    CONTENTPRODUCTTYPE: u.toProductTypeFromGoType(e.goType),
                    CONTENTPOSITION: t
                };
                N.category && (N.category.isCatchup ? (n.CATCHUPCHANNELID = N.category.id,
                n.CATCHUPCHANNELNAME = N.category.title) : (n.THEMATICAREAID = N.category.id,
                n.THEMATICAREANAME = N.category.title)),
                L && L.genre && (n.GENREID = L.genre.id);
                var a = y.createObj(e.id, e.trackId, N.cwUxr);
                e.analyticsData = {
                    data: n,
                    name: N.category.isCatchup ? "catchupChannel::detail" : "thematicArea::detail",
                    contentWise: a
                }
            }),
            e
        }
        function W(e) {
            return e.substring(0, e.lastIndexOf("/"))
        }
        N.getFilteredContents = function(e, t) {
            return N.message = "",
            $.then(function() {
                return j(e, t)
            }).then(B).then(G).then(function(n) {
                return function(e, t, n) {
                    return L.showSubscribedOnly ? N.count ? N.count <= t + n && j(0, 0, {
                        showSubscribedOnly: !1
                    }).then(function(e) {
                        e.count > N.count && (N.message = "upselling.message.someContents")
                    }) : (N.message = "upselling.message.noContents",
                    N.showSubscribedOnlyGrid = !0) : N.message = t || e.data.length ? "" : "thematicArea.noContent",
                    e
                }(n, e, t)
            }).catch(F)
        }
        ,
        N.applyFilters = function(e) {
            var n, a = e.isToggleSwitchOn, r = void 0 === a ? L.showSubscribedOnly : a;
            Object.assign(L, e, {
                showSubscribedOnly: r
            }),
            L.genre && N.currentChannel ? (n = L.genre).parentChannelTitle = N.currentChannel.parentChannelTitle : n = N.currentChannel,
            n && h.trackEvent(n.isCatchup ? "catchupChannel::filter" : "thematicArea::filter", Object.assign({
                GENREID: n.id,
                GENRENAME: n.name,
                CONTENTTYPE: L.type.title,
                SORTTYPESELECTED: L.sorting.id
            }, n.isCatchup ? {
                CATCHUPCHANNELID: n.parentChannelId,
                CATCHUPCHANNELNAME: n.parentChannelTitle
            } : {
                THEMATICAREAID: n.parentChannelId,
                THEMATICAREANAME: n.parentChannelTitle
            })),
            h.trackEvent("subscribed::toggle", {
                CHANNELID: n ? n.id : "",
                VALUE: e.isToggleSwitchOn ? "ON" : "OFF"
            }),
            l.getCategory().then(x).then(function() {
                H(),
                t.search({
                    type: L.type && L.type.title,
                    sort: L.sorting && L.sorting.id,
                    showSubscribedOnly: L.showSubscribedOnly && L.showSubscribedOnly.toString()
                })
            })
        }
        ,
        N.$onInit = function() {
            V(),
            P = e.$on("$locationChangeSuccess", function() {
                N.currentChannel && -1 !== t.path().indexOf(N.currentChannel.id) && (k(),
                P())
            }),
            e.$on("$locationChangeStart", function(e, t, n) {
                l.cleanUrlFiltersOnPathChange(W(t), W(n))
            })
        }
        ,
        N.$onDestroy = function() {
            C && C(),
            P && P()
        }
    }
    var Gm = n(262)
      , Wm = n.n(Gm);
    n(443);
    Ym.$inject = ["$scope", "$q", "goSvcCatalog", "goSvcRights", "goSvcUniapiParameter", "goSvcUserStatus"];
    var qm = {
        template: Wm.a,
        bindings: {
            applyFilters: "<",
            showType: "<",
            showGenre: "<"
        },
        controller: Ym
    };
    function Ym(e, t, n, a, r, i) {
        "ngInject";
        var c = this
          , s = o.caTypes.NEXT_LEVEL_TYPE
          , l = s.Grid
          , u = s.Carousel;
        function d(e) {
            n.isShowSubscribedOnly().then(function(t) {
                c.isShowSubscribedToggleVisible = a.canFilterSubscribedContent() && e.showSubscribedFilter,
                c.isShowSubscribedOnly = t
            })
        }
        c.$onInit = function() {
            i.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return n.getCategory().then(function(e) {
                    !function(e) {
                        c.category = e,
                        c.showGenreOption = !e.isCatchup && e.nextLevel === l,
                        (e.isCatchup || e.nextLevel === u) && e.hasChildren ? (c.isCatchup = e.isCatchup,
                        n.getGenre().then(function(t) {
                            c.genre = t,
                            c.showDoubleBreadcrumb = (e.isCatchup || c.category.nextLevel === u) && c.genre,
                            d(t)
                        }).catch(function() {
                            c.showDoubleBreadcrumb = !1
                        })) : (c.showDoubleBreadcrumb = !1,
                        d(e))
                    }(e)
                })
            })
        }
    }
    function zm(e, t, n, a, r, o) {
        var i, c = this;
        function s(e) {
            return c.message = e.length ? "" : "catchupChannel.noChannels",
            e
        }
        function l() {
            c.message = "common.error.channelList"
        }
        function u(e) {
            return n.getChildren(e.id).then(function(e) {
                return c.channels = e,
                e
            })
        }
        function d(e) {
            return r.checkURL(e),
            e
        }
        function g(e) {
            return o.setChannelMetadata(e),
            e
        }
        c.$onInit = function() {
            i = t.$watchCollection("[isAuth, isLoggedIn]", function() {
                t.isAuth && (c.message = "",
                (e.category ? n.getChannel(a.decodeParamId("category")) : n.getCatchup()).then(function(e) {
                    return c.catchupTitle = e.title,
                    e
                }).then(d).then(g).then(u).then(s).catch(l))
            })
        }
        ,
        c.$onDestroy = function() {
            i && i()
        }
    }
    function Qm(e, t, n, a, r, o) {
        "ngInject";
        return {
            getItems: function(e, n, s, l) {
                var u = {
                    px_channel: n.contentPid,
                    px_filter: a.getFilter(e)
                };
                return r.getNowInvalidationCacheDatetime(e).then(function(a) {
                    return c(e, n, s, l.customUxrSearch).then(function(e) {
                        return !o.isEmptyObject(e) && Object.assign(n, u),
                        t.content(e).get(Object.assign(n, {
                            cachetime: a
                        }))
                    }).then(function(e) {
                        return i(e)
                    })
                })
            },
            getSearchItems: function(e, n, o) {
                var s = {
                    px_filter: a.getFilter(e)
                };
                return r.getNowInvalidationCacheDatetime().then(function(a) {
                    return c(e, n, o).then(function(e) {
                        return Object.assign(n, s, {
                            cachetime: a
                        }),
                        t.contentSearch(e).get(n)
                    }).then(function(e) {
                        return i(e)
                    })
                })
            }
        };
        function i(e) {
            return n.segmentResponse(e)
        }
        function c(t, n, r, i) {
            return e.extendFromChannelContentType(n, t),
            a.getConfig(r, i).then(function(e) {
                return !o.isEmptyObject(e) && Object.assign(n, e.requestParams),
                e
            })
        }
    }
    zm.$inject = ["$routeParams", "goSvcUserStatus", "goSvcLibrary", "goSvcSlug", "goSvcUrlChecker", "goSvcMetadata"],
    Qm.$inject = ["goSvcLibrary", "goSvcCaThematicArea", "goSvcCommercialSegmentation", "goMdlAnalyticsSvcContentWise", "goSvcCacheInvalidator", "goSvcUtils"];
    n(441);
    var Km = r.a.module("goMdlThematicArea", []).config(Am).component("goMdlThematicAreaCmpBreadcrumbs", wm).component("goMdlThematicAreaCmpCatchupChannel", Dm).component("goMdlThematicAreaCmpVodChannel", Um).component("goMdlThematicAreaCmpCatchupGrid", jm).component("goMdlThematicAreaCmpContents", Vm).component("goMdlThematicAreaCmpHeader", qm).constant("goMdlThematicAreaCnstMain", {
        container: {
            topMargin: 70,
            additionalRows: 1
        }
    }).controller("goMdlThematicAreaCtrlCatchup", zm).factory("goMdlThematicAreaSvcMain", Qm).name
      , Xm = n(261)
      , Jm = n.n(Xm)
      , Zm = (n(439),
    {
        template: Jm.a,
        bindings: {
            onGetContent: "=",
            eventName: "<",
            eventCategory: "=",
            eventGenre: "=",
            cwUxr: "<"
        },
        controller: ef
    });
    function ef(e, t, n, a, r, o, i, c, s, l, u, d, g) {
        var p, m, f, h, v = 10, y = this, S = e.Math, b = Array.prototype.splice, E = !1;
        function T(e) {
            var t = e.slice(0);
            return t.unshift(-p, p),
            b.apply(y.contents, t),
            a.when()
        }
        function C() {
            var e, t, n = a.defer(), r = n.promise;
            return E || (E = !0,
            y.infiniteScrollDisabled = !1,
            e = s.getOnScreenLimit(),
            t = y.count ? y.count - i.getContentsLength(y.contents) : null,
            p = null === t ? e : t > e ? e : t,
            n.resolve(o.execEvery(function() {
                y.contents.push({
                    __preloaded__: !0
                })
            }, p, v))),
            r
        }
        function P(e) {
            return function(e) {
                var t = e.data || []
                  , n = i.getContentsLength(y.contents) + t.length
                  , r = y.contents.length - n;
                return y.count = e.count,
                y.contents.splice(n, r),
                p -= r,
                a.when(t)
            }(e).then(T).finally(function() {
                i.isContentToBeRendered(y.contents, y.count) || (y.infiniteScrollDisabled = !0),
                E = !1,
                c.checkPagination(M)
            })
        }
        function I() {
            y.contents = [],
            y.count = void 0,
            y.infiniteScrollDisabled = !0,
            E = !1
        }
        function A(e) {
            return e ? a.when(e) : a.reject()
        }
        function M() {
            return i.isContentToBeRendered(y.contents, y.count) ? C().then(function() {
                var e = y.contents;
                return y.onGetContent(i.getContentsLength(e), i.getPreloadedLength(e))
            }).then(A).then(P).catch(I) : a.when()
        }
        function N() {
            f = l.$watchCollection("[isAuth, isLoggedIn]", function() {
                var e;
                l.isAuth && (e = u.get(),
                y.contents = [],
                y.count = null,
                e ? (u.remove(),
                y.contents = e.data,
                y.count = e.count,
                d.disable()) : t.scrollTop(0),
                M().then(function() {
                    e && t.scrollTop(e.scrollTop || 0),
                    n(function() {
                        r.$broadcast("toggleWatchers", !0)
                    }, 0, !1)
                }))
            })
        }
        y.paginate = function() {
            c.paginate(M, E)
        }
        ,
        y.$onInit = function() {
            y.infiniteScrollDisabled = !0,
            y.contents = [],
            h = r.$on("$locationChangeStart", function(e, n, a) {
                var r = t.scrollTop()
                  , o = n + a;
                d.enable(),
                !u.get(o) && /details\//.test(n) && r && u.put(o, {
                    data: y.contents.slice(0, S.min(s.getOnScreenLimit(r), i.getContentsLength(y.contents))),
                    count: y.count,
                    scrollTop: r
                })
            }),
            N()
        }
        ,
        y.$onDestroy = function() {
            Ka()(f) && f(),
            g.removeHandler(m),
            Ka()(h) && h()
        }
        ,
        m = g.addHandler(M)
    }
    ef.$inject = ["$window", "$document", "$timeout", "$q", "$scope", "goSvcTickWorker", "goMdlSmartGridSvcContent", "goMdlSmartGridSvcPagination", "goSvcBoxLayout", "goSvcUserStatus", "goMdlCachesSvcBackUrl", "goSvcAutoscroll", "goSvcResizeListener"];
    var tf = r.a.module("goMdlSmartGrid", []).component("goMdlSmartGridCmpMain", Zm).factory("goMdlSmartGridSvcContent", function() {
        function e(e, t) {
            return e.filter(function(e) {
                var n = e.hasOwnProperty("__preloaded__");
                return t ? n : !n
            }).length || 0
        }
        function t(t) {
            return e(t, !1)
        }
        return {
            getContentsLength: t,
            getPreloadedLength: function(t) {
                return e(t, !0)
            },
            isContentToBeRendered: function(e, n) {
                return 0 !== n && !n || t(e) < n
            }
        }
    }).factory("goMdlSmartGridSvcPagination", function() {
        var e;
        return {
            checkPagination: function(t) {
                e && (e = !1,
                t())
            },
            paginate: function(t, n) {
                t(),
                e = n
            }
        }
    }).name;
    function nf(e) {
        var t, n = [], a = Object.keys;
        function r(e) {
            n.forEach(function(t) {
                t[e]()
            })
        }
        e.isLoaded = !1,
        e.columnsLoaded = {},
        e.applyFilters = function() {
            var t;
            e.toggle(),
            e.onFilter((t = {},
            n.forEach(function(e) {
                var n = e.getSelected();
                t[n.key] = n.value
            }),
            t))
        }
        ,
        e.$watch("isOpen", function(e) {
            r(e ? "onFilterOpened" : "onFilterClosed")
        }),
        t = e.$watch("columnsLoaded", function(n) {
            e.isLoaded = a(n).every(function(e) {
                return n[e]
            }),
            e.isLoaded && t()
        }, !0),
        this.registerColumn = function(t) {
            e.columnsLoaded[t.key] = !1,
            n.push(t)
        }
        ,
        this.columnFinishedLoading = function(t) {
            e.columnsLoaded[t] = !0
        }
    }
    nf.$inject = ["$scope"];
    var af = n(260)
      , rf = n.n(af);
    n(437);
    function of(e, t, n) {
        return {
            restrict: "E",
            replace: !0,
            require: "^^goMdlSmartFilterDrctMain",
            template: rf.a,
            scope: {
                columnKey: "@",
                translationTitle: "@",
                getItemsSvcFn: "@"
            },
            link: function(a, r, o, i) {
                var c, s;
                a.options = {},
                c = n.$watchCollection("[isAuth, isLoggedIn]", function() {
                    var t = a.getItemsSvcFn.split(".")
                      , r = e.get(t[0])
                      , o = t[1];
                    n.isAuth && r[o]().then(function(e) {
                        a.items = e,
                        e.some(function(e) {
                            if (e.selected)
                                return a.options.selected = e,
                                !0
                        }),
                        i.columnFinishedLoading(a.columnKey)
                    })
                }),
                i.registerColumn({
                    key: a.columnKey,
                    getSelected: function() {
                        return {
                            key: a.columnKey,
                            value: a.options.selected
                        }
                    },
                    onFilterOpened: function() {
                        var e, n = r.find("input:checked"), a = r.find(".go-smart-filter-column__scroll");
                        n && n.offset() && a && a.offset() && (s = t(function() {
                            e = n.parent().offset().top - a.offset().top + a.scrollTop(),
                            a.animate({
                                scrollTop: e
                            }, 300)
                        }, 200))
                    },
                    onFilterClosed: function() {
                        a.items && a.items.some(function(e) {
                            if (e.selected)
                                return a.options.selected = e,
                                !0
                        })
                    }
                }),
                a.$on("$destroy", function() {
                    t.cancel(s),
                    c && c()
                })
            }
        }
    }
    of.$inject = ["$injector", "$timeout", "goSvcUserStatus"];
    var cf = n(259)
      , sf = n.n(cf);
    n(435);
    var lf = r.a.module("goMdlSmartFilter", []).controller("goMdlSmartFilterCtrlMain", nf).directive("goMdlSmartFilterDrctColumn", of).directive("goMdlSmartFilterDrctMain", function() {
        return {
            restrict: "E",
            replace: !0,
            transclude: !0,
            scope: {
                onFilter: "=",
                additionalOverlayClass: "@?"
            },
            template: sf.a,
            controller: "goMdlSmartFilterCtrlMain",
            link: function(e, t) {
                var n = window.document.querySelector("body")
                  , a = ("smart-filtering " + (e.additionalOverlayClass || "")).trim().split(" ");
                function r(n) {
                    t.find(n.target)[0] || e.$evalAsync(e.toggle)
                }
                e.isOpen = !1,
                e.toggle = function() {
                    var t, o;
                    e.isOpen = !e.isOpen,
                    e.isOpen ? ((t = n.classList).add.apply(t, je()(a)),
                    n.addEventListener("click", r)) : ((o = n.classList).remove.apply(o, je()(a)),
                    n.removeEventListener("click", r))
                }
                ,
                e.$on("$locationChangeSuccess", function() {
                    var e;
                    (e = n.classList).remove.apply(e, je()(a)),
                    n.removeEventListener("click", r)
                })
            }
        }
    }).name;
    n(433),
    n(432),
    n(431),
    n(430),
    n(429),
    n(428),
    n(427),
    n(426),
    n(425),
    n(424),
    n(423),
    n(422),
    n(421),
    n(420),
    n(419),
    n(418),
    n(417),
    n(416),
    n(415),
    n(414),
    n(413),
    n(412),
    n(411),
    n(410),
    n(409);
    r.a.module("uniapi.types", []).constant("uaConstants", mg.a);
    var uf = r.a.module("goMdlUniapi", ["uniapi.services.authentication", "uniapi.services.channel", "uniapi.services.configuration", "uniapi.services.epg", "uniapi.services.event", "uniapi.services.interest", "uniapi.services.movie", "uniapi.services.networkpvr", "uniapi.services.instanceparameter", "uniapi.services.payment", "uniapi.services.playback", "uniapi.services.purchase", "uniapi.services.registration", "uniapi.services.time", "uniapi.services.user", "uniapi.services.webonlyregistration", "uniapi.extras.timestamp", "uniapi.extras.retry", "uniapi.extras.timeout", "uniapi.extras.nolimit", "uniapi.extras.login", "uniapi.extras.token", "uniapi.extras.usercache", "uniapi.extras.cache"]).constant("uaerRetries", {
        retryField: "uaerRetries",
        retryNumber: 2
    }).name
      , df = n(258)
      , gf = n.n(df);
    n(408);
    mf.$inject = ["$q", "$location", "$window", "goSvcUserStatus", "goSvcUniapiParameter", "goSvcSubscription"];
    var pf = {
        template: gf.a,
        controller: mf,
        bindings: {
            messageText: "<",
            canShowButton: "<",
            isFirstContent: "<"
        }
    };
    function mf(e, t, n, a, r, o) {
        "ngInject";
        var i, c = this;
        c.$onInit = function() {
            c.isButtonVisible = !1,
            c.canShowButton && (i = a.$watchGroup(["isAuth", "isLoggedIn"], function() {
                return e.all([o.isPortalEnabled(), r.getOnlineChannelLink()]).then(function(e) {
                    var a = Fe()(e, 2)
                      , r = a[0]
                      , o = a[1];
                    c.isButtonVisible = r || o,
                    r ? (c.buttonText = "upselling.message.seeMoreSubscriptions",
                    c.onUpsellClick = function() {
                        return t.url("settings/my-subscriptions")
                    }
                    ) : o && (c.buttonText = "upselling.message.goToOnlineChannel",
                    c.onUpsellClick = function() {
                        return n.open(o, "_blank")
                    }
                    )
                })
            }))
        }
        ,
        c.$onDestroy = function() {
            i && i()
        }
    }
    var ff = n(257)
      , hf = n.n(ff);
    n(406);
    yf.$inject = ["$q", "goMdlHomeSvcHome", "goSvcUniapiParameter", "goSvcLiveChannels"];
    var vf = {
        template: hf.a,
        controller: yf,
        bindings: {
            channel: "<",
            cwUxr: "<"
        }
    };
    function yf(e, t, n, a) {
        "ngInject";
        var r, o = this;
        o.loadContents = function(n, i) {
            return t.getPagedItems(o.channel, o.cwUxr, n, i).then(function(e) {
                var t, c;
                return e.data ? (t = e.data,
                c = e.count) : (t = e,
                e.data = t),
                o.isVisible = t.length,
                c ? c > r && (e.count = r) : t.length < i && (e.count = n + t.length),
                t.forEach(function(e) {
                    e.isNetworkCATCHUP && a.getChannelByCallLetter(e.distributor).then(function(t) {
                        e.channelImage = t.logo
                    }).catch(se.noop)
                }),
                e
            }).catch(function() {
                return o.isVisible = !1,
                e.reject()
            })
        }
        ,
        o.$onInit = function() {
            o.isVisible = !1,
            n.getHomeCarouselContents().then(function(e) {
                r = e
            })
        }
    }
    var Sf = r.a.module("goMdlUpselling", []).component("goMdlUpsellingCmpGrid", vf).component("goMdlUpsellingCmpMessage", pf).name;
    function bf(e, t) {
        e.resolveWhen(t.panic.path, {
            template: "<go-mdl-panic-cmp-main></go-mdl-panic-cmp-main>",
            page: {
                title: "seoMetadata.title.panic",
                description: "seoMetadata.description.panic",
                eventName: "panic::main"
            }
        })
    }
    bf.$inject = ["$routeProvider", "goCnstEnumerated"];
    var Ef = n(256)
      , Tf = n.n(Ef);
    n(404);
    Pf.$inject = ["$location", "goSvcLogger", "goSvcSchedules", "goSvcUserStatus", "goCnstEnumerated", "goSvcCommercialSegmentation"];
    var Cf = {
        template: Tf.a,
        controller: Pf
    };
    function Pf(e, t, n, a, r, o) {
        "ngInject";
        var i, c = t.getLogger("COMPONENT", "goMdlHomeCmpPanic"), s = r.panic.fallbackPath, l = r.panic.searchId, u = this;
        u.$onInit = function() {
            i = a.$watch("isLoggedIn", function() {
                var t;
                t = e.search().id,
                u.liveSchedule = void 0,
                n.getScheduleByPid(t).then(function(e) {
                    return o.segmentData(e)
                }).then(function(e) {
                    u.liveSchedule = e
                }).catch(function(t) {
                    c.debug("could not load highlight", t),
                    e.path(s)
                })
            })
        }
        ,
        u.$onDestroy = function() {
            i(),
            e.search(l, null)
        }
    }
    var If = r.a.module("goMdlPanic", []).component("goMdlPanicCmpMain", Cf).config(bf).name;
    function Af(e) {
        "ngInject";
        e.resolveWhen("/amazon/activation", {
            template: "<go-mdl-bundle-cmp-amazon></go-mdl-bundle-cmp-amazon>",
            page: {
                title: "seoMetadata.title.amazonActivation",
                description: "seoMetadata.description.amazonActivation"
            }
        })
    }
    Af.$inject = ["$routeProvider"];
    var Mf = n(255)
      , Nf = n.n(Mf);
    n(402);
    Lf.$inject = ["$location", "goMdlAnalyticsSvcManager", "goMdlAnalyticsSvcUniapi", "goSvcAmazon", "goSvcUtils"];
    var wf = {
        template: Nf.a,
        controller: Lf
    };
    function Lf(e, t, n, a, r) {
        "ngInject";
        var o = this;
        o.onClick = function() {
            t.trackEvent("amazon::activationClick"),
            o.url ? n.sendBatch().finally(r.redirect(o.url, null, {
                target: "_blank"
            })) : a.amazonCatchupFlow("", !0)
        }
        ,
        o.$onInit = function() {
            t.trackEvent("amazon::activation"),
            o.url = e.search().url,
            a.getAmazonActivationImages().then(function(e) {
                var t = e.banner
                  , n = e.cover;
                o.img = {
                    banner: t,
                    cover: n
                }
            })
        }
    }
    var $f = r.a.module("goMdlBundle", []).config(Af).component("goMdlBundleCmpAmazon", wf).name
      , Rf = n(183)
      , Df = n(181)
      , _f = n(180)
      , Of = n(179)
      , Uf = r.a.module("go.modules", [ja, Za, Vr, to, Xo, ml, Al, Zu, Cd, Fg, qg, vp, cm, Im, Km, tf, lf, uf, Sf, If, $f].concat(je()(function() {
        var e = [];
        H.goCnstConfig.go.catchup && e.push(n(360).goMdlCatchup);
        H.goCnstConfig.go.live && e.push(n(361).goMdlEpg);
        return e
    }()))).config(Rf.a).config(Df.a).config(_f.a).config(Of.a).name;
    var kf = r.a.module("go.views", []).name;
    function xf(e, t, n, a, r, o, i) {
        "ngInject";
        e.html5Mode(!0),
        t.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|file|market):/),
        n.debugEnabled(!1),
        console.logBackup = console.log,
        console.debug = se.noop,
        console.error = se.noop,
        console.info = se.noop,
        console.log = se.noop,
        console.table = se.noop,
        console.trace = se.noop,
        console.warn = se.noop,
        a.useApplyAsync(!0),
        r.errorOnUnhandledRejections(!1),
        o.resourceUrlWhitelist(["self", "".concat(i.go.domain, "/**")]),
        a.interceptors.unshift(["huComposite", function(e) {
            return e(["uaetoAddTimeout", "uaenNoLimitRequestInterceptor", "uaetAddRetries", "uaerAddRetries", "uaerRetryResponseInterceptor", "uaetInvalidTimeResponseInterceptor", "uaeucUserCacheInterceptor", "uaetAuthInterceptor", "uaelTokenInterceptor", "uaecRemoveFromCache", "goSvcTokenCookieInterceptor", "goSvcTokenRenewFutSettingsInterceptor"], {
                flag: "uniapi"
            })
        }
        ]),
        a.interceptors.push("goSvcPromiseQueue")
    }
    function jf(e, t, n) {
        "ngInject";
        e.translations(t.go.i18n.language, n).addInterpolation("$translateMessageFormatInterpolation").preferredLanguage(t.go.i18n.language)
    }
    function Bf(e, t) {
        "ngInject";
        var n = t.cookies;
        e.path = n.path,
        e.secure = n.secure
    }
    function Ff(e, t) {
        "ngInject";
        e.setEnvironment(t.env)
    }
    function Vf(e, t, n, a, r, o, i, c, s, l) {
        "ngInject";
        n.service.GetInstanceSettings.cache = "goMdlCachesSvcStatic",
        s.service.GetRegistrationFields.cache = "goMdlCachesSvcStatic",
        o.service.GetSubtitle.cache = "goMdlCachesSvcStatic",
        a.service.GetAllRecordingSchedules.cache = "goMdlCachesSvcRecording",
        e.service.GetKeyValues.cache = "goMdlCachesSvcUser",
        e.service.GetFutSettings.cache = "goMdlCachesSvcUser",
        r.service.GetUserRights.cache = "goMdlCachesSvcUser",
        t.service.GetUserAvailableStreams.cache = "goMdlCachesSvcUser",
        c.service.GetAvailablePaymentMethods.cache = "goMdlCachesSvcUser",
        c.service.GetAvailablePricingModels.cache = "goMdlCachesSvcUser",
        l.service.GetPersonalChannelContents.cache = "goMdlCachesSvcUser",
        r.service.GetUserPreference.cache = "goMdlCachesSvcUser",
        r.service.GetUserTags.cache = "goMdlCachesSvcGetUserTags",
        r.service.GetCurrentEpisodesForUsers.cache = "goMdlCachesSvcGetUserTags",
        r.service.GetUser.cache = "goMdlCachesSvcGetUser",
        r.service.GetUserServices.cache = "goMdlCachesSvcGetUserServices",
        t.service.GetUserChannelMap.cache = "goMdlCachesSvcNavigation",
        i.service.GetMediaUrlsStb.cache = "goMdlCachesSvcGetMedias",
        a.service.GetRecordingUrl.cache = "goMdlCachesSvcGetMedias",
        i.service.GetUserItemsResumeData.cache = "goMdlCachesSvcGetMedias",
        o.service.GetMovie.cache = "goMdlCachesSvcGetMovie",
        e.service.GetKeyValues.cache = "goMdlCachesSvcGetKeyValues",
        e.service.GetFutSettings.cache = "goMdlCachesSvcGetKeyValues"
    }
    function Hf(e, t, n) {
        "ngInject";
        var a = e.go.uniapi.config
          , r = e.go.contentapi.endpoints.PC[t.env]
          , i = e.go.contentwise.rapEndpoints[t.env];
        o.caInterface.config({
            host: r,
            cwHost: i,
            instance: a.instanceIds[t.env],
            catalog: "default",
            language: t.country.replace(/([a-z]{2}-)([a-z]{2})/, function(e, t, n) {
                return t + n.toUpperCase()
            }),
            timeout: e.go.contentapiConfig.timeout,
            retries: e.go.contentapiConfig.retries
        }),
        o.caInterface.setInterceptors([n.$get()(["uaenNoLimitRequestInterceptor", "goSvcPromiseQueue"])])
    }
    function Gf(e) {
        "ngInject";
        e.configure(["$q", "goSvcBootstrap", function(e, t) {
            return {
                login: t.login
            }
        }
        ])
    }
    Gf.$inject = ["uaelLoginProvider"],
    Hf.$inject = ["goCnstConfig", "goCnstApp", "huCompositeProvider"],
    Vf.$inject = ["uasInstanceParameterServiceProvider", "uasEpgServiceProvider", "uasConfigurationServiceProvider", "uasNetworkPvrServiceProvider", "uasUserServiceProvider", "uasMovieServiceProvider", "uasPlaybackServiceProvider", "uasPurchaseServiceProvider", "uasRegistrationServiceProvider", "uasChannelServiceProvider"],
    Ff.$inject = ["goSvcGoogleAnalyticsProvider", "goCnstApp"],
    Bf.$inject = ["$cookiesProvider", "goCnstEnumerated"],
    jf.$inject = ["$translateProvider", "goCnstConfig", "goCnstTranslations"],
    xf.$inject = ["$locationProvider", "$compileProvider", "$logProvider", "$httpProvider", "$qProvider", "$sceDelegateProvider", "goCnstConfig"];
    n(370);
    n.d(t, "go", function() {
        return Wf
    }),
    n(887),
    n(885),
    n(779),
    n(364);
    var Wf = r.a.module("go", ["ngAnimate", "ngLocale", "ngCookies", "ngSanitize", "ngSp", "infinite-scroll", "angular-inview", "angularViewportWatch", "pascalprecht.translate", "ui.bootstrap", "perfect_scrollbar", "httpu.cacherp", "httpu.caches", "oc.lazyLoad", "vs-repeat", "bcherny/ngimport", F, W, Ze, Dn, $a, Ua, Uf, kf]).config(s).config(Ff).config(xf).config(Vf).config(Hf).config(Bf).config(jf).config(Gf).factory("uaeucUserCache", ["goMdlCachesSvcUser", function(e) {
        return e
    }
    ]).run(["$route", "goSvcBootstrap", function(e, t) {
        t.run()
    }
    ]).name
}
, , function(e, t, n) {}
, , , , , , function(e, t, n) {
    e.exports = {
        phoneLandscapeSize: "576",
        tabletSize: "768",
        desktopSize: "960",
        televisionSize: "1366",
        televisionHdSize: "1766",
        television4kSize: "2166"
    }
}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , , , , , , , , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , , , function(e, t, n) {}
, , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , , function(e, t, n) {}
, , , function(e, t, n) {}
, , function(e, t, n) {}
, , , function(e, t, n) {}
, , function(e, t, n) {}
, , , function(e, t, n) {}
, , function(e, t, n) {}
, , , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , function(e, t, n) {}
, , , , , function(e, t, n) {}
, , , , , , , , , , , , , , , function(e, t) {}
, , function(e, t) {}
, , , , , , , , , , , , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , , , , function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 381 316"><g fill="none" fill-rule="evenodd"><path fill="#000" fill-rule="nonzero" d="M65.766 303.765c0 6.757 53.565 12.235 119.642 12.235 66.078 0 119.643-5.478 119.643-12.235s-53.565-12.233-119.643-12.233c-66.077 0-119.642 5.476-119.642 12.233" opacity=".1"></path><path stroke="#353535" stroke-linecap="round" stroke-width="4.5" d="M174.978 262.17c-12.913 21.797-36.177 29.985-39.838 12.683l-14.155 4.92M181.114 259.723c31.31 8.965 23.446 26.1 22.737 37.07l21.438 6.973M322.23 216.904L348 201M13 221.798l33.132 6.117"></path><path fill="#1A1A1A" stroke="#353535" stroke-width="5.4" d="M53.697 262.17H317.12c2.812 0 5.11-2.282 5.11-5.073V91.073c0-2.79-2.298-5.073-5.11-5.073H53.697c-2.812 0-5.11 2.282-5.11 5.073v166.024c0 2.79 2.298 5.073 5.11 5.073z"></path><path fill="#F5F5F5" fill-rule="nonzero" d="M209.202 162.183c.667 4.022-1.202 7.683-4.175 8.176-2.979.495-5.93-2.365-6.598-6.39-.67-4.026 1.199-7.685 4.179-8.18 2.972-.493 5.925 2.367 6.594 6.394M232.517 158.511c.669 4.024-1.206 7.685-4.18 8.178-2.973.494-5.926-2.367-6.593-6.39-.67-4.027 1.2-7.686 4.173-8.18 2.975-.493 5.932 2.367 6.6 6.392M197.066 179.027c.04.373.073.743.136 1.12 1.584 9.407 9.643 15.924 18.002 14.554 8.356-1.368 13.85-10.107 12.268-19.513-.063-.377-.154-.737-.236-1.103l-30.17 4.942z"></path><path fill="#EC7754" d="M332.54.392l11.068 32.147-32.147 11.07zM16.422 111.539l-15.96-1.117 1.116-15.96z"></path><path fill="#43AAFB" d="M35.46 13.392L24.393 45.539l32.147 11.07zM333.698 273.608l13.694-2.91 2.91 13.694z"></path><path fill="#ECBD01" d="M380.524 252.865l-9.39 17.66-17.658-9.39zM60.142 44.03l1.828-14.888 14.888 1.828z"></path></g></svg>'
}
, function(e, t) {
    e.exports = '<svg viewBox="0 0 23 20" xmlns="http://www.w3.org/2000/svg"><path d="M.54 0h21.92c.2982338 0 .54.241766.54.54v14.92c0 .298234-.2417662.54-.54.54H.54c-.2982338 0-.54-.241766-.54-.54V.54C0 .241766.2417662 0 .54 0zM2 2v12h19V2H2zm5.27 16h8.46c.1491169 0 .27.120883.27.27v1.46c0 .149117-.1208831.27-.27.27H7.27c-.1491169 0-.27-.120883-.27-.27v-1.46c0-.149117.1208831-.27.27-.27z"></path></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512.001 512.001"><path d="M294.111 256.001L504.109 46.003c10.523-10.524 10.523-27.586 0-38.109-10.524-10.524-27.587-10.524-38.11 0L256 217.892 46.002 7.894C35.478-2.63 18.416-2.63 7.893 7.894s-10.524 27.586 0 38.109l209.998 209.998L7.893 465.999c-10.524 10.524-10.524 27.586 0 38.109 10.524 10.524 27.586 10.523 38.109 0L256 294.11l209.997 209.998c10.524 10.524 27.587 10.523 38.11 0 10.523-10.524 10.523-27.586 0-38.109L294.111 256.001z"></path></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34 34"><g fill="none" fill-rule="evenodd"><path d="M0 0h34v34H0z"></path><circle cx="17" cy="17" r="8" fill="#9D1F2E"></circle></g></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34 34"><g fill="none" fill-rule="evenodd"><path d="M0 0h34v34H0z"></path><g fill="#9D1F2E"><path d="M15.532 10.168A8.734 8.734 0 0 0 12.25 17a8.734 8.734 0 0 0 3.282 6.832 7 7 0 1 1 0-13.664z"></path><path d="M21 24a7 7 0 1 1 0-14 7 7 0 0 1 0 14zm-.749-6.234v2.631h1.498v-2.631h2.645v-1.497h-2.645v-2.666H20.25v2.666h-2.645v1.497h2.645z"></path></g></g></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 202 139"><g fill="none" fill-rule="evenodd"><path fill="#000" d="M33 132c0 3.866 31.116 7 69.5 7s69.5-3.134 69.5-7-31.116-7-69.5-7-69.5 3.134-69.5 7" opacity=".1"></path><path stroke="#8E8E8E" stroke-linecap="round" stroke-width="5" d="M95 108c-7.414 12.867-20.771 17.701-22.873 7.487L64 118.392M101 106c17.72 5.292 13.269 15.408 12.867 21.884L126 132M184 81l15-10M3 83l19 4"></path><path fill="#56595C" stroke="#8E8E8E" stroke-width="6" d="M24.97 108h153.06c1.634 0 2.97-1.36 2.97-3.024V6.024C181 4.36 179.664 3 178.03 3H24.97C23.336 3 22 4.36 22 6.024v98.952c0 1.664 1.336 3.024 2.97 3.024"></path><path fill="#FFF" d="M115.939 46.514c.302 2.192-.544 4.187-1.89 4.456-1.349.27-2.685-1.29-2.988-3.482-.302-2.194.543-4.188 1.892-4.458 1.346-.269 2.683 1.29 2.986 3.484M128.939 45.513c.303 2.193-.546 4.188-1.893 4.457-1.346.269-2.682-1.29-2.985-3.482-.302-2.195.544-4.189 1.89-4.458 1.347-.269 2.685 1.29 2.988 3.483M110 58.09c.022.232.04.463.076.699.877 5.88 5.343 9.954 9.975 9.097 4.63-.855 7.676-6.317 6.798-12.197-.034-.235-.085-.46-.13-.689L110 58.09z"></path></g></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 309 162"><g fill="none" fill-rule="evenodd"><path fill="#000" d="M54 155c0 3.866 31.116 7 69.5 7s69.5-3.134 69.5-7-31.116-7-69.5-7-69.5 3.134-69.5 7" opacity=".1"></path><g stroke="#8E8E8E"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="5" d="M114.295 125.521c4.057 14.347-4.522 19.856-4.522 28.399l7.988.294M121.652 122.598c21.146 6.106 11.739 19.443 11.26 26.915l7.629.433M216.276 85c9.793 2.15 15.191 2.987 26.148 0 10.852-2.959 12.839-12.068 12.839-12.068"></path><path fill="#56595C" stroke-width="6" d="M33.391 124.07H213.67c1.923 0 3.497-1.567 3.497-3.48V6.48c0-1.914-1.574-3.48-3.497-3.48H33.39c-1.923 0-3.496 1.566-3.496 3.48V120.59c0 1.914 1.573 3.481 3.496 3.481"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="5" d="M27.873 86.834s-8.315.053-14.576 3.004C7.036 92.788 3.04 99.656 3.04 99.656"></path></g><path fill="#F1F1F1" d="M144 53.66c-1.928.317-3.83-1.457-4.25-3.967-.418-2.51.807-4.802 2.735-5.121 1.93-.319 3.835 1.455 4.255 3.966.418 2.51-.81 4.802-2.74 5.121zM129.036 61.326l13.87 2.697c-.032.29-.076.581-.133.874-.932 4.79-4.807 8.068-8.656 7.32-3.85-.748-6.215-5.239-5.284-10.03.057-.293.125-.58.203-.86z"></path><path fill="#F5F5F5" d="M129.887 49.423c.42 2.51-.807 4.802-2.734 5.12-1.933.319-3.835-1.456-4.253-3.965-.42-2.511.805-4.803 2.737-5.123 1.928-.318 3.831 1.457 4.25 3.968"></path><g fill="#FFF" stroke="#8E8E8E" stroke-width="3"><path d="M297.418 49.06l-59.25 9.384a3.498 3.498 0 0 0-2.914 4.01l5.317 33.573a3.507 3.507 0 0 0 4.011 2.913l59.25-9.384a3.498 3.498 0 0 0 2.914-4.01l-5.317-33.573a3.507 3.507 0 0 0-4.011-2.913z"></path><path d="M303.93 89.566a4.474 4.474 0 0 0-.617-.44l-29.917-18.105c-1.751-1.06-4.345-.662-5.699.871L244.153 98.55a4.751 4.751 0 0 0-.433.561c.193-.001.427-.021.696-.064l58.786-9.31c.292-.047.536-.106.728-.171z"></path><path d="M238.07 58.432c.154.135.36.284.616.439l29.917 18.105c1.752 1.06 4.345.662 5.7-.871l23.544-26.657c.183-.208.327-.397.433-.562a4.717 4.717 0 0 0-.697.064l-58.785 9.31a4.464 4.464 0 0 0-.729.172z"></path></g></g></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 309 162"><g fill="none" fill-rule="evenodd"><path fill="#000" d="M54 155c0 3.866 31.116 7 69.5 7s69.5-3.134 69.5-7-31.116-7-69.5-7-69.5 3.134-69.5 7" opacity=".1"></path><g stroke="#8E8E8E"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="5" d="M114.295 125.521c4.057 14.347-4.522 19.856-4.522 28.399l7.988.294M121.652 122.598c21.146 6.106 11.739 19.443 11.26 26.915l7.629.433M216.276 85c9.793 2.15 15.191 2.987 26.148 0 10.852-2.959 12.839-12.068 12.839-12.068"></path><path fill="#56595C" stroke-width="6" d="M33.391 124.07H213.67c1.923 0 3.497-1.567 3.497-3.48V6.48c0-1.914-1.574-3.48-3.497-3.48H33.39c-1.923 0-3.496 1.566-3.496 3.48V120.59c0 1.914 1.573 3.481 3.496 3.481"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="5" d="M27.873 86.834s-8.315.053-14.576 3.004C7.036 92.788 3.04 99.656 3.04 99.656"></path></g><path fill="#F1F1F1" d="M144 53.66c-1.928.317-3.83-1.457-4.25-3.967-.418-2.51.807-4.802 2.735-5.121 1.93-.319 3.835 1.455 4.255 3.966.418 2.51-.81 4.802-2.74 5.121zM129.266 63.511l14.025-1.722c.04.129.068.261.084.396.271 2.208-2.664 4.386-6.556 4.864-3.892.478-7.267-.925-7.539-3.133a2.334 2.334 0 0 1-.014-.405z"></path><path fill="#F5F5F5" d="M129.887 49.423c.42 2.51-.807 4.802-2.734 5.12-1.933.319-3.835-1.456-4.253-3.965-.42-2.511.805-4.803 2.737-5.123 1.928-.318 3.831 1.457 4.25 3.968"></path><g fill="#FFF" stroke="#8E8E8E" stroke-width="3"><path d="M297.418 49.06l-59.25 9.384a3.498 3.498 0 0 0-2.914 4.01l5.317 33.573a3.507 3.507 0 0 0 4.011 2.913l59.25-9.384a3.498 3.498 0 0 0 2.914-4.01l-5.317-33.573a3.507 3.507 0 0 0-4.011-2.913z"></path><path d="M303.93 89.566a4.474 4.474 0 0 0-.617-.44l-29.917-18.105c-1.751-1.06-4.345-.662-5.699.871L244.153 98.55a4.751 4.751 0 0 0-.433.561c.193-.001.427-.021.696-.064l58.786-9.31c.292-.047.536-.106.728-.171z"></path><path d="M238.07 58.432c.154.135.36.284.616.439l29.917 18.105c1.752 1.06 4.345.662 5.7-.871l23.544-26.657c.183-.208.327-.397.433-.562a4.717 4.717 0 0 0-.697.064l-58.785 9.31a4.464 4.464 0 0 0-.729.172z"></path></g></g></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 27 24"><path d="M20.5 0l-1.146 1.146 4.534 4.542H14v1.625h9.888l-4.534 4.541L20.5 13 27 6.5z"></path><path d="M22 22v2H0V2h14v2H2v18h18v-7h2v7z"></path></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 321 211"><g fill="none" fill-rule="evenodd" transform="translate(1 3)"><path d="M270.047 196.19v11.302H56.634V184.89h213.413v11.301z"></path><path fill="#000" d="M56.634 196.19c0 6.242 47.774 11.302 106.707 11.302 58.933 0 106.706-5.06 106.706-11.302s-47.773-11.301-106.706-11.301-106.707 5.059-106.707 11.3" opacity=".2"></path><path stroke="#494949" stroke-linecap="round" stroke-linejoin="round" stroke-width="5" d="M146.814 160.21c5.284 18.758-5.888 25.962-5.888 37.133l10.402.385M156.395 156.387c27.537 7.984 15.287 25.423 14.662 35.194l9.936.566M37.177 106.174c-9.564 1.81-14.788 2.356-24.755-2.602C2.552 98.66 1.911 86.665 1.911 86.665M316.756 87.523c-3.848 8.941-6.316 13.578-16 19.068-9.592 5.437-19.895-.74-19.895-.74"></path><path fill="#262626" d="M41.457 158.312h234.767a4.567 4.567 0 0 0 4.554-4.552V4.552a4.567 4.567 0 0 0-4.554-4.551H41.457a4.566 4.566 0 0 0-4.552 4.551V153.76a4.566 4.566 0 0 0 4.552 4.552"></path><path stroke="#494949" stroke-width="6" d="M41.457 158.312h234.767a4.567 4.567 0 0 0 4.554-4.552V4.552a4.567 4.567 0 0 0-4.554-4.551H41.457a4.566 4.566 0 0 0-4.552 4.551V153.76a4.566 4.566 0 0 0 4.552 4.552z"></path><ellipse cx="209.777" cy="75.689" fill="#F1F1F1" rx="4.045" ry="4.044"></ellipse><path fill="#F1F1F1" d="M226.155 53.464c.544 3.281-1.054 6.279-3.568 6.696-2.512.416-4.989-1.904-5.534-5.186-.546-3.283 1.05-6.28 3.56-6.697 2.515-.417 4.995 1.903 5.542 5.187M199.383 55.02c.545 3.281-1.05 6.279-3.561 6.695-2.517.417-4.994-1.904-5.539-5.185-.545-3.283 1.049-6.28 3.565-6.698 2.511-.416 4.99 1.904 5.535 5.187"></path></g></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 20"><path d="M15.599 7.284h-7.51L11.842.666l3.756 6.618zM13.066.04h6.267l-2.908 6.115L13.065.04zm4.266 8.45h6.354L13.287 18.75 17.332 8.49zM4.354.04h6.267L7.262 6.155 4.354.04zm12.978 7.244L20.534.718l3.152 6.566h-6.354zM0 7.284L3.153.718l3.202 6.566H0zM8.088 8.49h7.51l-3.755 11.468L8.088 8.49zM0 8.49h6.355l4.044 10.259L0 8.49z"></path></svg>'
}
, function(e, t) {
    e.exports = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 19"><g fill="none" fill-rule="evenodd"><circle cx="8" cy="10" r="8" fill="#FF1744"></circle><text fill="#F1F1F1" font-family="OpenSans-ExtraboldItalic, Open Sans" font-size="14" font-style="italic" font-weight="600"><tspan x="6" y="15">!</tspan></text></g></svg>'
}
, function(e, t, n) {
    var a = {
        "./conflict.svg": 639,
        "./diamond.svg": 638,
        "./error.svg": 637,
        "./external-catchup-icon.svg": 636,
        "./mail-nok.svg": 635,
        "./mail-ok.svg": 634,
        "./ok.svg": 633,
        "./recording-season.svg": 632,
        "./recording.svg": 631,
        "./remove-icon.svg": 630,
        "./tv-icon.svg": 629,
        "./welcome.svg": 628
    };
    function r(e) {
        var t = o(e);
        return n(t)
    }
    function o(e) {
        var t = a[e];
        if (!(t + 1)) {
            var n = new Error('Cannot find module "' + e + '".');
            throw n.code = "MODULE_NOT_FOUND",
            n
        }
        return t
    }
    r.keys = function() {
        return Object.keys(a)
    }
    ,
    r.resolve = o,
    e.exports = r,
    r.id = 640
}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , function(e, t, n) {}
, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, n) {
    "use strict";
    angular.module("ngLocale", [], ["$provide", function(e) {
        var t = "one"
          , n = "other";
        e.value("$locale", {
            DATETIME_FORMATS: {
                AMPMS: ["AM", "PM"],
                DAY: ["domingo", "segunda", "terça", "quarta", "quinta", "sexta", "sábado"],
                MONTH: ["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"],
                SHORTDAY: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"],
                SHORTMONTH: ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"],
                fullDate: "EEEE, d 'de' MMMM 'de' y",
                longDate: "d 'de' MMMM 'de' y",
                medium: "dd/MM/yyyy HH:mm:ss",
                mediumDate: "dd/MM/yyyy",
                mediumTime: "HH:mm:ss",
                short: "dd/MM/yy HH:mm",
                shortDate: "dd/MM/yy",
                shortTime: "HH:mm"
            },
            NUMBER_FORMATS: {
                CURRENCY_SYM: "R$",
                DECIMAL_SEP: ",",
                GROUP_SEP: ".",
                PATTERNS: [{
                    gSize: 3,
                    lgSize: 3,
                    macFrac: 0,
                    maxFrac: 3,
                    minFrac: 0,
                    minInt: 1,
                    negPre: "-",
                    negSuf: "",
                    posPre: "",
                    posSuf: ""
                }, {
                    gSize: 3,
                    lgSize: 3,
                    macFrac: 0,
                    maxFrac: 2,
                    minFrac: 2,
                    minInt: 1,
                    negPre: "(¤",
                    negSuf: ")",
                    posPre: "¤",
                    posSuf: ""
                }]
            },
            id: "pt-br",
            pluralCat: function(e) {
                return 1 == e ? t : n
            }
        })
    }
    ])
}
]);
